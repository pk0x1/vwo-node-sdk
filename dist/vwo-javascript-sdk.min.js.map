{"version":3,"sources":["webpack://vwoSdk/webpack/universalModuleDefinition","webpack://vwoSdk/webpack/bootstrap","webpack://vwoSdk/./lib/services/logging/index.js","webpack://vwoSdk/./lib/enums/FileNameEnum.js","webpack://vwoSdk/./lib/utils/DataTypeUtil.js","webpack://vwoSdk/./lib/constants/index.js","webpack://vwoSdk/./lib/utils/ValidateUtil.js","webpack://vwoSdk/./lib/utils/FunctionUtil.js","webpack://vwoSdk/./lib/utils/CampaignUtil.js","webpack://vwoSdk/./lib/enums/ApiEnum.js","webpack://vwoSdk/./lib/utils/DecisionUtil.js","webpack://vwoSdk/./lib/enums/GoalTypeEnum.js","webpack://vwoSdk/./lib/utils/ObjectUtil.js","webpack://vwoSdk/./lib/utils/ImpressionUtil.js","webpack://vwoSdk/./lib/core/BucketingService.js","webpack://vwoSdk/./lib/enums/LogLevelEnum.js","webpack://vwoSdk/./lib/enums/CampaignTypeEnum.js","webpack://vwoSdk/./lib/enums/segment/index.js","webpack://vwoSdk/./lib/services/HooksManager.js","webpack://vwoSdk/./lib/utils/UuidUtil.js","webpack://vwoSdk/./lib/enums/UrlEnum.js","webpack://vwoSdk/./lib/utils/SettingsFileUtil.js","webpack://vwoSdk/./lib/index.js","webpack://vwoSdk/./lib/VWO.js","webpack://vwoSdk/./lib/api/index.js","webpack://vwoSdk/./lib/api/activate.js","webpack://vwoSdk/./lib/core/VariationDecider.js","webpack://vwoSdk/./lib/enums/DataTypeEnum.js","webpack://vwoSdk/./node_modules/murmurhash/murmurhash.js","webpack://vwoSdk/./lib/services/logging/LoggingManager.js","webpack://vwoSdk/./lib/enums/AnsiColorEnum.js","webpack://vwoSdk/./lib/enums/LogMessageEnum.js","webpack://vwoSdk/./lib/utils/LogMessageUtil.js","webpack://vwoSdk/./lib/services/logging/ConsoleLogManager.js","webpack://vwoSdk/./lib/enums/StatusEnum.js","webpack://vwoSdk/./lib/core/SegmentEvaluator.js","webpack://vwoSdk/./lib/enums/segment/SegmentOperandTypesEnum.js","webpack://vwoSdk/./lib/enums/segment/SegmentOperatorTypesEnum.js","webpack://vwoSdk/./lib/enums/segment/SegmentOperandValueTypeRegexesEnum.js","webpack://vwoSdk/./lib/enums/segment/SegmentOperandValuesEnum.js","webpack://vwoSdk/./lib/utils/SegmentUtil.js","webpack://vwoSdk/./lib/enums/HooksEnum.js","webpack://vwoSdk/./node_modules/uuid/v5.js","webpack://vwoSdk/./node_modules/uuid/lib/v35.js","webpack://vwoSdk/./node_modules/uuid/lib/bytesToUuid.js","webpack://vwoSdk/./node_modules/uuid/lib/sha1-browser.js","webpack://vwoSdk/./lib/api/getVariation.js","webpack://vwoSdk/./lib/api/track.js","webpack://vwoSdk/./lib/api/isFeatureEnabled.js","webpack://vwoSdk/./lib/api/getFeatureVariableValue.js","webpack://vwoSdk/./lib/utils/FeatureUtil.js","webpack://vwoSdk/./lib/enums/FeatureVariableTypeEnum.js","webpack://vwoSdk/./lib/api/push.js","webpack://vwoSdk/./lib/services/EventQueue.js","webpack://vwoSdk/./lib/utils/EventDispatcherUtil.js","webpack://vwoSdk/./lib/utils/HttpImageUtil.js","webpack://vwoSdk/./lib/services/SettingsFileManager.js","webpack://vwoSdk/./lib/utils/XhrUtil.js","webpack://vwoSdk/./lib/schemas/SettingsFileSchema.js","webpack://vwoSdk/./node_modules/superstruct/lib/index.es.js","webpack://vwoSdk/./lib/services/UsageStats.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","logging","require","INDEX","VWO","API","Activate","GetVariation","Track","IsFeatureEnabled","GetFeatureVariableValue","Push","SegmentEvaluator","BucketingService","VariationDecider","ConsoleLogManager","EventQueue","LoggingManager","SettingsFileManager","BatchEventsQueue","CampaignUtil","DataTypeUtil","EventDispatcher","EventDispatcherUtil","FeatureUtil","Functionutil","ImpressionUtil","UuidUtil","ValidateUtil","DecisionUtil","HttpHandlerUtil","UsageStatsUtil","_toStringValue","val","toString","isNumber","isString","isObject","isFunction","isBoolean","isUndefined","isNull","isArray","packageFile","SDK_NAME","version","SDK_VERSION","PLATFORM","SEED_VALUE","MAX_TRAFFIC_PERCENT","MAX_TRAFFIC_VALUE","MAX_EVENTS_PER_REQUEST","DEFAULT_EVENTS_PER_REQUEST","DEFAULT_REQUEST_TIME_INTERVAL","STATUS_RUNNING","SEED_URL","HTTP_PROTOCOL","HTTPS_PROTOCOL","SDK_QUERY_PARAM","SDK_VERSION_QUERY_PARAM","DataTypeEnum","ApiEnum","GoalTypeEnum","APIMethodArgumentsValidationEnum","ACTIVATE","campaignKey","userId","customVariables","variationTargetingVariables","userStorageData","shouldTrackReturningUser","metaData","type","STRING","OBJECT","BOOLEAN","TRACK","goalIdentifier","goalTypeToTrack","ALL","STRING_NULL_UNDEFINED_ARRAY","IS_FEATURE_ENABLED","GET_FEATURE_VARIABLE_VALUE","variableKey","PUSH","tagKey","tagValue","GET_VARIATION_NAME","isValidValue","undefined","isValidString","isValidNumber","isValidFunction","isValidBoolean","isValidObject","areValidParamsForAPIMethod","argsObj","args","method","validators","length","argConfig","argValue","NUMBER","push","every","FunctionUtil","cloneObject","obj","JSON","parse","stringify","getRandomNumber","Math","random","getCurrentUnixTimestamp","ceil","Date","matchWithRegex","string","regex","match","RegExp","err","FileNameEnum","logger","getLogger","LogLevelEnum","LogMessageEnum","LogMessageUtil","file","log","ERROR","build","ERROR_MESSAGES","REGEX_CREATION_FAILED","getCurrentTime","toISOString","convertObjectKeysToString","properties","excludedProperties","queryParams","prop","indexOf","Constants","CampaignTypeEnum","_getVariationBucketRange","variationWeight","startRange","min","getCampaignBasedOnId","settingsFile","campaignId","campaign","campaigns","parseInt","id","scaleVariationWeights","variations","totalWeight","reduce","acc","variation","weight","forEach","getCampaign","getCampaignsForKeys","campaignKeys","getCampaignsForGoal","goal","getCampaignGoal","NO_CAMPAIGN_FOUND","getCampaignStatus","status","toLowerCase","isCampaignRunning","validateCampaign","keys","setVariationAllocation","numberOfVariations","currentAllocation","assignRangeValues","INFO","INFO_MESSAGES","VARIATION_RANGE_ALLOCATION","variationName","start","startVariationAllocation","end","endVariationAllocation","setCampaignAllocation","stepFactor","desiredCampaignGoal","goals","identifier","getCampaignVariation","desiredVariation","getControlForCampaign","control","isFeatureTestCampaign","FEATURE_TEST","isFeatureRolloutCampaign","FEATURE_ROLLOUT","isAbCampaign","AB","isPartOfGroup","campaignGroups","groupId","groupName","groups","getGroupCampaigns","getBucketingSeed","isBucketingSeedEnabled","LAUNCH","StatusEnum","HooksManager","HooksEnum","SegmentationTypeEnum","getVariation","config","isTrackUserAPI","newGoalIdentifier","api","vwoUserId","generateFor","accountId","decision","campaignType","campaignName","event","DECISION_TYPES","CAMPAIGN_DECISION","isForcedVariationEnabled","sdkVersion","source","assign","_vwoUserId","isUserListEnabled","whitelistedVariation","_checkForWhitelisting","storedVariation","_checkForUserStorage","_checkForPreSegmentation","isUserPartOfCampaign","campaignList","isWhitelistedOrStoredVariation","_checkForStorageAndWhitelisting","CALLED_CAMPAIGN_NOT_WINNER","inEligibleCampaignKeys","eligibleCampaignKeys","getEligbleCampaigns","eligibleCampaigns","inEligibleCampaigns","DEBUG","DEBUG_MESSAGES","GOT_ELIGIBLE_CAMPAIGNS","slice","inEligibleText","noOfEligibleCampaigns","noOfGroupCampaigns","evaluateTrafficAndGetVariation","_normalizeAndFindWinningCampaign","_evaluateWhitelisting","disableLogs","targetedVariations","segments","PASSED","FAILED","SEGMENTATION_STATUS","segmentationType","SEGMENTATION_SKIPPED","_getVariation","calculateBucketValue","variationId","_getStoredVariationAndGoalIdentifiers","userData","_getStoredUserData","GETTING_STORED_VARIATION","NO_STORED_VARIATION","_getStoredVariation","data","userStorageMap","userStorageService","NO_USER_STORAGE_SERVICE_GET","GETTING_DATA_USER_STORAGE_SERVICE","GET_USER_STORAGE_SERVICE_FAILED","_saveUserData","isSaved","NO_USER_STORAGE_SERVICE_SET","set","SETTING_DATA_USER_STORAGE_SERVICE","ex","SET_USER_STORAGE_SERVICE_FAILED","calledCampaign","otherCampaignWinner","some","groupCampaign","OTHER_CAMPAIGN_SATISFIES_WHITELISTING_STORAGE","getVariationAllotted","VARIATION_ALLOCATED","NO_VARIATION_ALLOCATED","execute","fromUserStorageService","isUserWhitelisted","isFeatureEnabled","variationString","whitelistingResult","WHITELISTING_SKIPPED","GOT_STORED_VARIATION","storedGoalIdentifier","isStoredVariation","CAMPAIGN_NOT_ACTIVATED","apiName","reason","shortlistedCampaigns","floor","winnerCampaign","GOT_WINNER_CAMPAIGN","REVENUE","CUSTOM","ObjectUtil","areObjectKeys","getKeyValue","objectValues","map","UrlEnum","getBaseProperties","configObj","sId","u","getPrimaryProperties","getReportingProperties","account_id","ap","buildEventForPushing","url","BASE_URL","tags","encodeURIComponent","IMPRESSION_FOR_PUSH","this","_getStringifiedLogProperties","buildBatchEventForPushing","buildEventForTrackingUser","usageStats","experiment_id","combination","ed","TRACK_USER","IMPRESSION_FOR_TRACK_USER","buildBatchEventForTrackingUser","buildEventForTrackingGoal","revenue","goalId","TRACK_GOAL","IMPRESSION_FOR_TRACK_GOAL","buildBatchEventForTrackingGoal","sdkKey","logProperties","env","Hasher","_generateBucketValue","hashValue","maxValue","multiplier","ratio","pow","multipliedValue","bucketValue","_getBucketValueForUser","seed","disableLog","v3","USER_HASH_BUCKET_VALUE","trafficAllocation","percentTraffic","valueAssignedToUser","isUserPart","USER_ELIGIBILITY_FOR_CAMPAIGN","bucketUserToVariation","INVALID_USER_ID","_generateHashValue","VARIATION_HASH_BUCKET_VALUE","AnsiColorEnum","NOTSET","WARN","LogLevelColorInfoEnum","BOLD","WHITE","RESET","LIGHTBLUE","CYAN","YELLOW","RED","LogLevelInfoEnum","LogNumberLevel","_0","_1","_2","_3","_4","SegmentEnum","SegmentOperandTypes","SegmentOperatorTypes","SegmentOperandValueTypeRegexes","SegmentOperandValues","init","callback","integrations","uuidv5","VWO_NAMESPACE","URL","hash","userIdNamespace","generate","desiredUuid","replace","toUpperCase","UUID_FOR_USER","namespace","SETTINGS_URL","WEBHOOK_SETTINGS_URL","BATCH_EVENTS","protocol","hostname","path","isViaWebhook","port","send","console","error","SettingsFileUtil","setLogHandler","setLogLevel","logError","Error","setLogger","getSettingsFile","launch","sdkConfig","isDevelopmentMode","includes","level","pollingInterval","POLLING_INTERVAL_INVALID","SDK_KEY_NOT_PROVIVED","SDK_KEY_NOT_STRING","batchEvents","EVENT_BATCHING_NOT_OBJECT","SDK_CONFIG_CORRUPTED","setLogColorMode","haveColoredLogs","CUSTOM_LOGGER_USED","CUSTOM_LOGGER_MISCONFIGURED","LOG_LEVEL_SET","SET_DEVELOPMENT_MODE","SettingsFileService","UsageStats","getVariationName","settingsFileManager","isSettingsFileValid","VALID_CONFIGURATION","checkAndPoll","eventQueue","getConfig","collectUsageStats","processSettingsFile","SDK_INITIALIZED","INVALID_SETTINGS_FILE","options","activate","message","campaignSpecifier","track","getFeatureVariableValue","getAndUpdateSettingsFile","vwoInstance","areParamsValid","ACTIVATE_API_MISSING_PARAMS","CAMPAIGN_NOT_RUNNING","INVALID_API","INVALID_VARIATION_KEY","USER_ALREADY_TRACKED","batchEventsQueue","enqueue","getUsageStats","process","Bucketer","response","getVariationOfCampaignForUser","GOT_VARIATION_FOR_USER","USER_NOT_PART_OF_CAMPAIGN","USER_GOT_NO_VARIATION","MurmurHashV3","remainder","bytes","h1","h1b","c1","c2","k1","charCodeAt","murmur","v2","str","k","h","globalLogLevel","isColoredLogEnabled","globalLogHandler","LogManager","_customLog","getLogLevel","getLogColorMode","GREEN","GOT_FROM_CACHE","RESET_CACHE","SET_IN_CACHE","SETTINGS_FILE_PROCESSED","USER_NOT_PART_OF_Campaign","STARTED_POLLING","BATCH_EVENT_LIMIT_EXCEEDED","BULK_NOT_PROCESSED","BEFORE_FLUSHING","FLUSH_EVENTS","API_HAS_CORRUPTED_SETTINGS_FILE","GET_FEATURE_VARIABLE_MISSING_PARAMS","GET_VARIATION_API_MISSING_PARAMS","IMPRESSION_FAILED","IS_FEATURE_ENABLED_API_MISSING_PARAMS","PUSH_INVALID_PARAMS","SEGMENTATION_ERROR","SETTINGS_FILE_CORRUPTED","TAG_KEY_LENGTH_EXCEEDED","TAG_VALUE_LENGTH_EXCEEDED","TRACK_API_GOAL_NOT_FOUND","TRACK_API_MISSING_PARAMS","TRACK_API_REVENUE_NOT_PASSED_FOR_REVENUE_GOAL","UNABLE_TO_CAST_VALUE","VARIABLE_NOT_FOUND","POLLING_FAILED","NO_BATCH_QUEUE","FEATURE_ENABLED_FOR_USER","FEATURE_NOT_ENABLED_FOR_USER","IMPRESSION_SUCCESS","USER_RECEIVED_VARIABLE_VALUE","VARIABLE_NOT_USED_RETURN_DEFAULT_VARIABLE_VALUE","GOAL_ALREADY_TRACKED","POLLING_SUCCESS","SETTINGS_FILE_UPDATED","BULK_IMPRESSION_SUCCESS","AFTER_FLUSHING","SETTINGS_NOT_UPDATED","WARNING_MESSAGES","nargs","template","index","result","logLevel","prefix","logMessage","shouldLog","consoleLog","targetLogLevel","logArguments","info","apply","warn","operandCustomVariablesParser","operandUserParser","AND","OR","NOT","CUSTOM_VARIABLE","USER","dsl","evaluator","operator","subDsl","list","LOWER","LOWER_MATCH","WILDCARD","WILDCARD_MATCH","REGEX","REGEX_MATCH","STARTING_STAR","ENDING_STAR","LOWER_VALUE","STARTING_ENDING_STAR_VALUE","STARTING_STAR_VALUE","ENDING_STAR_VALUE","REGEX_VALUE","EQUAL_VALUE","extractOperandValue","operand","processValues","operandValue","processedOperandValue","parseFloat","processedTagValue","preProcessTagValue","preProcessOperandValue","operandType","startingStar","endingStar","operandKey","processedValues","endsWith","startsWith","pattern","test","extractResult","users","split","trim","v35","sha1","bytesToUuid","hashfunc","generateUUID","buf","offset","off","unescape","Array","stringToBytes","uuid","hex","uuidToBytes","TypeError","concat","idx","DNS","byteToHex","substr","bth","join","f","x","y","z","ROTL","K","H","msg","N","M","j","W","a","b","e","T","GOAL_TYPE_TO_TRACK_DEFAULT","GOAL_IDENTIFIER_SEPERATOR","revenueValue","trackCampaignGoal","variable","getVariableForFeature","getVariableValueForVariation","variableValue","getTypeCastVariableValue","FeatureVariableTypeEnum","variableData","variables","variationVariable","variableType","typeCastedValue","INTEGER","isNaN","DOUBLE","running","queue","eventName","dispatch","executeNext","shift","parsedUrl","sendCall","endPoint","noop","HttpImageUtil","host","pathname","successCallback","errorCallback","isCallbackCalled","img","Image","onload","onerror","src","validateSettingsFile","_configObj","_clonedSettingsFile","lastSettingsFile","setInterval","then","latestSettingsFile","stringifiedLatestSettingsFile","updateSettingsFile","_e","_setVariationBucketing","Promise","resolve","_reject","settings","_err","XhrUtil","_getStoredSettings","parsedSettings","isStoredData","getSettings","warning","reject","xhr","XMLHttpRequest","open","parsedXhrResponse","setSettings","validate","number","boolean","array","optional","union","record","campaignGoalSchema","variableObjectSchema","campaignVariationSchema","changes","campaignObjectSchema","groupSchema","settingsFileSchema","_defineProperty","configurable","writable","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread2","target","arguments","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","toFailures","context","fail","iteratorShift","input","done","next","func","Struct","props","schema","coercer","validator","refiner","StructError","failure","moreFailures","branch","rest","failuresResult","super","failures","stack","__proto__","assert","struct","coerce","ret","is","coercing","check","ctx","v","parent","coercion","fn","defaulted","S","fallback","strict","isPlainObject","changed","masked","getPrototypeOf","empty","refinement","max","regexp","any","Element","entries","date","getTime","dynamic","enums","values","toLiteralString","instance","Class","intersection","Structs","lazy","literal","constant","Key","Value","Map","never","nullable","knowns","Never","createObjectCoercer","unknowns","Set","delete","partial","tuple","Elements","Number"],"mappings":"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","file":"vwo-javascript-sdk.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\t// CommonJS2\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\t// AMD\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\t// CommonJS\n\telse if(typeof exports === 'object')\n\t\texports[\"vwoSdk\"] = factory();\n\t// Root\n\telse\n\t\troot[\"vwoSdk\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 20);\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst logging = require('./LoggingManager');\n\nmodule.exports = logging;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst LIB_PATH = 'lib';\nconst CORE_PATH = 'lib/core';\nconst UTIL_PATH = 'lib/util';\nconst SERVICES_PATH = 'lib/services';\n\nmodule.exports = {\n  INDEX: `${LIB_PATH}/index`,\n\n  VWO: `${LIB_PATH}/VWO`,\n\n  API: `${LIB_PATH}/api/index`,\n\n  Activate: `${LIB_PATH}/api/activate`,\n  GetVariation: `${LIB_PATH}/api/getVariation`,\n  Track: `${LIB_PATH}/api/track`,\n  IsFeatureEnabled: `${LIB_PATH}/api/isFeatureEnabled`,\n  GetFeatureVariableValue: `${LIB_PATH}/api/getFeatureVariableValue`,\n  Push: `${LIB_PATH}/api/push`,\n\n  SegmentEvaluator: `${CORE_PATH}/SegmentEvaluator`,\n  BucketingService: `${CORE_PATH}/BucketingService`,\n  VariationDecider: `${CORE_PATH}/VariationDecider`,\n\n  ConsoleLogManager: `${SERVICES_PATH}/ConsoleLogManager`,\n  EventQueue: `${SERVICES_PATH}/EventQueue`,\n  LoggingManager: `${SERVICES_PATH}/LoggingManager`,\n  SettingsFileManager: `${SERVICES_PATH}/SettingsFileManager`,\n  BatchEventsQueue: `${SERVICES_PATH}/BatchEventsQueue`,\n\n  CampaignUtil: `${UTIL_PATH}/CampaignUtil`,\n  DataTypeUtil: `${UTIL_PATH}/DataTypeUtil`,\n  EventDispatcher: `${UTIL_PATH}/EventDispatcher`,\n  EventDispatcherUtil: `${UTIL_PATH}/EventDispatcherUtil`,\n  FeatureUtil: `${UTIL_PATH}/FeatureUtil`,\n  Functionutil: `${UTIL_PATH}/Functionutil`,\n  ImpressionUtil: `${UTIL_PATH}/ImpressionUtil`,\n  UuidUtil: `${UTIL_PATH}/UuidUtil`,\n  ValidateUtil: `${UTIL_PATH}/ValidateUtil`,\n  DecisionUtil: `${UTIL_PATH}/DecisionUtils`,\n  HttpHandlerUtil: `${UTIL_PATH}/HttpHandlerUtil`,\n  UsageStatsUtil: `${SERVICES_PATH}/UsageStats`\n};\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DataTypeUtil = {\n  _toStringValue: function(val) {\n    return Object.prototype.toString.call(val);\n  },\n  isNumber: function(val) {\n    return DataTypeUtil._toStringValue(val) === '[object Number]';\n  },\n  isString: function(val) {\n    return DataTypeUtil._toStringValue(val) === '[object String]';\n  },\n  isObject: function(val) {\n    return DataTypeUtil._toStringValue(val) === '[object Object]';\n  },\n  isFunction: function(val) {\n    return DataTypeUtil._toStringValue(val) === '[object Function]';\n  },\n  isBoolean: function(val) {\n    return DataTypeUtil._toStringValue(val) === '[object Boolean]';\n  },\n  isUndefined: function(val) {\n    return DataTypeUtil._toStringValue(val) === '[object Undefined]';\n  },\n  isNull: function(val) {\n    return DataTypeUtil._toStringValue(val) === '[object Null]';\n  },\n  isArray: function(val) {\n    return DataTypeUtil._toStringValue(val) === '[object Array]';\n  }\n};\n\nmodule.exports = DataTypeUtil;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* global SDK_NAME, SDK_VERSION */\n\nlet packageFile = {};\n\n// For javascript-sdk, to keep the build size low\n// avoid adding the whole package file in the file\nif (typeof process.env === 'undefined') {\n  packageFile = {\n    name: SDK_NAME,\n    version: SDK_VERSION\n  };\n} else {\n  packageFile = require('../../package.json');\n}\n\nmodule.exports = {\n  SDK_NAME: packageFile.name,\n  SDK_VERSION: packageFile.version,\n\n  PLATFORM: 'server',\n\n  SEED_VALUE: 1,\n\n  MAX_TRAFFIC_PERCENT: 100,\n  MAX_TRAFFIC_VALUE: 10000,\n  MAX_EVENTS_PER_REQUEST: 5000,\n\n  DEFAULT_EVENTS_PER_REQUEST: 100,\n  DEFAULT_REQUEST_TIME_INTERVAL: 600, // 10 * 60(secs) = 600 secs i.e. 10 minutes\n\n  STATUS_RUNNING: 'RUNNING',\n\n  SEED_URL: 'https://vwo.com',\n\n  HTTP_PROTOCOL: 'http://',\n  HTTPS_PROTOCOL: 'https://',\n\n  SDK_QUERY_PARAM: 'sdk',\n  SDK_VERSION_QUERY_PARAM: 'sdk-v'\n};\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DataTypeUtil = require('./DataTypeUtil');\nconst DataTypeEnum = require('../enums/DataTypeEnum');\nconst ApiEnum = require('../enums/ApiEnum');\nconst GoalTypeEnum = require('../enums/GoalTypeEnum');\n\nconst APIMethodArgumentsValidationEnum = {\n  [ApiEnum.ACTIVATE]: function({\n    campaignKey,\n    userId,\n    customVariables = {},\n    variationTargetingVariables = {},\n    userStorageData = {},\n    shouldTrackReturningUser = false,\n    metaData = {}\n  }) {\n    return [\n      {\n        key: 'campaignKey',\n        value: campaignKey,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'userId',\n        value: userId,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'customVariables',\n        value: customVariables,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'variationTargetingVariables',\n        value: variationTargetingVariables,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'userStorageData',\n        value: userStorageData,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'shouldTrackReturningUser',\n        value: shouldTrackReturningUser,\n        type: DataTypeEnum.BOOLEAN\n      },\n      {\n        key: 'metaData',\n        value: metaData,\n        type: DataTypeEnum.OBJECT\n      }\n    ];\n  },\n  [ApiEnum.TRACK]: function({\n    campaignKey,\n    userId,\n    goalIdentifier,\n    customVariables = {},\n    variationTargetingVariables = {},\n    userStorageData = {},\n    goalTypeToTrack = GoalTypeEnum.ALL,\n    shouldTrackReturningUser = false,\n    metaData = {}\n  }) {\n    return [\n      {\n        key: 'campaignKey',\n        value: campaignKey,\n        type: DataTypeEnum.STRING_NULL_UNDEFINED_ARRAY\n      },\n      {\n        key: 'userId',\n        value: userId,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'goalIdentifier',\n        value: goalIdentifier,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'customVariables',\n        value: customVariables,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'variationTargetingVariables',\n        value: variationTargetingVariables,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'userStorageData',\n        value: userStorageData,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'goalTypeToTrack',\n        value: goalTypeToTrack,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'shouldTrackReturningUser',\n        value: shouldTrackReturningUser,\n        type: DataTypeEnum.BOOLEAN\n      },\n      {\n        key: 'metaData',\n        value: metaData,\n        type: DataTypeEnum.OBJECT\n      }\n    ];\n  },\n  [ApiEnum.IS_FEATURE_ENABLED]: function({\n    campaignKey,\n    userId,\n    customVariables = {},\n    variationTargetingVariables = {},\n    userStorageData = {},\n    shouldTrackReturningUser = false,\n    metaData = {}\n  }) {\n    return [\n      {\n        key: 'campaignKey',\n        value: campaignKey,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'userId',\n        value: userId,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'customVariables',\n        value: customVariables,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'variationTargetingVariables',\n        value: variationTargetingVariables,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'userStorageData',\n        value: userStorageData,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'shouldTrackReturningUser',\n        value: shouldTrackReturningUser,\n        type: DataTypeEnum.BOOLEAN\n      },\n      {\n        key: 'metaData',\n        value: metaData,\n        type: DataTypeEnum.OBJECT\n      }\n    ];\n  },\n  [ApiEnum.GET_FEATURE_VARIABLE_VALUE]: function({\n    campaignKey,\n    variableKey,\n    userId,\n    customVariables = {},\n    variationTargetingVariables = {},\n    userStorageData = {},\n    metaData = {}\n  }) {\n    return [\n      {\n        key: 'campaignKey',\n        value: campaignKey,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'variableKey',\n        value: variableKey,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'userId',\n        value: userId,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'customVariables',\n        value: customVariables,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'variationTargetingVariables',\n        value: variationTargetingVariables,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'userStorageData',\n        value: userStorageData,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'metaData',\n        value: metaData,\n        type: DataTypeEnum.OBJECT\n      }\n    ];\n  },\n  [ApiEnum.PUSH]: function({ tagKey, tagValue, userId }) {\n    return [\n      {\n        key: 'tagKey',\n        value: tagKey,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'tagValue',\n        value: tagValue,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'userId',\n        value: userId,\n        type: DataTypeEnum.STRING\n      }\n    ];\n  }\n};\n// both have same\nAPIMethodArgumentsValidationEnum[ApiEnum.GET_VARIATION_NAME] = APIMethodArgumentsValidationEnum[ApiEnum.ACTIVATE];\n\nconst ValidateUtil = {\n  isValidValue: function(value) {\n    return !!(value !== undefined && value);\n  },\n  isValidString: function(value) {\n    return ValidateUtil.isValidValue(value) && DataTypeUtil.isString(value);\n  },\n  isValidNumber: function(value) {\n    return ValidateUtil.isValidValue(value) && DataTypeUtil.isNumber(value);\n  },\n  isValidFunction: function(value) {\n    return ValidateUtil.isValidValue(value) && DataTypeUtil.isFunction(value);\n  },\n  isValidBoolean: function(value) {\n    return value !== undefined && DataTypeUtil.isBoolean(value);\n  },\n  isValidObject: function(value) {\n    return value !== undefined && DataTypeUtil.isObject(value);\n  },\n  areValidParamsForAPIMethod: argsObj => {\n    let isValid = false;\n    let args = APIMethodArgumentsValidationEnum[argsObj.method](argsObj);\n\n    let validators = [];\n\n    for (let i = 0; i < args.length; i++) {\n      let argConfig = args[i];\n      let argValue = argConfig.value;\n      let dataType = argConfig.type;\n      // let value;\n\n      switch (dataType) {\n        case DataTypeEnum.NUMBER:\n          validators.push(ValidateUtil.isValidNumber(argValue));\n          break;\n        case DataTypeEnum.STRING:\n          validators.push(ValidateUtil.isValidString(argValue));\n          break;\n        case DataTypeEnum.BOOLEAN:\n          validators.push(ValidateUtil.isValidBoolean(argValue));\n          break;\n        // case DataTypeEnum.FUNCTION:\n        //   validators.push(ValidateUtil.isValidFunction(argValue));\n        //   break;\n        case DataTypeEnum.OBJECT:\n          validators.push(ValidateUtil.isValidObject(argValue));\n          break;\n        case DataTypeEnum.STRING_NULL_UNDEFINED_ARRAY:\n          let value =\n            ValidateUtil.isValidString(argValue) ||\n            DataTypeUtil.isUndefined(argValue) ||\n            DataTypeUtil.isNull(argValue) ||\n            DataTypeUtil.isArray(argValue);\n          validators.push(value);\n          break;\n        // case DataTypeEnum.NUMBER_STRING:\n        //   value = ValidateUtil.isValidNumber(argValue) || ValidateUtil.isValidString(argValue);\n        //   validators.push(value);\n        //   break;\n      }\n    }\n\n    isValid = validators.every(val => val);\n\n    return isValid;\n  }\n};\n\nmodule.exports = ValidateUtil;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst FunctionUtil = {\n  cloneObject: obj => {\n    if (!obj) {\n      return obj;\n    }\n\n    let clonedObj = JSON.parse(JSON.stringify(obj));\n\n    return clonedObj;\n  },\n  getRandomNumber: () => {\n    return Math.random();\n  },\n  getCurrentUnixTimestamp: () => {\n    return Math.ceil(+new Date() / 1000);\n  },\n  matchWithRegex: (string, regex) => {\n    try {\n      return string.match(new RegExp(regex));\n    } catch (err) {\n      const logging = require('../services/logging');\n      const FileNameEnum = require('../enums/FileNameEnum');\n\n      const logger = logging.getLogger();\n      const { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\n      const file = FileNameEnum.FunctionUtil;\n\n      logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.REGEX_CREATION_FAILED, {\n          file\n        })\n      );\n      return null;\n    }\n  },\n  getCurrentTime() {\n    return new Date().toISOString();\n  },\n  convertObjectKeysToString(properties, excludedProperties) {\n    let queryParams = '';\n    excludedProperties = excludedProperties || [];\n\n    for (let prop in properties) {\n      if (properties.hasOwnProperty(prop)) {\n        if (excludedProperties.indexOf(prop) === -1) {\n          queryParams += prop + '=' + properties[prop] + '&';\n        }\n      }\n    }\n\n    return queryParams;\n  }\n};\n\nmodule.exports = FunctionUtil;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst ValidateUtil = require('./ValidateUtil');\nconst Constants = require('../constants');\n\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst GoalTypeEnum = require('../enums/GoalTypeEnum');\nconst CampaignTypeEnum = require('../enums/CampaignTypeEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\nconst logger = logging.getLogger();\n\nlet CampaignUtil = {\n  /**\n   * Returns the bucket size of variation.\n   *\n   * @param {Number/Float} - weight of variation\n   *\n   * @return {Number} bucket start range of Variation\n   */\n  _getVariationBucketRange: variationWeight => {\n    if (!variationWeight || variationWeight === 0) {\n      return 0;\n    }\n\n    const startRange = Math.ceil(variationWeight * 100);\n\n    return Math.min(startRange, Constants.MAX_TRAFFIC_VALUE);\n  },\n\n  /**\n   * Get the campaign on the basis of campaign id\n   *\n   * @param {Object} settingsFile\n   * @param {Number} campaignId\n   *\n   * @returns {Object} campaign object\n   */\n  getCampaignBasedOnId: (settingsFile, campaignId) => {\n    let campaign;\n\n    for (let i = 0; i < settingsFile.campaigns.length; i++) {\n      if (parseInt(settingsFile.campaigns[i].id, 10) === parseInt(campaignId, 10)) {\n        campaign = settingsFile.campaigns[i];\n\n        break;\n      }\n    }\n\n    return campaign;\n  },\n  /**\n   * It extracts the weights from all the variations inside the campaign\n      and scales them so that the total sum of eligible variations' weights become 100%\n\n      1. variations\n   */\n  scaleVariationWeights: variations => {\n    const totalWeight = variations.reduce((acc, variation) => {\n      return acc + variation.weight;\n    }, 0);\n    if (!totalWeight) {\n      const weight = 100 / variations.length;\n      variations.forEach(variation => (variation.weight = weight));\n    } else {\n      variations.forEach(variation => (variation.weight = (variation.weight / totalWeight) * 100));\n    }\n  },\n\n  getCampaign: (settingsFile, campaignKey) => {\n    let campaign;\n\n    for (let i = 0; i < settingsFile.campaigns.length; i++) {\n      if (settingsFile.campaigns[i].key === campaignKey) {\n        campaign = settingsFile.campaigns[i];\n\n        break;\n      }\n    }\n\n    return campaign;\n  },\n  /**\n   * Gets campaigns for corresponding campaignKeys\n   *\n   * @param {Object} settingsFile\n   * @param {Array} campaignKeys\n   *\n   * @return {Array} Campaigns\n   */\n  getCampaignsForKeys: (settingsFile, campaignKeys) => {\n    const campaigns = [];\n    campaignKeys.forEach(key => {\n      let campaign = CampaignUtil.getCampaign(settingsFile, key);\n      if (campaign) {\n        campaigns.push(campaign);\n      } else {\n        campaigns.push({\n          key\n        });\n      }\n    });\n    return campaigns;\n  },\n  /**\n   * Gets campaigns which have the goalIdentifier present\n   *\n   * @param {settingsFile}\n   * @param {String} goalIdentifier\n   * @param {String} goalTypeToTrack type of goal to track\n   *\n   * @return {Array} Campaigns\n   */\n  getCampaignsForGoal: (settingsFile, goalIdentifier, goalTypeToTrack) => {\n    let campaigns = [];\n    settingsFile.campaigns.forEach(campaign => {\n      const goal = CampaignUtil.getCampaignGoal(settingsFile, campaign.key, goalIdentifier);\n      if (goal && (goalTypeToTrack === GoalTypeEnum.ALL || goal.type === goalTypeToTrack)) {\n        campaigns.push(campaign);\n      }\n    });\n    if (!campaigns.length) {\n      logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.NO_CAMPAIGN_FOUND, {\n          file: FileNameEnum.CampaignUtil,\n          goalIdentifier\n        })\n      );\n    }\n    return campaigns;\n  },\n  getCampaignStatus: (settingsFile, campaignKey) => {\n    let campaign = CampaignUtil.getCampaign(settingsFile, campaignKey);\n\n    if (!campaign || !campaign.status) {\n      // log error\n      return '';\n    }\n\n    return campaign.status.toLowerCase();\n  },\n\n  isCampaignRunning: (settingsFile, campaignKey) => {\n    return CampaignUtil.getCampaignStatus(settingsFile, campaignKey) === 'running';\n  },\n  /**\n   * Validates the campaign\n   *\n   * @param {Campaign} campaign the campaign to be validated\n   *\n   * @return {Boolean} true is campaign is valid\n   */\n  validateCampaign: campaign => {\n    return ValidateUtil.isValidValue(campaign) && campaign.variations && Object.keys(campaign.variations).length > 0;\n  },\n\n  /**\n   * Assigns the buckets to the Variations of the campaign\n   * depending on the traffic allocation\n   *\n   * @param {Campaign} campaign whose Variations are to be allocated\n   */\n  setVariationAllocation: campaign => {\n    const numberOfVariations = campaign.variations.length;\n    let stepFactor = 0;\n\n    for (let i = 0, currentAllocation = 0; i < numberOfVariations; i++) {\n      let variation = campaign.variations[i];\n\n      stepFactor = CampaignUtil.assignRangeValues(variation, currentAllocation);\n      currentAllocation += stepFactor;\n\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.VARIATION_RANGE_ALLOCATION, {\n          file: FileNameEnum.CampaignUtil,\n          campaignKey: campaign.key,\n          variationName: variation.name,\n          variationWeight: variation.weight,\n          start: variation.startVariationAllocation,\n          end: variation.endVariationAllocation\n        })\n      );\n    }\n  },\n\n  /**\n   * Assign range allocation to the campaigns in the list to decide which campaign to choose out of the Mutually Exclusive group\n   *\n   * @param {Array} campaigns\n   */\n  setCampaignAllocation: campaigns => {\n    let stepFactor = 0;\n\n    for (let i = 0, currentAllocation = 0; i < campaigns.length; i++) {\n      let campaign = campaigns[i];\n\n      stepFactor = CampaignUtil.assignRangeValues(campaign, currentAllocation);\n      currentAllocation += stepFactor;\n    }\n  },\n\n  assignRangeValues: (variation, currentAllocation) => {\n    let stepFactor;\n    stepFactor = CampaignUtil._getVariationBucketRange(variation.weight);\n\n    if (stepFactor) {\n      variation.startVariationAllocation = currentAllocation + 1;\n      variation.endVariationAllocation = currentAllocation + stepFactor;\n    } else {\n      variation.startVariationAllocation = -1;\n      variation.endVariationAllocation = -1;\n    }\n    return stepFactor;\n  },\n  getCampaignGoal: (settingsFile, campaignKey, goalIdentifier) => {\n    let desiredCampaignGoal = null;\n\n    if (!settingsFile || !campaignKey || !goalIdentifier) {\n      return desiredCampaignGoal;\n    }\n\n    let campaign = CampaignUtil.getCampaign(settingsFile, campaignKey);\n\n    if (!campaign) {\n      return desiredCampaignGoal;\n    }\n\n    for (let i = 0; i < campaign.goals.length; i++) {\n      let goal = campaign.goals[i];\n\n      if (goal.identifier === goalIdentifier) {\n        desiredCampaignGoal = goal;\n        break;\n      }\n    }\n\n    return desiredCampaignGoal;\n  },\n  getCampaignVariation: (settingsFile, campaignKey, variationName) => {\n    let desiredVariation = null;\n\n    if (!settingsFile || !campaignKey || !variationName) {\n      return desiredVariation;\n    }\n\n    let campaign = CampaignUtil.getCampaign(settingsFile, campaignKey);\n\n    if (!campaign) {\n      return desiredVariation;\n    }\n\n    for (let i = 0; i < campaign.variations.length; i++) {\n      let variation = campaign.variations[i];\n\n      if (variation.name === variationName) {\n        desiredVariation = variation;\n\n        break;\n      }\n    }\n\n    return desiredVariation;\n  },\n  getControlForCampaign: campaign => {\n    let control = {};\n\n    if (!campaign || !campaign.variations) {\n      return control;\n    }\n\n    for (let i = 0; i < campaign.variations.length; i++) {\n      if (campaign.variations[i].id === 1) {\n        control = campaign.variations[i];\n        break;\n      }\n    }\n\n    return control;\n  },\n  isFeatureTestCampaign: campaign => {\n    if (campaign && campaign.type === CampaignTypeEnum.FEATURE_TEST) {\n      return true;\n    }\n\n    return false;\n  },\n  isFeatureRolloutCampaign: campaign => {\n    if (campaign && campaign.type === CampaignTypeEnum.FEATURE_ROLLOUT) {\n      return true;\n    }\n\n    return false;\n  },\n  isAbCampaign: campaign => {\n    if (campaign && campaign.type === CampaignTypeEnum.AB) {\n      return true;\n    }\n\n    return false;\n  },\n\n  /**\n   * Check if the campaign is a part of mutually exclusive group\n   *\n   * @param {Object} settingsFile\n   * @param {Number} campaignId\n   *\n   * @returns {Number} group id of the campaign.\n   */\n  isPartOfGroup: (settingsFile, campaignId) => {\n    if (settingsFile.campaignGroups && Object.prototype.hasOwnProperty.call(settingsFile.campaignGroups, campaignId)) {\n      return {\n        groupId: settingsFile.campaignGroups[campaignId],\n        groupName: settingsFile.groups[settingsFile.campaignGroups[campaignId]].name\n      };\n    }\n    return {};\n  },\n\n  /**\n   * Get the list of campaigns on the basis of their id\n   *\n   * @param {Object} settingsFile\n   * @param {Number} groupId\n   *\n   * @returns {Array} list of campaigns\n   */\n  getGroupCampaigns: (settingsFile, groupId) => {\n    const campaigns = [];\n    if (Object.prototype.hasOwnProperty.call(settingsFile.groups, groupId)) {\n      settingsFile.groups[groupId].campaigns.forEach(campaignId => {\n        let campaign = CampaignUtil.getCampaignBasedOnId(settingsFile, campaignId);\n        if (campaign) {\n          campaigns.push(campaign);\n        }\n      });\n    }\n    return campaigns;\n  },\n\n  /**\n   * Decide the Seed for murmurhash to bucket user.\n   * @param {string} userId\n   * @param {object} campaign\n   * @param {number} groupId\n   *\n   * @returns {string} Seed value\n   */\n  getBucketingSeed: (userId, campaign, groupId) => {\n    if (groupId) {\n      return `${groupId}_${userId}`;\n    }\n\n    if (campaign && campaign.isBucketingSeedEnabled) {\n      return `${campaign.id}_${userId}`;\n    } else {\n      return userId;\n    }\n  }\n};\n\nmodule.exports = CampaignUtil;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst ApiEnum = {\n  LAUNCH: 'launch',\n  ACTIVATE: 'activate',\n  GET_VARIATION_NAME: 'getVariation',\n  TRACK: 'track',\n  IS_FEATURE_ENABLED: 'isFeatureEnabled',\n  GET_FEATURE_VARIABLE_VALUE: 'getFeatureVariableValue',\n  PUSH: 'push'\n};\n\nmodule.exports = ApiEnum;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst VariationDecider = require('../core/VariationDecider');\nconst BucketingService = require('../core/BucketingService');\n\nconst CampaignUtil = require('./CampaignUtil');\nconst DataTypeUtil = require('./DataTypeUtil');\nconst FunctionUtil = require('./FunctionUtil');\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst StatusEnum = require('../enums/StatusEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\nconst logger = logging.getLogger();\nconst SegmentEvaluator = require('../core/SegmentEvaluator');\nconst HooksManager = require('../services/HooksManager');\nconst HooksEnum = require('../enums/HooksEnum');\nconst UuidUtil = require('./UuidUtil');\nconst Constants = require('../constants');\nconst CampaignTypeEnum = require('../enums/CampaignTypeEnum');\nconst ApiEnum = require('../enums/ApiEnum');\n\nconst file = FileNameEnum.DecisionUtil;\n\nconst SegmentationTypeEnum = {\n  WHITELISTING: 'whitelisting',\n  PRE_SEGMENTATION: 'pre-segmentation'\n};\n\nlet DecisionUtil = {\n  // PUBLIC METHODS\n  /**\n   *  1. Checks if there is a variation stored in userStorage, returns it\n   *  2. If Whitelisting is applicable, evaluate it, if any eligible variation is found, store it in User Storage service and return, otherwise skip it.\n   *  3. Check if the campaign is part of mutually exclusive group, if yes, get the winner campaign using campaign traffic normalization.\n   *  4. If Pre-segmentation is applied and passes then go further otherwise return early and no further processing\n   *  5. If no user storage value, no whitelisted variation and pre-segmentation evaluates to true, get variation using hashing logic if campaign traffic passes for that userId\n   *\n   *\n   *  @param {Object} config\n   *  @param {Object} settingsFile\n   *  @param {Object} campaign\n   *  @param {Object} campaignKey\n   *  @param {String} userId\n   *  @param {Object} customVariables\n   *  @param {Object} variationTargetingVariables\n   *\n   *  @return {Object|null} - Object if a variation is assigned, otherwise null\n   */\n  getVariation: (\n    config,\n    settingsFile,\n    campaign,\n    campaignKey,\n    userId,\n    customVariables,\n    variationTargetingVariables = {},\n    userStorageData = {},\n    metaData,\n    isTrackUserAPI,\n    newGoalIdentifier,\n    api = ''\n  ) => {\n    let vwoUserId = UuidUtil.generateFor(userId, settingsFile.accountId);\n    let decision = {\n      // campaign info\n      campaignId: campaign.id,\n      campaignKey,\n      campaignType: campaign.type,\n      campaignName: campaign.name,\n      // campaign segmentation conditions\n      customVariables,\n      // event name\n      event: HooksEnum.DECISION_TYPES.CAMPAIGN_DECISION,\n      // goal tracked in case of track API\n      goalIdentifier: newGoalIdentifier,\n      // campaign whitelisting flag\n      isForcedVariationEnabled: campaign.isForcedVariationEnabled,\n      sdkVersion: Constants.SDK_VERSION,\n      // API name which triggered the event\n      source: api,\n      // Passed in API\n      userId,\n      // Campaign Whitelisting conditions\n      variationTargetingVariables,\n      // VWO generated UUID based on passed UserId and Account ID\n      vwoUserId\n    };\n\n    // check if the campaign is a part of group\n    const { groupId, groupName } = CampaignUtil.isPartOfGroup(settingsFile, campaign.id);\n\n    if (groupId) {\n      // append groupId and groupName, if campaign is a part of group\n      decision['groupId'] = groupId;\n      decision['groupName'] = groupName;\n    }\n\n    variationTargetingVariables = Object.assign({}, variationTargetingVariables, {\n      _vwoUserId: campaign.isUserListEnabled ? vwoUserId : userId\n    });\n\n    // check if tbe campaign satisfies the whitelisting before checking for the group\n    const whitelistedVariation = DecisionUtil._checkForWhitelisting(\n      campaign,\n      campaignKey,\n      userId,\n      variationTargetingVariables,\n      decision\n    );\n    if (whitelistedVariation) {\n      return whitelistedVariation;\n    }\n\n    // check if the campaign is present in the storage before checking for the group\n    const storedVariation = DecisionUtil._checkForUserStorage(\n      config,\n      settingsFile,\n      campaign,\n      campaignKey,\n      userId,\n      userStorageData,\n      isTrackUserAPI,\n      decision\n    );\n    if (storedVariation) {\n      return storedVariation;\n    }\n\n    // check if the called campaign satisfies the pre-segmentatin before further proccessing.\n    if (\n      !(\n        DecisionUtil._checkForPreSegmentation(campaign, campaignKey, userId, customVariables, decision) &&\n        BucketingService.isUserPartOfCampaign(userId, campaign, true)\n      )\n    ) {\n      return {};\n    }\n\n    if (groupId) {\n      // mutually exclusive group exists\n\n      // get the list of the all the campaigns in a group\n      const campaignList = CampaignUtil.getGroupCampaigns(settingsFile, groupId);\n\n      if (campaignList.length === 0) {\n        // return if no campaigns are active in a group\n        return {};\n      }\n\n      // checking other campaigns for whitelisting and user storage.\n      let isWhitelistedOrStoredVariation = DecisionUtil._checkForStorageAndWhitelisting(\n        config,\n        settingsFile,\n        groupName,\n        campaignList,\n        campaign,\n        userId,\n        userStorageData,\n        variationTargetingVariables,\n        isTrackUserAPI\n      );\n\n      if (isWhitelistedOrStoredVariation) {\n        // other campaigns satisfy the whitelisting or storage, therfore returning\n        logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CALLED_CAMPAIGN_NOT_WINNER, {\n            userId,\n            groupName,\n            file,\n            campaignKey: campaignKey\n          })\n        );\n        return {};\n      }\n\n      // none of the group campaigns satisfy whitelisting or user storage\n      // check each campaign for pre-segmentation and traffic allocation.\n      let inEligibleCampaignKeys = '';\n      let eligibleCampaignKeys = '';\n      const { eligibleCampaigns, inEligibleCampaigns } = DecisionUtil.getEligbleCampaigns(\n        campaignList,\n        userId,\n        customVariables\n      );\n\n      inEligibleCampaigns.forEach(campaign => {\n        inEligibleCampaignKeys = inEligibleCampaignKeys + campaign.key + ',';\n      });\n      eligibleCampaigns.forEach(campaign => {\n        eligibleCampaignKeys = eligibleCampaignKeys + campaign.key + ',';\n      });\n\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.GOT_ELIGIBLE_CAMPAIGNS, {\n          userId,\n          groupName,\n          file,\n          eligibleCampaignKeys: eligibleCampaignKeys.slice(0, -1),\n          inEligibleText:\n            inEligibleCampaignKeys === '' ? 'no campaigns' : `campaigns: ${inEligibleCampaignKeys.slice(0, -1)}`\n        })\n      );\n\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.GOT_ELIGIBLE_CAMPAIGNS, {\n          userId,\n          groupName,\n          file,\n          noOfEligibleCampaigns: eligibleCampaigns.length,\n          noOfGroupCampaigns: inEligibleCampaigns.length + eligibleCampaigns.length\n        })\n      );\n\n      if (eligibleCampaigns.length === 1) {\n        // if the called campaign is the only winner.\n        return DecisionUtil.evaluateTrafficAndGetVariation(\n          config,\n          eligibleCampaigns[0],\n          eligibleCampaigns[0].key,\n          userId,\n          metaData,\n          newGoalIdentifier,\n          decision\n        );\n      } else {\n        // normalize the eligible campaigns and decide winner\n        return DecisionUtil._normalizeAndFindWinningCampaign(\n          config,\n          campaign,\n          eligibleCampaigns,\n          userId,\n          groupName,\n          groupId,\n          metaData,\n          newGoalIdentifier,\n          decision\n        );\n      }\n    } else {\n      // campaign is not a part of mutually exclusive group\n      // check if the user is eligible to become part of the campaign and assign variation.\n      return DecisionUtil.evaluateTrafficAndGetVariation(\n        config,\n        campaign,\n        campaignKey,\n        userId,\n        metaData,\n        newGoalIdentifier,\n        decision\n      );\n    }\n  },\n  // PRIVATE METHODS\n\n  _evaluateWhitelisting: (campaign, campaignKey, userId, variationTargetingVariables, disableLogs = false) => {\n    let whitelistedVariation;\n    let status;\n    const targetedVariations = [];\n    campaign.variations.forEach(variation => {\n      if (DataTypeUtil.isObject(variation.segments) && !Object.keys(variation.segments).length) {\n        logger.log(\n          LogLevelEnum.DEBUG,\n          LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.SEGMENTATION_SKIPPED, {\n            campaignKey,\n            userId,\n            file,\n            variation: campaign.type === CampaignTypeEnum.FEATURE_ROLLOUT ? '' : `, for ${variation.name}`\n          }),\n          disableLogs\n        );\n        return;\n      }\n      if (\n        DataTypeUtil.isObject(variation.segments) &&\n        SegmentEvaluator(variation.segments, variationTargetingVariables, campaignKey, userId, variation.name)\n      ) {\n        status = StatusEnum.PASSED;\n        targetedVariations.push(FunctionUtil.cloneObject(variation));\n      } else {\n        status = StatusEnum.FAILED;\n      }\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.SEGMENTATION_STATUS, {\n          campaignKey,\n          userId,\n          customVariables: JSON.stringify(variationTargetingVariables),\n          file,\n          status,\n          segmentationType: SegmentationTypeEnum.WHITELISTING,\n          variation:\n            campaign.type === CampaignTypeEnum.FEATURE_ROLLOUT && status === StatusEnum.PASSED\n              ? 'and becomes part of the rollout'\n              : `for ${variation.name}`\n        }),\n        disableLogs\n      );\n    });\n\n    if (targetedVariations.length > 1) {\n      CampaignUtil.scaleVariationWeights(targetedVariations);\n      for (let i = 0, currentAllocation = 0, stepFactor = 0; i < targetedVariations.length; i++) {\n        stepFactor = CampaignUtil.assignRangeValues(targetedVariations[i], currentAllocation);\n        currentAllocation += stepFactor;\n      }\n      whitelistedVariation = BucketingService._getVariation(\n        targetedVariations,\n        BucketingService.calculateBucketValue(CampaignUtil.getBucketingSeed(userId, campaign))\n      );\n    } else {\n      whitelistedVariation = targetedVariations[0];\n    }\n\n    if (whitelistedVariation) {\n      return {\n        variation: whitelistedVariation,\n        variationName: whitelistedVariation.name,\n        variationId: whitelistedVariation.id\n      };\n    }\n  },\n  /**\n   * If userStorageService is provided and variation was stored, get the stored variation\n   *\n   * @param {Object} config\n   * @param {Object} settingsFile - cloned settingsFile\n   * @param {String} campaignKey\n   * @param {String} userId\n   *\n   * @return {Object|null} - if found then variation and goalIdentifier settings object otherwise null\n   */\n  _getStoredVariationAndGoalIdentifiers: function(\n    config,\n    settingsFile,\n    campaignKey,\n    userId,\n    userStorageData,\n    disableLogs = false\n  ) {\n    let userData = DecisionUtil._getStoredUserData(config, userId, campaignKey, userStorageData, disableLogs);\n    let { variationName, goalIdentifier } = userData;\n\n    if (userData && userData.campaignKey && variationName) {\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.GETTING_STORED_VARIATION, {\n          file,\n          campaignKey,\n          userId,\n          variationName\n        }),\n        disableLogs\n      );\n\n      return {\n        storedVariation: CampaignUtil.getCampaignVariation(settingsFile, campaignKey, variationName),\n        goalIdentifier\n      };\n    }\n\n    // Log if stored variation is not found even after implementing UserStorageService\n    logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.NO_STORED_VARIATION, {\n        file,\n        campaignKey,\n        userId\n      }),\n      disableLogs\n    );\n\n    return null;\n  },\n  /**\n   * If userStorageService is provided and variation was stored, get the stored variation\n   *\n   * @param {Object} config\n   * @param {Object} settingsFile - cloned settingsFile\n   * @param {String} campaignKey\n   * @param {String} userId\n   *\n   * @return {Object|null} - if found then variation settings object otherwise null\n   */\n  _getStoredVariation: function(config, settingsFile, campaignKey, userId, userStorageData) {\n    const data = DecisionUtil._getStoredVariationAndGoalIdentifiers(\n      config,\n      settingsFile,\n      campaignKey,\n      userId,\n      userStorageData\n    );\n    if (data && data.storedVariation) {\n      return data.storedVariation;\n    }\n    return null;\n  },\n  /**\n   * Get the User Variation mapping by calling get method of UserStorageService being provided\n   *\n   * @param {Object} config\n   * @param {String} UserID\n   * @param {String} campaignKey\n   *\n   * @return {Object} - User Campaign Mapping\n   */\n  _getStoredUserData: function(config, userId, campaignKey, userStorageData, disableLogs) {\n    let userStorageMap = {\n      userId: userId,\n      variationName: null,\n      campaignKey: campaignKey,\n      goalIdentifier: null\n    };\n\n    if (!config.userStorageService) {\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.NO_USER_STORAGE_SERVICE_GET, {\n          file\n        }),\n        disableLogs\n      );\n      return userStorageMap;\n    }\n\n    try {\n      let data = config.userStorageService.get(userId, campaignKey) || {};\n\n      // if data found\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.GETTING_DATA_USER_STORAGE_SERVICE, {\n          file,\n          userId\n        }),\n        disableLogs\n      );\n\n      return Object.assign({}, data, userStorageData);\n    } catch (err) {\n      // if no data found\n      logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.GET_USER_STORAGE_SERVICE_FAILED, {\n          file,\n          userId\n        }),\n        disableLogs\n      );\n    }\n  },\n\n  /**\n   * If UserStorageService is provided and variation was stored, save the assigned variation\n   *\n   * @param {Object} campaign\n   * @param {String} variationName\n   * @param {String} userId\n   *\n   * @return {Boolean} - true if found otherwise false\n   */\n  _saveUserData: function(config, campaign, variationName, userId, metaData, goalIdentifier) {\n    let isSaved = false;\n\n    if (!config.userStorageService) {\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.NO_USER_STORAGE_SERVICE_SET, {\n          file\n        })\n      );\n      return isSaved;\n    }\n\n    try {\n      const properties = {\n        userId: userId,\n        variationName,\n        campaignKey: campaign.key\n      };\n\n      if (!DataTypeUtil.isUndefined(goalIdentifier)) {\n        properties.goalIdentifier = goalIdentifier;\n      }\n\n      if (!DataTypeUtil.isUndefined(metaData)) {\n        properties.metaData = metaData;\n      }\n\n      config.userStorageService.set(properties);\n\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.SETTING_DATA_USER_STORAGE_SERVICE, {\n          file,\n          userId\n        })\n      );\n\n      isSaved = true;\n    } catch (ex) {\n      logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.SET_USER_STORAGE_SERVICE_FAILED, {\n          file,\n          userId\n        })\n      );\n\n      isSaved = false;\n    }\n\n    return isSaved;\n  },\n\n  /**\n   * Evaluate the campaign for whitelisting and store\n   * This method would be run only for MEG campaigns\n   *\n   * @param {Object} config\n   * @param {Object} settingsFile\n   * @param {Array} campaignList\n   * @param {Object} calledCampaign\n   * @param {String} userId\n   * @param {Object} userStorageData\n   * @param {Object} variationTargetingVariables\n   * @param {Boolean} isTrackUserAPI\n   *\n   * @returns {Boolean} - true, if whitelisting/storage is satisfied for any campaign\n   */\n  _checkForStorageAndWhitelisting(\n    config,\n    settingsFile,\n    groupName,\n    campaignList,\n    calledCampaign,\n    userId,\n    userStorageData,\n    variationTargetingVariables,\n    isTrackUserAPI\n  ) {\n    let otherCampaignWinner = false;\n    campaignList.some(groupCampaign => {\n      if (groupCampaign.id === calledCampaign.id) {\n        return;\n      }\n      // create a local copy of the campaigns\n      // groupCampaign = FunctionUtil.cloneObject(groupCampaign);\n      // checking other campaigns for whitelisting or user storage.\n      const whitelistedVariation = DecisionUtil._checkForWhitelisting(\n        groupCampaign,\n        groupCampaign.key,\n        userId,\n        variationTargetingVariables\n      );\n      if (whitelistedVariation) {\n        // other campaign satisfy the whitelisting\n        otherCampaignWinner = true;\n        logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.OTHER_CAMPAIGN_SATISFIES_WHITELISTING_STORAGE, {\n            file,\n            campaignKey: groupCampaign.key,\n            groupName,\n            userId,\n            type: 'whitelisting'\n          })\n        );\n        return true;\n      }\n      const storedVariation = DecisionUtil._checkForUserStorage(\n        config,\n        settingsFile,\n        groupCampaign,\n        groupCampaign.key,\n        userId,\n        userStorageData,\n        isTrackUserAPI\n      );\n      if (storedVariation && DataTypeUtil.isObject(storedVariation) && Object.keys(storedVariation).length > 0) {\n        // other campaign sastisfy the user storage\n        otherCampaignWinner = true;\n        logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.OTHER_CAMPAIGN_SATISFIES_WHITELISTING_STORAGE, {\n            file,\n            campaignKey: groupCampaign.key,\n            groupName,\n            userId,\n            type: 'user storage'\n          })\n        );\n        return true;\n      }\n    });\n    return otherCampaignWinner;\n  },\n\n  /**\n   * Evaluate a campaign for pre-segmentation.\n   *\n   * @param {Object} campaign\n   * @param {String} campaignKey\n   * @param {String} userId\n   * @param {Object} customVariables\n   * @param {Object} decision\n   *\n   * @returns {Boolean} true, if the pre-segmentation is satisfied.\n   */\n  _checkForPreSegmentation: (campaign, campaignKey, userId, customVariables, decision) => {\n    let status;\n    if (DataTypeUtil.isObject(campaign.segments) && !Object.keys(campaign.segments).length) {\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.SEGMENTATION_SKIPPED, {\n          campaignKey,\n          userId,\n          file\n        }),\n        !decision\n      );\n      return true;\n    } else {\n      const preSegmentationResult = SegmentEvaluator(\n        campaign.segments,\n        customVariables,\n        campaignKey,\n        userId,\n        !decision\n      );\n      if (!preSegmentationResult) {\n        status = StatusEnum.FAILED;\n      } else {\n        status = StatusEnum.PASSED;\n      }\n\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.SEGMENTATION_STATUS, {\n          campaignKey,\n          userId,\n          customVariables: JSON.stringify(customVariables || {}),\n          file,\n          status,\n          segmentationType: SegmentationTypeEnum.PRE_SEGMENTATION,\n          variation: ''\n        }),\n        !decision\n      );\n\n      if (status === StatusEnum.FAILED) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  },\n\n  /**\n   * Check if user is eligible for the camapign based on traffic percentage and assign variation.\n   * @param {Object} config\n   * @param {Object} campaign\n   * @param {String} campaignKey\n   * @param {String} userId\n   * @param {Object} metaData\n   * @param {String} newGoalIdentifier\n   * @param {Object} decision\n   * @returns {Object} variation assigned to the user\n   */\n  evaluateTrafficAndGetVariation(config, campaign, campaignKey, userId, metaData, newGoalIdentifier, decision) {\n    let variation, variationName, variationId;\n    // Use our core's VariationDecider utility to get the deterministic variation assigned to the userId for that campaign\n    ({ variation, variationName, variationId } = VariationDecider.getVariationAllotted(userId, campaign));\n\n    // Check if variation-name has been assigned to the userId. If not, return no variation\n    if (variationName) {\n      // If userStorageService is provided, look into it for the saved variation for the campaign and userId\n      DecisionUtil._saveUserData(config, campaign, variationName, userId, metaData, newGoalIdentifier);\n\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.VARIATION_ALLOCATED, {\n          file,\n          campaignKey,\n          userId,\n          variationName\n        })\n      );\n    } else {\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.NO_VARIATION_ALLOCATED, {\n          file,\n          campaignKey,\n          userId\n        })\n      );\n    }\n\n    // Executing the callback when SDK makes the decision\n    HooksManager.execute(\n      Object.assign(\n        {\n          fromUserStorageService: false,\n          isUserWhitelisted: false\n        },\n        campaign.type === CampaignTypeEnum.FEATURE_ROLLOUT\n          ? {\n              isFeatureEnabled: !!variationName\n            }\n          : {\n              variationName,\n              variationId\n            },\n        decision\n      )\n    );\n\n    return {\n      variation: variation && variation.variation,\n      variationName,\n      variationId\n    };\n  },\n\n  /**\n   * Evaluate a campaign for whitelisting\n   *\n   * @param {Object} campaign\n   * @param {String} campaignKey\n   * @param {String} userId\n   * @param {Object} variationTargetingVariables\n   * @param {Object} decision\n   *\n   * @returns {Object} whitelisted variation\n   */\n  _checkForWhitelisting: (campaign, campaignKey, userId, variationTargetingVariables, decision) => {\n    let status;\n    let variationName, variationId;\n    if (campaign.isForcedVariationEnabled) {\n      let whitelistingResult = DecisionUtil._evaluateWhitelisting(\n        campaign,\n        campaignKey,\n        userId,\n        variationTargetingVariables,\n        !decision\n      );\n      let variationString;\n      if (whitelistingResult) {\n        status = StatusEnum.PASSED;\n        variationString = whitelistingResult.variationName;\n      } else {\n        status = StatusEnum.FAILED;\n        variationString = '';\n      }\n\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.SEGMENTATION_STATUS, {\n          campaignKey,\n          userId,\n          customVariables: JSON.stringify(variationTargetingVariables),\n          file,\n          status,\n          segmentationType: SegmentationTypeEnum.WHITELISTING,\n          variation: campaign.type === CampaignTypeEnum.FEATURE_ROLLOUT ? '' : `for variation: ${variationString}`\n        }),\n        !decision\n      );\n\n      if (whitelistingResult) {\n        variationName = whitelistingResult.variationName;\n        variationId = whitelistingResult.variationId;\n        // Executing the callback when SDK has made a decision in case of whitelisting\n        if (decision) {\n          HooksManager.execute(\n            Object.assign(\n              {\n                fromUserStorageService: false,\n                isUserWhitelisted: !!variationName\n              },\n              campaign.type === CampaignTypeEnum.FEATURE_ROLLOUT\n                ? {\n                    isFeatureEnabled: !!variationName\n                  }\n                : {\n                    variationName,\n                    variationId\n                  },\n              decision\n            )\n          );\n        }\n        return whitelistingResult;\n      }\n    } else {\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.WHITELISTING_SKIPPED, {\n          campaignKey,\n          userId,\n          file\n        }),\n        !decision\n      );\n    }\n  },\n\n  /**\n   * Check if the variation is present in the user storage\n   *\n   * @param {Object} config\n   * @param {Object} settingsFile\n   * @param {Object} campaign\n   * @param {String} campaignKey\n   * @param {String} userId\n   * @param {Object} userStorageData\n   * @param {Boolean} isTrackUserAPI\n   * @param {Object} decision\n   *\n   * @returns {Object} stored variaition\n   */\n  _checkForUserStorage: (\n    config,\n    settingsFile,\n    campaign,\n    campaignKey,\n    userId,\n    userStorageData,\n    isTrackUserAPI,\n    decision\n  ) => {\n    let variationName, variationId;\n    let storedVariation, goalIdentifier;\n    // If userStorageService is used, get the variation from the stored data\n    ({ storedVariation, goalIdentifier } =\n      DecisionUtil._getStoredVariationAndGoalIdentifiers(\n        config,\n        settingsFile,\n        campaign.key,\n        userId,\n        userStorageData,\n        !decision\n      ) || {});\n\n    // If stored variation is found, simply return the same\n    if (storedVariation) {\n      variationName = storedVariation.name;\n      variationId = storedVariation.id;\n\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.GOT_STORED_VARIATION, {\n          file,\n          campaignKey,\n          userId,\n          variationName: storedVariation.name\n        }),\n        !decision\n      );\n\n      // Executing the callback when SDK gets the decision from user storage service\n      if (decision) {\n        HooksManager.execute(\n          Object.assign(\n            {\n              fromUserStorageService: !!variationName,\n              isUserWhitelisted: false\n            },\n            campaign.type === CampaignTypeEnum.FEATURE_ROLLOUT\n              ? {\n                  isFeatureEnabled: !!variationName\n                }\n              : {\n                  variationName,\n                  variationId\n                },\n            decision\n          )\n        );\n      }\n\n      return {\n        variation: storedVariation,\n        variationName: storedVariation.name,\n        variationId: storedVariation.id,\n        storedGoalIdentifier: goalIdentifier,\n        isStoredVariation: true\n      };\n    } else if (\n      !DataTypeUtil.isUndefined(config.userStorageService) &&\n      !isTrackUserAPI &&\n      DataTypeUtil.isUndefined(storedVariation)\n    ) {\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.CAMPAIGN_NOT_ACTIVATED, {\n          file,\n          campaignKey,\n          userId,\n          api: config.apiName\n        }),\n        !decision\n      );\n\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CAMPAIGN_NOT_ACTIVATED, {\n          file,\n          campaignKey,\n          userId,\n          reason: config.apiName === ApiEnum.TRACK ? 'track it' : 'get the decision/value'\n        }),\n        !decision\n      );\n      return {};\n    }\n  },\n\n  /**\n   * Evaluate the list of campaigns for pre-segmentation and campaign traffic allocation and assign variation to the user.\n   * This method will be used for MEG campaigns\n   *\n   * @param {Object} config\n   * @param {Array} campaignList\n   * @param {String} userId\n   * @param {Object} customVariables\n   * @param {Object} metaData\n   * @param {String} newGoalIdentifier\n   *\n   * @returns {Array} list of campaigns which satisfies the conditions.\n   */\n  getEligbleCampaigns(campaignList, userId, customVariables) {\n    let eligibleCampaigns = [];\n    let inEligibleCampaigns = [];\n\n    campaignList.forEach(groupCampaign => {\n      const isPartOfCampaign =\n        DecisionUtil._checkForPreSegmentation(groupCampaign, groupCampaign.key, userId, customVariables) &&\n        BucketingService.isUserPartOfCampaign(userId, groupCampaign, true);\n      if (isPartOfCampaign) {\n        groupCampaign = FunctionUtil.cloneObject(groupCampaign);\n        // campaign satisfies the pre-segmentation\n        eligibleCampaigns.push(groupCampaign);\n      } else {\n        inEligibleCampaigns.push(groupCampaign);\n      }\n    });\n\n    return {\n      eligibleCampaigns,\n      inEligibleCampaigns\n    };\n  },\n\n  /**\n   * Equally distribute the traffic of campaigns and assign a winner campaign by murmur hash.\n   *\n   * @param {Object} config\n   * @param {Object} calledCampaign\n   * @param {Array} shortlistedCampaigns\n   * @param {String} userId\n   * @param {Object} metaData\n   * @param {String} newGoalIdentifier\n   * @param {Object} decision\n   *\n   * @returns {Object} variation of the winner campaign\n   */\n  _normalizeAndFindWinningCampaign(\n    config,\n    calledCampaign,\n    shortlistedCampaigns,\n    userId,\n    groupName,\n    groupId,\n    metaData,\n    newGoalIdentifier,\n    decision\n  ) {\n    // normalise the weights of all the shortlisted campaigns\n    shortlistedCampaigns.forEach(campaign => {\n      campaign.weight = Math.floor(100 / shortlistedCampaigns.length);\n    });\n\n    // re-distribute the traffic for each camapign\n    CampaignUtil.setCampaignAllocation(shortlistedCampaigns);\n\n    let winnerCampaign = BucketingService._getVariation(\n      shortlistedCampaigns,\n      BucketingService.calculateBucketValue(CampaignUtil.getBucketingSeed(userId, undefined, groupId))\n    );\n\n    logger.log(\n      LogLevelEnum.INFO,\n      LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.GOT_WINNER_CAMPAIGN, {\n        userId,\n        groupName,\n        file,\n        campaignKey: winnerCampaign.key\n      })\n    );\n\n    if (winnerCampaign.id === calledCampaign.id) {\n      // if called campaign is the winner campaign, get the variation for the campaign\n      return DecisionUtil.evaluateTrafficAndGetVariation(\n        config,\n        winnerCampaign,\n        winnerCampaign.key,\n        userId,\n        metaData,\n        newGoalIdentifier,\n        decision\n      );\n    } else {\n      // if winning campaign not the called camapaign, return\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CALLED_CAMPAIGN_NOT_WINNER, {\n          userId,\n          groupName,\n          file,\n          campaignKey: calledCampaign.key\n        })\n      );\n      return {};\n    }\n  }\n};\n\nmodule.exports = DecisionUtil;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst GoalTypeEnum = {\n  REVENUE: 'REVENUE_TRACKING',\n  CUSTOM: 'CUSTOM_GOAL',\n  ALL: 'ALL'\n};\n\nmodule.exports = GoalTypeEnum;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst ObjectUtil = {\n  areObjectKeys: (obj = {}) => {\n    return Object.keys(obj).length;\n  },\n  getKeyValue: obj => {\n    if (!ObjectUtil.areObjectKeys(obj)) {\n      return;\n    }\n    let key = Object.keys(obj)[0];\n    let value = obj[key];\n    return {\n      key,\n      value\n    };\n  },\n  objectValues: obj => {\n    return Object.keys(obj).map(key => obj[key]);\n  }\n};\n\nmodule.exports = ObjectUtil;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst Constants = require('../constants');\nconst UrlEnum = require('../enums/UrlEnum');\nconst GoalTypeEnum = require('../enums/GoalTypeEnum');\n\nconst UuidUtil = require('./UuidUtil');\nconst ValidateUtil = require('./ValidateUtil');\nconst FunctionUtil = require('./FunctionUtil');\n\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\nconst logger = logging.getLogger();\n\n/**\n * Return primary properties required for every network call to VWO server\n * @param {Object} configObj\n * @param {String} userId\n *\n * @returns primary properties\n */\nfunction getPrimaryProperties(configObj, userId) {\n  return {\n    sId: FunctionUtil.getCurrentUnixTimestamp(),\n    u: UuidUtil.generateFor(userId, configObj.accountId)\n  };\n}\n\n/**\n * Return base properties required for every network call to VWO server\n * @param {Object} configObj\n * @param {String} userId\n *\n * @returns base properties\n */\nfunction getBaseProperties(configObj, userId) {\n  const { accountId } = configObj;\n\n  return Object.assign({}, getPrimaryProperties(configObj, userId), ImpressionUtil.getReportingProperties(configObj), {\n    account_id: accountId,\n    random: FunctionUtil.getRandomNumber(),\n    ap: Constants.PLATFORM\n  });\n}\n\nlet ImpressionUtil = {\n  /**\n   * Build properties for the impression event\n   *\n   * @param {String} userId the unique ID assigned to a user\n   * @param {String} tagKey the tag name\n   * @param {String} tagValue the tag value\n   */\n  buildEventForPushing(configObj, tagKey, tagValue, userId) {\n    const properties = Object.assign({}, getBaseProperties(configObj, userId));\n    properties.url = Constants.HTTPS_PROTOCOL + UrlEnum.BASE_URL + UrlEnum.PUSH;\n    properties.tags = JSON.stringify({\n      u: {\n        [encodeURIComponent(tagKey)]: encodeURIComponent(tagValue)\n      }\n    });\n    logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.IMPRESSION_FOR_PUSH, {\n        file: FileNameEnum.ImpressionUtil,\n        properties: this._getStringifiedLogProperties(properties)\n      })\n    );\n\n    return properties;\n  },\n  /**\n   * Build properties for the bulk impression event\n   *\n   * @param {String} userId the unique ID assigned to a user\n   * @param {String} tagKey the tag name\n   * @param {String} tagValue the tag value\n   */\n  buildBatchEventForPushing(configObj, tagKey, tagValue, userId) {\n    if (typeof process.env !== 'undefined') {\n      const properties = Object.assign({}, getPrimaryProperties(configObj, userId));\n      properties.eT = 3;\n      properties.t = encodeURIComponent(\n        JSON.stringify({\n          u: {\n            [tagKey]: tagValue\n          }\n        })\n      );\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.IMPRESSION_FOR_PUSH, {\n          file: FileNameEnum.ImpressionUtil,\n          properties: JSON.stringify(properties)\n        })\n      );\n\n      return properties;\n    }\n  },\n  /**\n   * Build properties for the impression event\n   *\n   * @param {String} userId the unique ID assigned to a user\n   * @param {String} campaignKey, the Campaign ID\n   * @param {Number} variationId, the Variation ID\n   *\n   * @return null if campaign ID or variation ID is invalid\n   */\n  buildEventForTrackingUser(configObj, campaignKey, variationId, userId, usageStats) {\n    let properties = Object.assign(\n      {\n        experiment_id: campaignKey,\n        combination: variationId\n      },\n      getBaseProperties(configObj, userId),\n      usageStats\n    );\n    properties.ed = JSON.stringify({ p: 'server' });\n    properties.url = Constants.HTTPS_PROTOCOL + UrlEnum.BASE_URL + UrlEnum.TRACK_USER;\n\n    logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.IMPRESSION_FOR_TRACK_USER, {\n        file: FileNameEnum.ImpressionUtil,\n        properties: this._getStringifiedLogProperties(properties)\n      })\n    );\n\n    return properties;\n  },\n  /**\n   * Build properties for the bulk impression event\n   *\n   * @param {String} userId the unique ID assigned to a user\n   * @param {String} campaignKey, the Campaign ID\n   * @param {Number} variationId, the Variation ID\n   *\n   * @return null if campaign ID or variation ID is invalid\n   */\n  buildBatchEventForTrackingUser(configObj, campaignKey, variationId, userId) {\n    if (typeof process.env !== 'undefined') {\n      let properties = Object.assign(\n        {\n          e: campaignKey,\n          c: variationId\n        },\n        getPrimaryProperties(configObj, userId)\n      );\n      properties.eT = 1;\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.IMPRESSION_FOR_TRACK_USER, {\n          file: FileNameEnum.ImpressionUtil,\n          properties: JSON.stringify(properties)\n        })\n      );\n\n      return properties;\n    }\n  },\n  /**\n   * Build properties for the impression event\n   *\n   * @param {String} userId the unique ID assigned to a user\n   * @param {String} campaignKey, the Campaign ID\n   * @param {Number} variationId, the Variation ID\n   * @param {String} goalId, the Goal ID\n   * @param {String} revenue, the revenue generated on conversion\n   *\n   * @return null if campaign ID or variation ID is invalid\n   */\n  buildEventForTrackingGoal(configObj, campaignKey, variationId, userId, goal = {}, revenue = null) {\n    const goalId = goal.id;\n\n    let properties = Object.assign(\n      {\n        experiment_id: campaignKey,\n        combination: variationId\n      },\n      getBaseProperties(configObj, userId)\n    );\n\n    properties.url = Constants.HTTPS_PROTOCOL + UrlEnum.BASE_URL + UrlEnum.TRACK_GOAL;\n\n    properties['goal_id'] = goalId;\n    if (goal.type === GoalTypeEnum.REVENUE && ValidateUtil.isValidValue(revenue)) {\n      properties['r'] = revenue;\n    }\n\n    logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.IMPRESSION_FOR_TRACK_GOAL, {\n        file: FileNameEnum.ImpressionUtil,\n        properties: this._getStringifiedLogProperties(properties)\n      })\n    );\n\n    return properties;\n  },\n  /**\n   * Build properties for the bulk impression event\n   *\n   * @param {String} userId the unique ID assigned to a user\n   * @param {String} campaignKey, the Campaign ID\n   * @param {Number} variationId, the Variation ID\n   * @param {String} goalId, the Goal ID\n   * @param {String} revenue, the revenue generated on conversion\n   *\n   * @return null if campaign ID or variation ID is invalid\n   */\n  buildBatchEventForTrackingGoal(configObj, campaignKey, variationId, userId, goal = {}, revenue = null) {\n    if (typeof process.env !== 'undefined') {\n      let properties = Object.assign(\n        {\n          e: campaignKey,\n          c: variationId\n        },\n        getPrimaryProperties(configObj, userId)\n      );\n      properties.eT = 2;\n\n      properties.g = goal.id;\n      if (goal.type === GoalTypeEnum.REVENUE && ValidateUtil.isValidValue(revenue)) {\n        properties.r = revenue;\n      }\n\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.IMPRESSION_FOR_TRACK_GOAL, {\n          file: FileNameEnum.ImpressionUtil,\n          properties: JSON.stringify(properties)\n        })\n      );\n\n      return properties;\n    }\n  },\n\n  /**\n   * Return an object containing properties required for segmenting reports\n   * @param {Object} configObj\n   * @returns reporting properties\n   */\n  getReportingProperties(configObj) {\n    const { sdkKey } = configObj;\n\n    return {\n      [Constants.SDK_QUERY_PARAM]: Constants.SDK_NAME,\n      [Constants.SDK_VERSION_QUERY_PARAM]: Constants.SDK_VERSION,\n      env: sdkKey\n    };\n  },\n\n  /**\n   * Remove the sensitive keys from the properties to te displayed in the log.\n   * @param {Object} properties\n   * @returns properties without sensitive keys\n   */\n  _getStringifiedLogProperties(properties) {\n    const logProperties = Object.assign({}, properties);\n    delete logProperties.env;\n    return JSON.stringify(logProperties);\n  }\n};\n\nmodule.exports = ImpressionUtil;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst Hasher = require('murmurhash');\n\nconst Constants = require('../constants');\nconst ValidateUtil = require('../utils/ValidateUtil');\n\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst CampaignUtil = require('../utils/CampaignUtil');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\nconst logger = logging.getLogger();\n\nlet BucketingService = {\n  /**\n   * Generates Bucket Value of the User by hashing the User ID by murmurHash\n   * and scaling it down.\n   *\n   * @param {Number} hashValue the hashValue generated after hashing\n   * @param {Number} maxValue the value up-to which hashValue needs to be scaled\n   * @param {Number} multiplier multiplier in case the traffic allocation is less than 100\n   *\n   * @return {Number} bucket Value of the User\n   */\n  _generateBucketValue: (hashValue, maxValue, multiplier = 1) => {\n    const ratio = hashValue / Math.pow(2, 32);\n    const multipliedValue = (maxValue * ratio + 1) * multiplier;\n    const value = Math.floor(multipliedValue);\n\n    return value;\n  },\n\n  /**\n   * Returns the Variation by checking the Start and End Bucket Allocations of each Variation\n   *\n   * @param {Object} campaign which contains the variations\n   * @param {Number} bucketValue the bucket Value of the user\n   *\n   * @return {Object|null} variation data allotted to the user or null if not\n   */\n  _getVariation: (variations, bucketValue) => {\n    for (let i = 0; i < Object.keys(variations).length; i++) {\n      let variation = variations[i];\n\n      if (bucketValue >= variation.startVariationAllocation && bucketValue <= variation.endVariationAllocation) {\n        return variation;\n      }\n    }\n\n    return null;\n  },\n\n  /**\n   * Validates the User ID and generates Bucket Value of the User by hashing the userId by murmurHash and scaling it down.\n   *\n   * @param {String} userId the unique ID assigned to User\n   *\n   * @return {Number} the bucket Value allotted to User (between 1 to $this->$MAX_TRAFFIC_PERCENT)\n   */\n  _getBucketValueForUser: (seed, userId, disableLog) => {\n    let hashValue = Hasher.v3(seed, Constants.SEED_VALUE);\n    let bucketValue = BucketingService._generateBucketValue(hashValue, Constants.MAX_TRAFFIC_PERCENT);\n\n    logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.USER_HASH_BUCKET_VALUE, {\n        file: FileNameEnum.BucketingService,\n        hashValue,\n        bucketValue,\n        userId\n      }),\n      disableLog\n    );\n\n    return bucketValue;\n  },\n\n  /**\n   * Calculate if this user should become part of the campaign or not\n   *\n   * @param {String} userId the unique ID assigned to a user\n   * @param {Object} campaign fot getting the value of traffic allotted to the campaign\n   *\n   * @return {Boolean} if User is a part of Campaign or not\n   */\n  isUserPartOfCampaign: (userId, campaign, disableLog = false) => {\n    if (!ValidateUtil.isValidValue(userId) || !campaign) {\n      return false;\n    }\n\n    let trafficAllocation = campaign.percentTraffic;\n    let valueAssignedToUser = BucketingService._getBucketValueForUser(\n      CampaignUtil.getBucketingSeed(userId, campaign),\n      userId,\n      disableLog\n    );\n    let isUserPart = valueAssignedToUser !== 0 && valueAssignedToUser <= trafficAllocation;\n\n    logger.log(\n      LogLevelEnum.INFO,\n      LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.USER_ELIGIBILITY_FOR_CAMPAIGN, {\n        file: FileNameEnum.BucketingService,\n        userId,\n        isUserPart\n      }),\n      disableLog\n    );\n\n    return isUserPart;\n  },\n\n  /**\n   * Validates the User ID and generates Variation into which the User is bucketed in.\n   *\n   * @param {String} userId the unique ID assigned to User\n   * @param {Object} campaign the Campaign of which User is a part of\n   *\n   * @return {Object|null} variation data into which user is bucketed in or null if not\n   */\n  bucketUserToVariation: (userId, campaign) => {\n    let multiplier;\n    if (!ValidateUtil.isValidValue(userId)) {\n      logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.INVALID_USER_ID, {\n          file: FileNameEnum.BucketingService,\n          userId,\n          method: 'bucketUserToVariation'\n        })\n      );\n\n      return null;\n    }\n\n    if (!campaign) {\n      return null;\n    }\n    if (campaign.percentTraffic) {\n      multiplier = Constants.MAX_TRAFFIC_VALUE / campaign.percentTraffic / 100;\n    }\n    const hashValue = BucketingService._generateHashValue(\n      campaign.isBucketingSeedEnabled ? `${campaign.id}_${userId}` : userId\n    );\n    const bucketValue = BucketingService._generateBucketValue(hashValue, Constants.MAX_TRAFFIC_VALUE, multiplier);\n\n    logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.VARIATION_HASH_BUCKET_VALUE, {\n        file: FileNameEnum.BucketingService,\n        userId,\n        campaignKey: campaign.key,\n        percentTraffic: campaign.percentTraffic,\n        bucketValue,\n        hashValue\n      })\n    );\n    return BucketingService._getVariation(campaign.variations, bucketValue);\n  },\n  calculateBucketValue: (seed, multiplier = 1) => {\n    const hashValue = BucketingService._generateHashValue(seed);\n    return BucketingService._generateBucketValue(hashValue, Constants.MAX_TRAFFIC_VALUE, multiplier);\n  },\n  _generateHashValue: userId => {\n    return Hasher.v3(userId, Constants.SEED_VALUE);\n  }\n};\n\nmodule.exports = BucketingService;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst AnsiColorEnum = require('./AnsiColorEnum');\n\nconst LogNumberLevel = {\n  _0: 'NOTSET',\n  _1: 'DEBUG',\n  _2: 'INFO',\n  _3: 'WARN',\n  _4: 'ERROR'\n};\n\nconst LogLevelEnum = {\n  NOTSET: 0,\n  DEBUG: 1,\n  INFO: 2,\n  WARN: 3,\n  ERROR: 4\n};\n\nconst LogLevelColorInfoEnum = {\n  [LogLevelEnum.NOTSET]: `${AnsiColorEnum.BOLD}${AnsiColorEnum.WHITE}[NOTSET]:${AnsiColorEnum.RESET}`,\n  [LogLevelEnum.DEBUG]: `${AnsiColorEnum.BOLD}${AnsiColorEnum.LIGHTBLUE}[DEBUG]: ${AnsiColorEnum.RESET}`,\n  [LogLevelEnum.INFO]: `${AnsiColorEnum.BOLD}${AnsiColorEnum.CYAN}[INFO]:  ${AnsiColorEnum.RESET}`,\n  [LogLevelEnum.WARN]: `${AnsiColorEnum.BOLD}${AnsiColorEnum.YELLOW}[WARN]:  ${AnsiColorEnum.RESET}`,\n  [LogLevelEnum.ERROR]: `${AnsiColorEnum.BOLD}${AnsiColorEnum.RED}[ERROR]: ${AnsiColorEnum.RESET}`\n};\n\nconst LogLevelInfoEnum = {\n  [LogLevelEnum.NOTSET]: `[NOTSET]:`,\n  [LogLevelEnum.DEBUG]: `[DEBUG]: `,\n  [LogLevelEnum.INFO]: `[INFO]:  `,\n  [LogLevelEnum.WARN]: `[WARN]:  `,\n  [LogLevelEnum.ERROR]: `[ERROR]: `\n};\n\nmodule.exports = {\n  LogLevelEnum,\n  LogNumberLevel,\n  LogLevelInfoEnum,\n  LogLevelColorInfoEnum\n};\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst CampaignTypeEnum = {\n  FEATURE_TEST: 'FEATURE_TEST',\n  FEATURE_ROLLOUT: 'FEATURE_ROLLOUT',\n  AB: 'VISUAL_AB'\n};\n\nmodule.exports = CampaignTypeEnum;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst SegmentOperandTypes = require('./SegmentOperandTypesEnum');\nconst SegmentOperatorTypes = require('./SegmentOperatorTypesEnum');\nconst SegmentOperandValueTypeRegexes = require('./SegmentOperandValueTypeRegexesEnum');\nconst SegmentOperandValues = require('./SegmentOperandValuesEnum');\n\nconst SegmentEnum = {\n  SegmentOperandTypes,\n  SegmentOperatorTypes,\n  SegmentOperandValueTypeRegexes,\n  SegmentOperandValues\n};\n\nmodule.exports = SegmentEnum;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DataTypeUtil = require('../utils/DataTypeUtil');\n\n/**\n * Hooks Manager is responsible for triggering callbacks useful to the end-user based on certain lifecycle events.\n * Possible use with integrations when the user intends to send an event when a visitor is part of the experiment.\n */\nconst HooksManager = {\n  /**\n   * Initializes with configuration from VWO Object.\n   * @param {Object} config\n   */\n  init(config = {}) {\n    this.callback = config.integrations && config.integrations.callback;\n  },\n  /**\n   * Executes the callback\n   * @param {Object} properties Properties from the callback\n   */\n  execute(properties) {\n    if (DataTypeUtil.isFunction(this.callback)) {\n      this.callback(properties);\n    }\n  }\n};\n\nmodule.exports = HooksManager;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst uuidv5 = require('uuid/v5');\nconst Constants = require('../constants');\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\nconst logger = logging.getLogger();\n\nconst VWO_NAMESPACE = uuidv5(Constants.SEED_URL, uuidv5.URL);\n\nconst UuidUtil = {\n  generateFor: (userId, accountId) => {\n    userId = `${userId}`; // type-cast\n    const hash = `${accountId}`;\n    const userIdNamespace = UuidUtil.generate(hash, VWO_NAMESPACE);\n    const uuidForUserIdAccountId = UuidUtil.generate(userId, userIdNamespace);\n\n    let desiredUuid = uuidForUserIdAccountId.replace(/-/gi, '').toUpperCase();\n\n    logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.UUID_FOR_USER, {\n        file: FileNameEnum.UuidUtil,\n        userId,\n        accountId,\n        desiredUuid\n      })\n    );\n\n    return desiredUuid;\n  },\n  generate: (name, namespace) => {\n    if (!name || !namespace) {\n      return;\n    }\n\n    return uuidv5(name, namespace);\n  }\n};\n\nmodule.exports = UuidUtil;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst UrlEnum = {\n  BASE_URL: 'dev.visualwebsiteoptimizer.com',\n  SETTINGS_URL: '/server-side/settings',\n  WEBHOOK_SETTINGS_URL: '/server-side/pull',\n  TRACK_USER: '/server-side/track-user',\n  TRACK_GOAL: '/server-side/track-goal',\n  PUSH: '/server-side/push',\n  BATCH_EVENTS: '/server-side/batch-events'\n};\n\nmodule.exports = UrlEnum;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst Constants = require('../constants');\nconst UrlEnum = require('../enums/UrlEnum');\nconst { getRandomNumber, getCurrentTime } = require('./FunctionUtil');\n\nmodule.exports = {\n  get: (accountId, sdkKey, userStorageService, config = {}) => {\n    if (!accountId || !sdkKey) {\n      console.error('AccountId and sdkKey are required for fetching account settings. Aborting!');\n      return;\n    }\n\n    let protocol = 'https';\n    let port;\n    let hostname = UrlEnum.BASE_URL;\n    let path = UrlEnum.SETTINGS_URL;\n\n    if (config.isViaWebhook) {\n      path = UrlEnum.WEBHOOK_SETTINGS_URL;\n    }\n\n    path +=\n      `?a=${accountId}&` +\n      `i=${sdkKey}&` +\n      `r=${getRandomNumber()}&` +\n      `platform=${Constants.PLATFORM}&` +\n      `${Constants.SDK_QUERY_PARAM}=${Constants.SDK_NAME}&` +\n      `${Constants.SDK_VERSION_QUERY_PARAM}=${Constants.SDK_VERSION}`;\n\n    if (config.hostname && config.path) {\n      protocol = config.protocol;\n      port = config.port;\n      hostname = config.hostname || hostname;\n      path = config.path || path;\n    }\n\n    if (typeof process.env === 'undefined') {\n      return require('./XhrUtil').send({\n        method: 'GET',\n        url: `${protocol}://${hostname}${path}`,\n        userStorageService\n      });\n    } else {\n      const http = require('http');\n      const https = require('https');\n\n      return new Promise((resolve, reject) => {\n        const options = {\n          hostname,\n          path,\n          agent: false\n        };\n\n        if (port) {\n          options.port = port;\n        }\n\n        (protocol === 'https' ? https : http).get(options, res => {\n          const { statusCode } = res;\n          const contentType = res.headers['content-type'];\n\n          let error;\n          let rawData = '';\n\n          if (!/^application\\/json/.test(contentType)) {\n            error = `Invalid content-type.\\nExpected application/json but received ${contentType}`;\n          }\n\n          if (error) {\n            console.error(error.message);\n            // Consume response data to free up memory\n            res.resume();\n            reject(error);\n\n            return;\n          }\n\n          res.setEncoding('utf8');\n\n          res.on('data', chunk => {\n            rawData += chunk;\n          });\n\n          res.on('end', () => {\n            try {\n              const parsedData = JSON.parse(rawData);\n\n              if (statusCode !== 200) {\n                let error = `VWO-SDK - [ERROR]: ${getCurrentTime()} Request failed for fetching account settings. Got Status Code: ${statusCode} and message: ${rawData}`;\n                console.error(error);\n                reject(error);\n\n                return;\n              }\n              resolve(parsedData);\n            } catch (err) {\n              console.error(\n                `VWO-SDK - [ERROR]: ${getCurrentTime()} Request failed for fetching account settings - ${err.message}`\n              );\n              reject(err);\n            }\n          });\n        });\n      });\n    }\n  }\n};\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst VWO = require('./VWO');\n\nconst DataTypeUtil = require('./utils/DataTypeUtil');\nconst FunctionUtil = require('./utils/FunctionUtil');\nconst { objectValues } = require('./utils/ObjectUtil');\nconst SettingsFileUtil = require('./utils/SettingsFileUtil');\nconst GoalTypeEnum = require('./enums/GoalTypeEnum');\nconst { MAX_EVENTS_PER_REQUEST } = require('./constants');\n\nconst logging = require('./services/logging');\nconst FileNameEnum = require('./enums/FileNameEnum');\nconst file = FileNameEnum.INDEX;\nconst { setLogHandler, setLogLevel, LogLevelEnum, LogNumberLevel, LogMessageEnum, LogMessageUtil } = logging;\n\nconst logger = logging.getLogger();\n\n// By default, all ERRORS should be logged\nlogging.setLogLevel(LogLevelEnum.ERROR);\n\nfunction logError(log) {\n  logger.log(LogLevelEnum.ERROR, log);\n\n  throw new Error(logger.log(LogLevelEnum.ERROR, log));\n}\n\nmodule.exports = {\n  logging,\n  setLogger: setLogHandler,\n  setLogLevel,\n  getSettingsFile: SettingsFileUtil.get,\n  GoalTypeEnum,\n  /**\n   * Initializes the SDK and parses the settingsfile\n   *\n   * @param {Object} config configuration for the SDK\n   */\n  launch: function(sdkConfig) {\n    let config = {};\n    try {\n      // validating config schema\n      FunctionUtil.cloneObject(sdkConfig);\n      if (\n        !DataTypeUtil.isUndefined(sdkConfig.shouldTrackReturningUser) &&\n        !DataTypeUtil.isBoolean(sdkConfig.shouldTrackReturningUser)\n      ) {\n        throw new Error('shouldTrackReturningUser should be boolean');\n      }\n      if (\n        !DataTypeUtil.isUndefined(sdkConfig.isDevelopmentMode) &&\n        !DataTypeUtil.isBoolean(sdkConfig.isDevelopmentMode)\n      ) {\n        throw new Error('isDevelopmentMode should be boolean');\n      }\n      if (sdkConfig.goalTypeToTrack && !objectValues(GoalTypeEnum).includes(sdkConfig.goalTypeToTrack)) {\n        throw new Error('goalTypeToTrack should be certain strings');\n      }\n      if (\n        sdkConfig.logging &&\n        sdkConfig.logging.level &&\n        !objectValues(LogLevelEnum).includes(sdkConfig.logging.level)\n      ) {\n        throw new Error('log level should be certain values');\n      }\n\n      if (sdkConfig.pollingInterval && !DataTypeUtil.isNumber(sdkConfig.pollingInterval)) {\n        const log = LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.POLLING_INTERVAL_INVALID, {\n          file: file\n        });\n\n        logError(log);\n      }\n\n      if (sdkConfig.pollingInterval && DataTypeUtil.isUndefined(sdkConfig.sdkKey)) {\n        const log = LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.SDK_KEY_NOT_PROVIVED, {\n          file: file\n        });\n\n        logError(log);\n      }\n\n      if (sdkConfig.pollingInterval && !DataTypeUtil.isString(sdkConfig.sdkKey)) {\n        const log = LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.SDK_KEY_NOT_STRING, {\n          file: file\n        });\n\n        logError(log);\n      }\n\n      if (!DataTypeUtil.isUndefined(sdkConfig.batchEvents) && !DataTypeUtil.isObject(sdkConfig.batchEvents)) {\n        const log = LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.EVENT_BATCHING_NOT_OBJECT, {\n          file: file\n        });\n\n        logError(log);\n      }\n\n      if (DataTypeUtil.isObject(sdkConfig.batchEvents) && typeof process.env === 'undefined') {\n        sdkConfig.batchEvents = null;\n      }\n\n      if (typeof process.env !== 'undefined') {\n        if (\n          DataTypeUtil.isObject(sdkConfig.batchEvents) &&\n          (!(\n            (DataTypeUtil.isNumber(sdkConfig.batchEvents.eventsPerRequest) &&\n              sdkConfig.batchEvents.eventsPerRequest > 0 &&\n              sdkConfig.batchEvents.eventsPerRequest <= MAX_EVENTS_PER_REQUEST) ||\n            (DataTypeUtil.isNumber(sdkConfig.batchEvents.requestTimeInterval) &&\n              sdkConfig.batchEvents.requestTimeInterval >= 1)\n          ) ||\n            (sdkConfig.batchEvents.flushCallback && !DataTypeUtil.isFunction(sdkConfig.batchEvents.flushCallback)))\n        ) {\n          throw new Error('Invalid batchEvents config');\n        }\n      }\n\n      config = sdkConfig;\n    } catch (err) {\n      logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.SDK_CONFIG_CORRUPTED, {\n          file: file\n        })\n      );\n\n      config = {};\n    }\n\n    // If DEV mode, set colorful logs to true\n    if (config.isDevelopmentMode) {\n      logging.setLogColorMode(true);\n    }\n\n    // If logging is enabled, use the logger and logLevel defined by the client\n    if (config.logging && DataTypeUtil.isObject(config.logging)) {\n      if (config.logging.haveColoredLogs !== undefined) {\n        logging.setLogColorMode(config.logging.haveColoredLogs);\n      }\n\n      if (\n        config.logging.logger &&\n        DataTypeUtil.isObject(config.logging.logger) &&\n        DataTypeUtil.isFunction(config.logging.logger.log)\n      ) {\n        logging.setLogHandler(config.logging.logger);\n        logging.setLogLevel(logging.LogLevelEnum.NOTSET);\n\n        logger.log(\n          LogLevelEnum.DEBUG,\n          LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.CUSTOM_LOGGER_USED, {\n            file: file\n          })\n        );\n      } else if (config.logging.logger) {\n        logger.log(\n          LogLevelEnum.ERROR,\n          LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.CUSTOM_LOGGER_MISCONFIGURED, {\n            file: file\n          })\n        );\n      }\n\n      if (config.logging.level !== undefined) {\n        logging.setLogLevel(config.logging.level);\n        logger.log(\n          LogLevelEnum.DEBUG,\n          LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.LOG_LEVEL_SET, {\n            file: file,\n            level: LogNumberLevel['_' + config.logging.level]\n          })\n        );\n      }\n    }\n\n    // DEBUG log for knowing whether it's DEV mode\n    if (config.isDevelopmentMode) {\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.SET_DEVELOPMENT_MODE, {\n          file: file\n        })\n      );\n    }\n\n    // Set logger on config Obkect, to be required later\n    config.logger = (config.logging && config.logging.logger) || logger;\n\n    // Create an instance of VWO class which exposes API methods\n    return new VWO(config);\n  }\n};\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst api = require('./api');\n\nconst EventQueue = require('./services/EventQueue');\nconst SettingsFileService = require('./services/SettingsFileManager');\n\nlet BatchEventsDispatcher;\nlet customEventUtil;\nlet BatchEventsQueue;\n\nif (typeof process.env !== 'undefined') {\n  BatchEventsQueue = require('./services/BatchEventsQueue');\n  BatchEventsDispatcher = require('./utils/BatchEventsDispatcher').dispatch;\n  customEventUtil = require('./utils/CustomEventUtil');\n}\n\nconst logging = require('./services/logging');\nconst FileNameEnum = require('./enums/FileNameEnum');\nconst HooksManager = require('./services/HooksManager');\nconst UsageStats = require('./services/UsageStats');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\n\nconst file = FileNameEnum.VWO;\n\nclass VWO {\n  // Setting various services on the instance to be accessible by its member functions\n  constructor(config = {}) {\n    this.getVariation = this.getVariationName; // to be backward compatible\n    this.userStorageService = config.userStorageService;\n    this.logger = config.logger;\n\n    // Initialize Hooks manager so that callbacks can be invoked\n    HooksManager.init(config);\n    let settingsFileManager = new SettingsFileService(config);\n\n    // Validate the config file i.e. check if required fields contain appropriate data\n    if (!settingsFileManager.isSettingsFileValid()) {\n      this.logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.INVALID_SETTINGS_FILE, {\n          file\n        })\n      );\n\n      return;\n    }\n\n    this.logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.VALID_CONFIGURATION, {\n        file\n      })\n    );\n\n    settingsFileManager.checkAndPoll(); // Checks if pollingInterval is passed then starts polling settingsFile\n\n    // Setup event quque for sending impressions to VWO server\n    this.eventQueue = new EventQueue();\n    this.SettingsFileManager = settingsFileManager;\n\n    this.usageStats = new UsageStats();\n    if (!settingsFileManager.getConfig().isDevelopmentMode) {\n      this.usageStats.collectUsageStats(settingsFileManager.getConfig());\n    }\n\n    if (typeof process.env !== 'undefined') {\n      if (config.batchEvents) {\n        const accountId = settingsFileManager.getSettingsFile().accountId;\n        const sdkKey = settingsFileManager.getSettingsFile().sdkKey;\n\n        this.batchEventsQueue = new BatchEventsQueue(\n          Object.assign({}, config.batchEvents, {\n            accountId,\n            dispatcher: (events, callback) =>\n              BatchEventsDispatcher(\n                {\n                  ev: events\n                },\n                callback,\n                Object.assign(\n                  {},\n                  {\n                    a: accountId\n                  },\n                  this.usageStats.getUsageStats()\n                ),\n                sdkKey\n              )\n          })\n        );\n\n        this.batchEventsQueue.flushAndClearTimer.bind(this.batchEventsQueue);\n      }\n    }\n\n    // Process settingsFile for various things. For eg: assign bucket range to variation, etc.\n    this.SettingsFileManager.processSettingsFile();\n\n    this.logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.SDK_INITIALIZED, {\n        file\n      })\n    );\n  }\n\n  // PUBLIC METHODS\n  /**\n   * This API method: Gets the variation assigned for the user for the campaign and send the metrics to VWO server\n   *\n   * @param {String} campaignKey       unique campaign key specified in VWO app\n   * @param {String} userId            ID assigned to a user\n   * @param {Object} options           optional params - customVariables, variationTargetingVariables\n   *\n   * @return {String|null}             If variation is assigned then variation-name otherwise null in case of user not becoming part\n   */\n  activate(campaignKey, userId, options) {\n    try {\n      let self = this;\n\n      return api.activate(self, campaignKey, userId, options);\n    } catch (err) {\n      this.logger.log(LogLevelEnum.ERROR, err.message);\n      return null;\n    }\n  }\n\n  /**\n   * This API method: Gets the variation assigned for the user for the campaign\n   *\n   * @param {String} campaignKey       unique campaign key specified in VWO app\n   * @param {String} userId            ID assigned to a user\n   * @param {Object} options           optional params - customVariables, variationTargetingVariables\n   *\n   * @return {String|null}             If variation is assigned then variation-name otherwise null in case of user not becoming part\n   */\n  getVariationName(campaignKey, userId, options) {\n    try {\n      let self = this;\n\n      return api.getVariation(self, campaignKey, userId, options);\n    } catch (err) {\n      this.logger.log(LogLevelEnum.ERROR, err.message);\n      return null;\n    }\n  }\n\n  /**\n   * This API method: Marks the conversion of the campaign for a particular goal\n   *\n   * @param {String/Array<string>/null/undefined} campaignSpecifier campaign keys to track           unique campaignSpecifier\n   * @param {String} userId                ID assigned to a user\n   * @param {String} goalIdentifier         unique campaign's goal identifier\n   * @param {Object} options               optional params - customVariables, variationTargetingVariables, revenueValue\n   */\n  track(campaignSpecifier, userId, goalIdentifier, options) {\n    try {\n      let self = this;\n\n      return api.track(self, campaignSpecifier, userId, goalIdentifier, options);\n    } catch (err) {\n      this.logger.log(LogLevelEnum.ERROR, err.message);\n      return null;\n    }\n  }\n\n  /**\n   * This API method checks: Whether a feature is enabled or not for the given user\n   *\n   * @param {String} campaignKey       Unique key for a campaign\n   * @param {String} userId            Unique identifier for the user\n   * @param {Object} options           optional params - customVariables, variationTargetingVariables\n   *\n   * @return {Boolean}                 true if feature enabled, false otherwise\n   */\n  isFeatureEnabled(campaignKey, userId, options) {\n    try {\n      let self = this;\n\n      return api.isFeatureEnabled(self, campaignKey, userId, options);\n    } catch (err) {\n      this.logger.log(LogLevelEnum.ERROR, err.message);\n      return false;\n    }\n  }\n\n  /**\n   * This API method: Return the variable for that variation(if Feature Test),\n   *    otherwise the default values being set in Feature\n   *\n   * @param {String} campaignKey   Unique key for a campaign\n   * @param {String} variableKey   Unique key for a feature's variable\n   * @param {String} userId        Unique identifier for the user\n   * @param {Object} options           optional params - customVariables, variationTargetingVariables\n   *\n   * @return {string|number|double|boolean|null} Variable value as is set in the VWO app i.e.\n   *                                             maintaining the data-type,\n   *                                             null if anything fails like campaign / variable not found\n   */\n  getFeatureVariableValue(campaignKey, variableKey, userId, options) {\n    try {\n      let self = this;\n\n      return api.getFeatureVariableValue(self, campaignKey, variableKey, userId, options);\n    } catch (err) {\n      this.logger.log(LogLevelEnum.ERROR, err.message);\n      return null;\n    }\n  }\n\n  /**\n   * This API method: Pushes the key-value tag pair for a particular user\n   *\n   * @param {String} tagKey                    tag key\n   * @param {String} tagValue                  tag Value\n   * @param {String} userId                    ID assigned to a user\n   *\n   * @return {Boolean}                    true if request is pushed to eventQueue, false if params are invalid or settings file is unavailable\n   */\n  push(tagKey, tagValue, userId) {\n    try {\n      let self = this;\n\n      return api.push(self, tagKey, tagValue, userId);\n    } catch (err) {\n      this.logger.log(LogLevelEnum.ERROR, err.message);\n      return false;\n    }\n  }\n  /**\n   * Manually flush impression events to VWO which are queued in batch queue as per batchEvents config\n   */\n  flushEvents() {\n    if (typeof process.env !== 'undefined') {\n      return new Promise((resolve, _reject) => {\n        const accountId = this.SettingsFileManager.getSettingsFile().accountId;\n\n        if (this.batchEventsQueue) {\n          customEventUtil.getInstance().once('batchCallCompleteion', (status, message) => {\n            if (status) {\n              resolve({\n                status: true,\n                message: message || 'Batch call sent to VWO'\n              });\n            } else {\n              resolve({\n                status: false,\n                message: message || 'Batch call could not be processed'\n              });\n            }\n          });\n\n          this.batchEventsQueue.flushAndClearTimer();\n\n          return;\n        }\n\n        this.logger.log(\n          LogLevelEnum.ERROR,\n          LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.NO_BATCH_QUEUE, {\n            file,\n            accountId\n          })\n        );\n\n        resolve({\n          status: false,\n          message: 'No batchEvents config present in launch API'\n        });\n      });\n    }\n  }\n\n  /**\n   * Fetch latest settings-file and update so that vwoClientInstance could use latest settings\n   * Helpful especially when using webhooks\n   *\n   * @param {Number} accountId\n   * @param {String} sdkKey\n   *\n   * @return {Promise}\n   */\n  getAndUpdateSettingsFile(accountId, sdkKey) {\n    return this.SettingsFileManager.getAndUpdateSettingsFile(accountId, sdkKey);\n  }\n}\n\nmodule.exports = VWO;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst activate = require('./activate');\nconst getVariation = require('./getVariation');\nconst track = require('./track');\nconst isFeatureEnabled = require('./isFeatureEnabled');\nconst getFeatureVariableValue = require('./getFeatureVariableValue');\nconst push = require('./push');\n\nmodule.exports = {\n  activate,\n  getVariation,\n  track,\n  isFeatureEnabled,\n  getFeatureVariableValue,\n  push\n};\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst Constants = require('../constants');\nconst ApiEnum = require('../enums/ApiEnum');\n\nconst DecisionUtil = require('../utils/DecisionUtil');\nconst CampaignUtil = require('../utils/CampaignUtil');\nconst ImpressionUtil = require('../utils/ImpressionUtil');\nconst ValidateUtil = require('../utils/ValidateUtil');\nconst DataTypeUtil = require('../utils/DataTypeUtil');\n\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\n\nconst file = FileNameEnum.Activate;\n\n/**\n * This API method: Gets the variation assigned for the user for the campaign and send the metrics to VWO server\n *\n * 1. Validates the arguments being passed\n * 2. Checks if user is eligible to get bucketed into the campaign,\n * 3. Assigns the determinitic variation to the user(based on userId), if user becomes part of campaign\n *    If userStorageService is used, it will look into it for the variation and if found, no further processing is done\n * 4. Sends an impression call to VWO server to track user\n *\n * @param {Object} vwoInstance       VWO instance which has logger, settingsFile etc.\n * @param {String} campaignKey       unique campaign key specified in VWO app\n * @param {String} userId            ID assigned to a user\n * @param {Object} options           Optional params\n *\n * @return {String|null}             If variation is assigned then variation-name otherwise null in case of user not becoming part\n */\nfunction activate(vwoInstance, campaignKey, userId, options = {}) {\n  const api = ApiEnum.ACTIVATE;\n  let areParamsValid = false;\n  if (DataTypeUtil.isObject(options)) {\n    var { customVariables, variationTargetingVariables, userStorageData, shouldTrackReturningUser, metaData } = options;\n    // Check if arguments have valid data-type\n    if (\n      ValidateUtil.areValidParamsForAPIMethod({\n        method: ApiEnum.ACTIVATE,\n        campaignKey,\n        userId,\n        customVariables,\n        variationTargetingVariables,\n        userStorageData,\n        shouldTrackReturningUser,\n        metaData\n      })\n    ) {\n      areParamsValid = true;\n    }\n  }\n\n  if (areParamsValid === false) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.ACTIVATE_API_MISSING_PARAMS, {\n        file\n      })\n    );\n    return null;\n  }\n\n  // Get the cached configuration\n  let config = vwoInstance.SettingsFileManager.getConfig();\n  let settingsFile = vwoInstance.SettingsFileManager.getSettingsFile(api);\n\n  // If no settings are found, simply return no variation\n  if (!settingsFile) {\n    return null;\n  }\n\n  shouldTrackReturningUser = shouldTrackReturningUser || config.shouldTrackReturningUser || false;\n\n  // Get the campaign settings based on campaignKey from the settings\n  let campaign = CampaignUtil.getCampaign(settingsFile, campaignKey);\n\n  // If matching campaign is not found with campaignKey or if found but is in not RUNNING state, simply return no variation\n  if (!campaign || campaign.status !== Constants.STATUS_RUNNING) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.CAMPAIGN_NOT_RUNNING, {\n        file,\n        campaignKey,\n        api\n      })\n    );\n\n    return null;\n  }\n\n  if (!CampaignUtil.isAbCampaign(campaign)) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.INVALID_API, {\n        file,\n        campaignKey,\n        campaignType: campaign.type,\n        userId,\n        api\n      })\n    );\n\n    return null;\n  }\n\n  // Once the matching RUNNING campaign is found, assign the deterministic variation to the userId provided\n  const { variationId, variationName, isStoredVariation } = DecisionUtil.getVariation(\n    config,\n    settingsFile,\n    campaign,\n    campaignKey,\n    userId,\n    customVariables,\n    variationTargetingVariables,\n    userStorageData,\n    metaData,\n    true,\n    undefined,\n    api\n  );\n\n  // Check if variation-name has been assigned to the userId. If not, return no variation\n  if (!ValidateUtil.isValidValue(variationName)) {\n    vwoInstance.logger.log(\n      LogLevelEnum.INFO,\n      LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.INVALID_VARIATION_KEY, {\n        file,\n        userId,\n        campaignKey: campaignKey\n      })\n    );\n    return null;\n  }\n\n  // check if variation found from storage. return it without sending a call to VWO server\n  if (isStoredVariation && !shouldTrackReturningUser) {\n    vwoInstance.logger.log(\n      LogLevelEnum.INFO,\n      LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.USER_ALREADY_TRACKED, {\n        file,\n        userId,\n        campaignKey,\n        api\n      })\n    );\n    return variationName;\n  }\n\n  // Variation found...let VWO server knows about it to show report stats\n  if (config.batchEvents) {\n    let properties = ImpressionUtil.buildBatchEventForTrackingUser(settingsFile, campaign.id, variationId, userId);\n    vwoInstance.batchEventsQueue.enqueue(properties);\n  } else {\n    let properties = ImpressionUtil.buildEventForTrackingUser(\n      settingsFile,\n      campaign.id,\n      variationId,\n      userId,\n      vwoInstance.usageStats.getUsageStats()\n    );\n    vwoInstance.eventQueue.process(config, properties, vwoInstance);\n  }\n\n  return variationName;\n}\n\nmodule.exports = activate;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst ValidateUtil = require('../utils/ValidateUtil');\n\nconst Bucketer = require('./BucketingService');\n\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\nconst logger = logging.getLogger();\n\nconst VariationDecider = {\n  /**\n   * Returns the Variation Allotted to User\n   *\n   * @param {String} userId the unique ID assigned to User\n   * @param {Object} campaign\n   *\n   * @return {Object} Variation object allotted to User\n   */\n  getVariationAllotted: (userId, campaign) => {\n    let response = {\n      variation: null,\n      variationId: null,\n      variationName: null\n    };\n\n    if (!ValidateUtil.isValidValue(userId)) {\n      logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.INVALID_USER_ID, {\n          file: FileNameEnum.BucketingService,\n          userId,\n          method: 'getVariationAllotted'\n        })\n      );\n\n      return response;\n    }\n\n    if (Bucketer.isUserPartOfCampaign(userId, campaign)) {\n      let variation = VariationDecider.getVariationOfCampaignForUser(userId, campaign) || {};\n\n      response.variation = variation;\n      response.variationId = variation.id;\n      response.variationName = variation.name;\n\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.GOT_VARIATION_FOR_USER, {\n          file: FileNameEnum.VariationDecider,\n          variationName: variation.name,\n          userId,\n          campaignKey: campaign.key,\n          method: 'getVariationAllotted'\n        })\n      );\n    } else {\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.USER_NOT_PART_OF_CAMPAIGN, {\n          file: FileNameEnum.VariationDecider,\n          userId,\n          campaignKey: campaign.key,\n          method: 'getVariationAllotted'\n        })\n      );\n    }\n\n    return response;\n  },\n\n  /**\n   * Assigns random variation ID to a particular user depending on the PercentTraffic.\n   * Makes user a part of campaign if user's included in Traffic.\n   *\n   * @param {String} userId the unique ID assigned to a user\n   * @param {Object} campaign the Campaign of which user is to be made a part of\n   *\n   * @return {Object|null} Variation allotted to User\n   */\n  getVariationOfCampaignForUser: (userId, campaign) => {\n    if (!ValidateUtil.isValidValue(userId) || !campaign) {\n      return null;\n    }\n\n    let variation = Bucketer.bucketUserToVariation(userId, campaign);\n\n    if (variation && variation.name) {\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.GOT_VARIATION_FOR_USER, {\n          file: FileNameEnum.VariationDecider,\n          variationName: variation.name,\n          userId,\n          campaignKey: campaign.key\n        })\n      );\n      return {\n        variation,\n        name: variation.name,\n        id: variation.id\n      };\n    }\n\n    logger.log(\n      LogLevelEnum.INFO,\n      LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.USER_GOT_NO_VARIATION, {\n        file: FileNameEnum.VariationDecider,\n        userId,\n        campaignKey: campaign.key\n      })\n    );\n\n    return null;\n  }\n};\n\nmodule.exports = VariationDecider;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DataTypeEnum = {\n  NUMBER: 'number',\n  STRING: 'string',\n  // FUNCTION: 'function',\n  BOOLEAN: 'boolean',\n  OBJECT: 'object'\n};\n\nmodule.exports = DataTypeEnum;\n","(function(){\n  var _global = this;\n\n  /**\n   * JS Implementation of MurmurHash2\n   *\n   * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n   * @see http://github.com/garycourt/murmurhash-js\n   * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n   * @see http://sites.google.com/site/murmurhash/\n   *\n   * @param {string} str ASCII only\n   * @param {number} seed Positive integer only\n   * @return {number} 32-bit positive integer hash\n   */\n  function MurmurHashV2(str, seed) {\n    var\n      l = str.length,\n      h = seed ^ l,\n      i = 0,\n      k;\n\n    while (l >= 4) {\n      k =\n        ((str.charCodeAt(i) & 0xff)) |\n        ((str.charCodeAt(++i) & 0xff) << 8) |\n        ((str.charCodeAt(++i) & 0xff) << 16) |\n        ((str.charCodeAt(++i) & 0xff) << 24);\n\n      k = (((k & 0xffff) * 0x5bd1e995) + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n      k ^= k >>> 24;\n      k = (((k & 0xffff) * 0x5bd1e995) + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n\n    h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16)) ^ k;\n\n      l -= 4;\n      ++i;\n    }\n\n    switch (l) {\n    case 3: h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n    case 2: h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n    case 1: h ^= (str.charCodeAt(i) & 0xff);\n            h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n    }\n\n    h ^= h >>> 13;\n    h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n    h ^= h >>> 15;\n\n    return h >>> 0;\n  };\n\n  /**\n   * JS Implementation of MurmurHash3 (r136) (as of May 20, 2011)\n   *\n   * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n   * @see http://github.com/garycourt/murmurhash-js\n   * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n   * @see http://sites.google.com/site/murmurhash/\n   *\n   * @param {string} key ASCII only\n   * @param {number} seed Positive integer only\n   * @return {number} 32-bit positive integer hash\n   */\n  function MurmurHashV3(key, seed) {\n    var remainder, bytes, h1, h1b, c1, c1b, c2, c2b, k1, i;\n\n    remainder = key.length & 3; // key.length % 4\n    bytes = key.length - remainder;\n    h1 = seed;\n    c1 = 0xcc9e2d51;\n    c2 = 0x1b873593;\n    i = 0;\n\n    while (i < bytes) {\n        k1 =\n          ((key.charCodeAt(i) & 0xff)) |\n          ((key.charCodeAt(++i) & 0xff) << 8) |\n          ((key.charCodeAt(++i) & 0xff) << 16) |\n          ((key.charCodeAt(++i) & 0xff) << 24);\n      ++i;\n\n      k1 = ((((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16))) & 0xffffffff;\n      k1 = (k1 << 15) | (k1 >>> 17);\n      k1 = ((((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16))) & 0xffffffff;\n\n      h1 ^= k1;\n          h1 = (h1 << 13) | (h1 >>> 19);\n      h1b = ((((h1 & 0xffff) * 5) + ((((h1 >>> 16) * 5) & 0xffff) << 16))) & 0xffffffff;\n      h1 = (((h1b & 0xffff) + 0x6b64) + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16));\n    }\n\n    k1 = 0;\n\n    switch (remainder) {\n      case 3: k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\n      case 2: k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\n      case 1: k1 ^= (key.charCodeAt(i) & 0xff);\n\n      k1 = (((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n      k1 = (k1 << 15) | (k1 >>> 17);\n      k1 = (((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n      h1 ^= k1;\n    }\n\n    h1 ^= key.length;\n\n    h1 ^= h1 >>> 16;\n    h1 = (((h1 & 0xffff) * 0x85ebca6b) + ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;\n    h1 ^= h1 >>> 13;\n    h1 = ((((h1 & 0xffff) * 0xc2b2ae35) + ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16))) & 0xffffffff;\n    h1 ^= h1 >>> 16;\n\n    return h1 >>> 0;\n  }\n\n  var murmur = MurmurHashV3;\n  murmur.v2 = MurmurHashV2;\n  murmur.v3 = MurmurHashV3;\n\n  if (typeof(module) != 'undefined') {\n    module.exports = murmur;\n  } else {\n    var _previousRoot = _global.murmur;\n    murmur.noConflict = function() {\n      _global.murmur = _previousRoot;\n      return murmur;\n    }\n    _global.murmur = murmur;\n  }\n}());\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Took reference from: \"loglevel\" - https://github.com/pimterry/loglevel\n *\n * Name: loglevel\n * Published Name: loglevel\n * URL: https://github.com/pimterry/loglevel\n * Description: Minimal lightweight logging for JavaScript, adding reliable log level methods to wrap any available console.log methods\n * Author: Tim Perry (https://github.com/pimterry)\n * LICENSE: MIT License\n * Local Modifications: This library is not used as a dependency. Source code was referenced and is modified as per requirements.\n *\n */\nconst { LogLevelEnum, LogNumberLevel } = require('../../enums/LogLevelEnum');\nconst LogMessageEnum = require('../../enums/LogMessageEnum');\nconst LogMessageUtil = require('../../utils/LogMessageUtil');\n\nconst ConsoleLogManager = require('./ConsoleLogManager');\n\nlet globalLogLevel = LogLevelEnum.NOTSET;\nlet isColoredLogEnabled = false;\nlet globalLogHandler = new ConsoleLogManager();\n\nclass LogManager {\n  constructor(name) {\n    this.name = name;\n    this.isColoredLogEnabled = isColoredLogEnabled;\n  }\n\n  _customLog(level, message) {\n    if (level < globalLogLevel) {\n      return;\n    }\n\n    globalLogHandler.log(level, message);\n  }\n\n  log(level, message, disableLogs = false) {\n    if (disableLogs) {\n      return;\n    }\n    try {\n      this._customLog(level, message);\n    } catch (err) {\n      console.error('VWO: Could not log.', err);\n    }\n  }\n\n  info(message) {\n    this._customLog(LogLevelEnum.INFO, message);\n  }\n  debug(message) {\n    this._customLog(LogLevelEnum.DEBUG, message);\n  }\n  warn(message) {\n    this._customLog(LogLevelEnum.WARN, message);\n  }\n  error(message) {\n    this._customLog(LogLevelEnum.ERROR, message);\n  }\n}\n\nfunction getLogger(name) {\n  return new LogManager(name);\n}\n\nfunction setLogHandler(logger) {\n  globalLogHandler = logger;\n}\n\nfunction setLogLevel(level) {\n  if (level === undefined) {\n    globalLogLevel = LogLevelEnum.ERROR;\n  } else {\n    globalLogLevel = level;\n  }\n}\n\nfunction getLogLevel() {\n  return globalLogLevel;\n}\n\nfunction setLogColorMode(value) {\n  isColoredLogEnabled = value;\n  globalLogHandler.isColoredLogEnabled = isColoredLogEnabled;\n}\n\nfunction getLogColorMode() {\n  return isColoredLogEnabled;\n}\n\nmodule.exports = {\n  LogLevelEnum,\n  LogNumberLevel,\n  LogMessageUtil,\n  LogMessageEnum,\n  getLogger,\n  setLogHandler,\n  setLogLevel,\n  getLogLevel,\n  LogManager,\n  setLogColorMode,\n  getLogColorMode,\n  globalLogHandler\n};\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst AnsiColorEnum = {\n  BOLD: '\\x1b[1m',\n  CYAN: '\\x1b[36m',\n  GREEN: '\\x1b[32m',\n  LIGHTBLUE: '\\x1b[94m',\n  RED: '\\x1b[31m',\n  RESET: '\\x1b[0m',\n  WHITE: '\\x1b[30m',\n  YELLOW: '\\x1b[33m'\n};\n\nmodule.exports = AnsiColorEnum;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule.exports = {\n  DEBUG_MESSAGES: {\n    CUSTOM_LOGGER_USED: '({file}): Custom logger used',\n    GETTING_STORED_VARIATION:\n      '({file}): Got stored variation for User ID:{userId} of Campaign:{campaignKey} as Variation:{variationName}, found in UserStorageService',\n    GOT_FROM_CACHE: '({file}): Got data from cache for the finalKey:{finalKey}',\n    GOT_VARIATION_FOR_USER:\n      '({file}): User ID:{userId} for Campaign:{campaignKey} got variationName:{variationName} inside method:{method}',\n    IMPRESSION_FOR_PUSH: '({file}): impression built for pushing - {properties}',\n    IMPRESSION_FOR_TRACK_GOAL: '({file}): impression built for track-goal - {properties}',\n    IMPRESSION_FOR_TRACK_USER: '({file}): impression built for track-user - {properties}',\n    LOG_LEVEL_SET: '({file}): Log level set to {level}',\n    NO_STORED_VARIATION:\n      '({file}): No stored variation for User ID:{userId} for Campaign:{campaignKey} found in UserStorageService',\n    NO_USER_STORAGE_SERVICE_GET: '({file}): No UserStorageService to get stored data',\n    NO_USER_STORAGE_SERVICE_SET: '({file}): No UserStorageService to set data',\n    // REMOVE_FROM_CACHE: '({file}): Removed data from cache for the finalKey:{finalKey}',\n    RESET_CACHE: '({file}): Cache Reset on VWO instantiation',\n    SDK_INITIALIZED: '({file}): SDK properly initialzed',\n    SEGMENTATION_SKIPPED:\n      '({file}): For userId:{userId} of Campaign:{campaignKey}, segment was missing, hence skipping segmentation{variation}',\n    SEGMENTATION_STATUS:\n      '({file}): For userId:{userId} of Campaign:{campaignKey} with variables:{customVariables} {status} {segmentationType} {variation}',\n    SET_DEVELOPMENT_MODE: '({file}): DEVELOPMENT mode is ON',\n    SET_IN_CACHE: '({file}): Set data in cache for the finalKey:{finalKey}',\n    SETTINGS_FILE_PROCESSED: '({file}): Settings file processed',\n    USER_HASH_BUCKET_VALUE: '({file}): User ID:{userId} having hash:{hashValue} got bucketValue:{bucketValue}',\n    USER_NOT_PART_OF_Campaign:\n      '({file}): userId:{userId} for Campaign:{campaignKey} did not become part of campaign, method:{method}',\n    UUID_FOR_USER: '({file}): Uuid generated for User ID:{userId} and accountId:{accountId} is {desiredUuid}',\n    VALID_CONFIGURATION: '({file}): SDK configuration and account settings are valid',\n    VARIATION_HASH_BUCKET_VALUE:\n      '({file}): User ID:{userId} for Campaign:{campaignKey} having percent traffic:{percentTraffic} got hash-value:{hashValue} and bucket value:{bucketValue}',\n    WHITELISTING_SKIPPED: '({file}): For userId:{userId} of Campaign:{campaignKey}, whitelisting was skipped',\n    STARTED_POLLING: '({file}): Polling of settings-file is registered with a periodic interval of {pollingInterval}ms',\n    BATCH_EVENT_LIMIT_EXCEEDED:\n      '({file}): Impression event - {endPoint} failed due to exceeding payload size. Parameter eventsPerRequest in batchEvents config in launch API has value:{eventsPerRequest} for accountId:{accountId}. Please read the official documentation for knowing the size limits',\n    BULK_NOT_PROCESSED:\n      \"({file}): Batch events couldn't be received by VWO. Calling Flush Callback with error and data\",\n    BEFORE_FLUSHING:\n      '({file}): Flushing events queue {manually} having {length} events for account:{accountId}. {timer}',\n    FLUSH_EVENTS: '{{file}}: Manually flushing events for account:{accountId} having {queueLength} events',\n    CAMPAIGN_NOT_ACTIVATED:\n      '({file}): Campaign:{campaignKey} for User ID:{userId} is not yet activated for API:{api}. Use activate API to activate A/B test or isFeatureEnabled API to activate Feature Test.',\n    GOT_ELIGIBLE_CAMPAIGNS:\n      '({file}): Campaigns: {eligibleCampaignKeys} are eligible, {inEligibleText} are ineligible from the Group:{groupName} for the User Id:{userId}'\n  },\n  ERROR_MESSAGES: {\n    API_HAS_CORRUPTED_SETTINGS_FILE:\n      '({file}): \"{api}\" API has corrupted settings-file. Please check or reach out to VWO support',\n    ACTIVATE_API_MISSING_PARAMS:\n      '({file}): \"activate\" API got bad parameters. It expects campaignKey(String) as first, userId(String) as second and options(optional Object) as third argument',\n    CAMPAIGN_NOT_RUNNING:\n      '({file}): API used:{api} - Campaign:{campaignKey} is not RUNNING. Please verify from VWO App',\n    GET_FEATURE_VARIABLE_MISSING_PARAMS: `({file}): \"getFeatureVariableValue\" API got bad parameters. It expects campaignKey(String) as first, variableKey(String) as second, userId(String) as third, and options(optional Object) as fourth argument`,\n    GET_VARIATION_API_MISSING_PARAMS:\n      '({file}): \"getVariation\" API got bad parameters. It expects campaignKey(String) as first, userId(String) as second and options(optional Object) as third argument',\n    IMPRESSION_FAILED: '({file}): Impression event could not be sent to VWO - {endPoint}. Reason: {err}',\n    INVALID_API:\n      '({file}): {api} API is not valid for Campaign:{campaignKey} of type:{campaignType} for User ID:{userId}',\n    INVALID_SETTINGS_FILE: '({file}): Settings-file fetched is not proper',\n    IS_FEATURE_ENABLED_API_MISSING_PARAMS:\n      '({file}): \"isFeatureEnabled\" API got bad parameters. It expects Campaign(String) as first, userId(String) as second and options(optional Object) as third argument',\n    GET_USER_STORAGE_SERVICE_FAILED: '({file}): Getting data from UserStorageService failed for User ID:{userId}',\n    SDK_CONFIG_CORRUPTED: '({file}): config passed to launch API is not a valid JSON object',\n    PUSH_INVALID_PARAMS:\n      '({file}): \"{method}\" API got bad parameters. It expects tagKey(String) as first, tagValue(String) as second and userId(String) as third argument',\n    REGEX_CREATION_FAILED: '({file}): Regex cound not be processed',\n    SET_USER_STORAGE_SERVICE_FAILED: '({file}): Saving data into UserStorageService failed for User ID:{userId}',\n    SEGMENTATION_ERROR:\n      '({file}): Error while segmenting the user:{userId} of Campaign:{campaignKey}{variation} with customVariables:{customVariables}. Error message: {err}',\n    SETTINGS_FILE_CORRUPTED: '({file}): Settings file is corrupted. Please contact VWO Support for help',\n    TAG_KEY_LENGTH_EXCEEDED: '({file}): Length of tagKey:{tagKey} for userID:{userId} can not be greater than 255',\n    TAG_VALUE_LENGTH_EXCEEDED:\n      '({file}): Length of value:{tagValue} of tagKey:{tagKey} for userID:{userId} can not be greater than 255',\n    TRACK_API_GOAL_NOT_FOUND:\n      '({file}): Goal:{goalIdentifier} not found for Campaign:{campaignKey} and userId:{userId}',\n    TRACK_API_MISSING_PARAMS:\n      '({file}): \"track\" API got bad parameters. It expects campaignKey(String or Array of strings or null or undefined) as first, userId(String) as second, goalIdentifier(String/Number) as third and options(optional Object) as fourth argument',\n    TRACK_API_REVENUE_NOT_PASSED_FOR_REVENUE_GOAL:\n      '({file}): Revenue value should be passed for revenue goal:{goalIdentifier} for Campaign:{campaignKey} and userId:{userId}',\n    UNABLE_TO_CAST_VALUE: `({file}): Unable to cast value:{variableValue} to type:{variableType}, returning null`,\n    VARIABLE_NOT_FOUND: `({file}): Variable:{variableKey} for User ID:{userId} is not found in settings-file. Returning null`,\n    NO_CAMPAIGN_FOUND: `({file}): No campaign found for goalIdentifier:{goalIdentifier}. Please verify from VWO app.`,\n    POLLING_FAILED: '({file}): Failed fetching of Settings-file via polling for the accountId:{accountId}',\n    POLLING_INTERVAL_INVALID: '({file}): pollingParameter provided is not of type number',\n    SDK_KEY_NOT_PROVIVED: '({file}): sdkKey is required along with pollingInterval to poll the settings-file',\n    SDK_KEY_NOT_STRING: '({file}): sdkKey provided is not of type string',\n    INVALID_USER_ID: '({file}): Invalid userId:{userId} passed to {method} of this file',\n    EVENT_BATCHING_NOT_OBJECT: '({file}): Batch events settings are not of type object',\n    NO_BATCH_QUEUE:\n      '{{file}}: No batch queue present for account:{accountId} when calling flushEvents API. Check batchEvents config in launch API'\n  },\n  INFO_MESSAGES: {\n    FEATURE_ENABLED_FOR_USER: `({file}): Campaign:{campaignKey} for user ID:{userId} is enabled`,\n    FEATURE_NOT_ENABLED_FOR_USER: `({file}): Campaign:{campaignKey} for user ID:{userId} is not enabled`,\n    IMPRESSION_SUCCESS:\n      '({file}): Impression event - {endPoint} was successfully received by VWO having main keys: accountId:{accountId}, campaignId:{campaignId} and variationId:{variationId}',\n    INVALID_VARIATION_KEY: '({file}): Variation was not assigned to User ID:{userId} for Campaign:{campaignKey}',\n    GETTING_DATA_USER_STORAGE_SERVICE: '({file}): Getting data from UserStorageService for User ID:{userId} successful',\n    SETTING_DATA_USER_STORAGE_SERVICE: '({file}): Setting data into UserStorageService for User ID:{userId} successful',\n    SEGMENTATION_STATUS:\n      '({file}): UserId:{userId} of Campaign:{campaignKey} with variables:{customVariables} {status} {segmentationType} {variation}',\n    USER_GOT_NO_VARIATION: '({file}): User ID:{userId} for Campaign:{campaignKey} did not allot any variation',\n    USER_RECEIVED_VARIABLE_VALUE: `({file}): Value for variable:{variableKey} of feature flag:{campaignKey} is:{variableValue} for user:{userId}`,\n    VARIABLE_NOT_USED_RETURN_DEFAULT_VARIABLE_VALUE: `({file}): Variable:{variableKey} is not used in variation:{variationName}. Returning default value`,\n    VARIATION_ALLOCATED: '({file}): User ID:{userId} of Campaign:{campaignKey} got variation:{variationName}',\n    NO_VARIATION_ALLOCATED: '({file}): User ID:{userId} of Campaign:{campaignKey} did not get any variation',\n    VARIATION_RANGE_ALLOCATION:\n      '({file}): Campaign:{campaignKey} having variation:{variationName} with weight:{variationWeight} got range as: ( {start} - {end} ))',\n    GOAL_ALREADY_TRACKED:\n      '({file}): Goal:{goalIdentifier} of Campaign:{campaignKey} for User ID:{userId} has already been tracked earlier. Skipping now',\n    USER_ALREADY_TRACKED:\n      '({file}): User ID:{userId} for Campaign:{campaignKey} has already been tracked earlier for \"{api}\" API. Skipping now',\n    POLLING_SUCCESS: '({file}): Settings-file fetched successfully via polling for the accountId:{accountId}',\n    SETTINGS_FILE_UPDATED:\n      '({file}): vwo-sdk instance is updated with the latest settings-file for the accountId:{accountId}',\n    USER_ELIGIBILITY_FOR_CAMPAIGN: '({file}): Is User ID:{userId} part of campaign? {isUserPart}',\n    GOT_VARIATION_FOR_USER:\n      '({file}): userId:{userId} for campaign:{campaignTestKey} got variationName:{variationName}',\n    BULK_IMPRESSION_SUCCESS:\n      '({file}): Impression event - {endPoint} was successfully received by VWO having accountId:{a}',\n    AFTER_FLUSHING: '({file}): Events queue having {length} events has been flushed {manually}',\n    SETTINGS_NOT_UPDATED: '{{file}}: Settings-file fetched are same as earlier fetched settings',\n    GOT_STORED_VARIATION:\n      '({file}): Got stored variation for User ID:{userId} of Campaign:{campaignKey} as Variation:{variationName}, found in UserStorageService',\n    CAMPAIGN_NOT_ACTIVATED: '({file}): Activate the campaign:{campaignKey} for User ID:{userId} to {reason}.',\n    GOT_WINNER_CAMPAIGN:\n      '({file}): Campaign:{campaignKey} is selected from the mutually exclusive group:{groupName} for the User ID:{userId}.',\n    GOT_ELIGIBLE_CAMPAIGNS:\n      '({file}): Got {noOfEligibleCampaigns} eligible winners out of {noOfGroupCampaigns} campaigns from the Group:{groupName} and for User ID:{userId}',\n    CALLED_CAMPAIGN_NOT_WINNER:\n      '({file}): Campaign:{campaignKey} does not qualify from the mutually exclusive group:{groupName} for User ID:{userId}',\n    OTHER_CAMPAIGN_SATISFIES_WHITELISTING_STORAGE:\n      '({file}): Campaign:{campaignKey} of Group:{groupName} satisfies {type} for User ID:{userId}'\n  },\n  WARNING_MESSAGES: {}\n};\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DataTypeUtil = require('./DataTypeUtil');\n\nconst nargs = /\\{([0-9a-zA-Z_]+)\\}/g;\n\nlet LogMessageUtil = {\n  /**\n   * Took reference from: string-template\n   *\n   * Name: string-template\n   * Published Name: string-template\n   * URL: https://github.com/Matt-Esch/string-template\n   * Description: A lightweight string replace engine for text-based templates\n   * Author: Matt-Esch (https://github.com/Matt-Esch)\n   * License: MIT License\n   * Local Modifications: This library is not used as a dependency.\n   *       Source code was referenced and is modified as per requirements.\n   */\n  build: (template, data) => {\n    try {\n      return template.replace(nargs, (match, key, index) => {\n        let result;\n        let isKey;\n\n        if (template[index - 1] === '{' && template[index + match.length] === '}') {\n          return key;\n        } else {\n          isKey = data.hasOwnProperty(key);\n\n          if (isKey) {\n            let value = data[key];\n\n            if (DataTypeUtil.isFunction(value)) {\n              value = data[key]();\n            }\n            result = value;\n          } else {\n            result = null;\n          }\n          if (result === null || result === undefined) {\n            return '';\n          }\n\n          return result;\n        }\n      });\n    } catch (err) {\n      return template;\n    }\n  }\n};\n\nmodule.exports = LogMessageUtil;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst { getCurrentTime } = require('../../utils/FunctionUtil');\nconst { LogLevelEnum, LogLevelInfoEnum, LogLevelColorInfoEnum } = require('../../enums/LogLevelEnum');\n\nclass ConsoleLogManager {\n  constructor() {\n    this.logLevel = LogLevelEnum.NOTSET;\n    this.prefix = `VWO-SDK`;\n    this.isColoredLogEnabled = false;\n  }\n\n  log(level, message) {\n    if (!this.shouldLog(level)) {\n      return;\n    }\n\n    let logMessage;\n    if (this.isColoredLogEnabled) {\n      logMessage = `${this.prefix} - ${LogLevelColorInfoEnum[level]} ${getCurrentTime()} ${message}`;\n    } else {\n      logMessage = `${this.prefix} - ${LogLevelInfoEnum[level]} ${getCurrentTime()} ${message}`;\n    }\n\n    this.consoleLog(level, [logMessage]);\n  }\n\n  shouldLog(targetLogLevel) {\n    return targetLogLevel >= this.logLevel;\n  }\n\n  setLogLevel(level) {\n    if (level === undefined) {\n      this.logLevel = LogLevelEnum.ERROR;\n    } else {\n      this.logLevel = level;\n    }\n  }\n\n  consoleLog(level, logArguments) {\n    switch (level) {\n      case LogLevelEnum.INFO:\n        console.info.apply(console, logArguments);\n        break;\n      case LogLevelEnum.WARN:\n        console.warn.apply(console, logArguments);\n        break;\n      case LogLevelEnum.ERROR:\n        console.error.apply(console, logArguments);\n        break;\n      default:\n        console.log.apply(console, logArguments);\n        break;\n    }\n  }\n}\n\nmodule.exports = ConsoleLogManager;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule.exports = {\n  PASSED: 'passed',\n  FAILED: 'failed'\n};\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst SegmentEnum = require('../enums/segment');\nconst { getKeyValue } = require('../utils/ObjectUtil');\nconst { operandCustomVariablesParser, operandUserParser } = require('../utils/SegmentUtil');\nconst logging = require('../services/logging');\nconst DataTypeUtil = require('../utils/DataTypeUtil');\nconst FileNameEnum = require('../enums/FileNameEnum');\n\nconst { AND, OR, NOT } = SegmentEnum.SegmentOperatorTypes;\nconst { CUSTOM_VARIABLE, USER } = SegmentEnum.SegmentOperandTypes;\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\nconst file = FileNameEnum.SegmentEvaluator;\n\nconst logger = logging.getLogger();\n\nmodule.exports = SegmentEvaluator;\n/**\n * This method: A parser which recursively evaluates the expression tree represented by dsl\n *\n * @param {Object} dsl                     The segments defined in the campaing\n * @param {Object} customVariables         Key/value pair of custom_attributs properties\n *\n * @return {Boolean}                       true if user is to be made part of campaign, else false\n */\nfunction evaluator(dsl, customVariables) {\n  let { key, value } = getKeyValue(dsl);\n  let operator = key;\n  let subDsl = value;\n  if (operator === NOT) {\n    return !evaluator(subDsl, customVariables);\n  } else if (operator === AND) {\n    let list = [];\n    for (let i = 0; i < subDsl.length; i++) {\n      list.push(evaluator(subDsl[i], customVariables));\n    }\n\n    return list.every(val => val);\n  } else if (operator === OR) {\n    let list = [];\n    for (let i = 0; i < subDsl.length; i++) {\n      list.push(evaluator(subDsl[i], customVariables));\n    }\n\n    return list.some(val => val);\n  } else if (operator === CUSTOM_VARIABLE) {\n    return operandCustomVariablesParser(subDsl, customVariables);\n  } else if (operator === USER) {\n    return operandUserParser(subDsl, customVariables);\n  }\n}\n\nfunction SegmentEvaluator(dsl, customVariables = {}, campaignKey, userId, variation = '', disableLogs = false) {\n  try {\n    if (DataTypeUtil.isObject(dsl) && !Object.keys(dsl).length) {\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.SEGMENTATION_SKIPPED, {\n          campaignKey,\n          userId,\n          file\n        }),\n        disableLogs\n      );\n      return true;\n    }\n    if (DataTypeUtil.isObject(dsl) && Object.keys(dsl).length) {\n      return evaluator(dsl, customVariables);\n    }\n    return true;\n  } catch (err) {\n    logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.SEGMENTATION_ERROR, {\n        campaignKey,\n        userId,\n        customVariables: JSON.stringify(customVariables),\n        file,\n        err,\n        variation\n      }),\n      disableLogs\n    );\n    return false;\n  }\n}\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule.exports = {\n  CUSTOM_VARIABLE: 'custom_variable',\n  USER: 'user'\n};\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule.exports = {\n  AND: 'and',\n  NOT: 'not',\n  OR: 'or'\n};\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule.exports = {\n  LOWER: /^lower/,\n  LOWER_MATCH: /^lower\\((.*)\\)/,\n  WILDCARD: /^wildcard/,\n  WILDCARD_MATCH: /^wildcard\\((.*)\\)/,\n  REGEX: /^regex/,\n  REGEX_MATCH: /^regex\\((.*)\\)/,\n  STARTING_STAR: /^\\*/,\n  ENDING_STAR: /\\*$/\n};\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule.exports = {\n  LOWER_VALUE: 1,\n  STARTING_ENDING_STAR_VALUE: 2,\n  STARTING_STAR_VALUE: 3,\n  ENDING_STAR_VALUE: 4,\n  REGEX_VALUE: 5,\n  EQUAL_VALUE: 6\n};\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DataTypeUtil = require('../utils/DataTypeUtil');\nconst { matchWithRegex } = require('../utils/FunctionUtil');\nconst { getKeyValue } = require('../utils/ObjectUtil');\nconst SegmentEnum = require('../enums/segment');\n\nconst {\n  LOWER_MATCH,\n  WILDCARD_MATCH,\n  REGEX_MATCH,\n  STARTING_STAR,\n  ENDING_STAR\n} = SegmentEnum.SegmentOperandValueTypeRegexes;\n\nconst {\n  LOWER_VALUE,\n  STARTING_ENDING_STAR_VALUE,\n  STARTING_STAR_VALUE,\n  ENDING_STAR_VALUE,\n  REGEX_VALUE,\n  EQUAL_VALUE\n} = SegmentEnum.SegmentOperandValues;\n\nfunction extractOperandValue(operand, regex) {\n  return matchWithRegex(operand, regex) && matchWithRegex(operand, regex)[1];\n}\n\nfunction processValues(operandValue, tagValue) {\n  // this is atomic, either both will be processed or none\n  let processedOperandValue = parseFloat(operandValue, 10);\n  let processedTagValue = parseFloat(tagValue, 10);\n  if (!processedOperandValue || !processedTagValue) {\n    return {\n      operandValue: operandValue,\n      tagValue: tagValue\n    };\n  }\n  // now we have surity that both are numbers\n  // now we can convert them independently to int type if they\n  // are int rather than floats\n  if (processedOperandValue === Math.floor(processedOperandValue)) {\n    processedOperandValue = parseInt(processedOperandValue, 10);\n  }\n  if (processedTagValue === Math.floor(processedTagValue)) {\n    processedTagValue = parseInt(processedTagValue, 10);\n  }\n  // convert it back to string and return\n  return {\n    operandValue: processedOperandValue.toString(),\n    tagValue: processedTagValue.toString()\n  };\n}\n\nfunction preProcessTagValue(tagValue) {\n  if (tagValue === undefined) {\n    tagValue = '';\n  }\n  if (DataTypeUtil.isBoolean(tagValue)) {\n    if (tagValue) {\n      tagValue = true;\n    } else {\n      tagValue = false;\n    }\n  }\n  if (tagValue !== null) {\n    tagValue = tagValue.toString();\n  }\n  return tagValue;\n}\n\nfunction preProcessOperandValue(operand) {\n  let operandType;\n  let operandValue;\n  let startingStar;\n  let endingStar;\n  // Pre process operand value\n  if (matchWithRegex(operand, LOWER_MATCH)) {\n    operandType = LOWER_VALUE;\n    operandValue = extractOperandValue(operand, LOWER_MATCH);\n  } else if (matchWithRegex(operand, WILDCARD_MATCH)) {\n    operandValue = extractOperandValue(operand, WILDCARD_MATCH);\n    startingStar = matchWithRegex(operandValue, STARTING_STAR);\n    endingStar = matchWithRegex(operandValue, ENDING_STAR);\n    // In case of wildcard, the operand type is further divided into contains, startswith and endswith\n    if (startingStar && endingStar) {\n      operandType = STARTING_ENDING_STAR_VALUE;\n    } else if (startingStar) {\n      operandType = STARTING_STAR_VALUE;\n    } else if (endingStar) {\n      operandType = ENDING_STAR_VALUE;\n    }\n    operandValue = operandValue.replace(STARTING_STAR, '').replace(ENDING_STAR, '');\n  } else if (matchWithRegex(operand, REGEX_MATCH)) {\n    operandType = REGEX_VALUE;\n    operandValue = extractOperandValue(operand, REGEX_MATCH);\n  } else {\n    operandType = EQUAL_VALUE;\n    operandValue = operand;\n  }\n  return {\n    operandType,\n    operandValue\n  };\n}\n\nfunction operandCustomVariablesParser(operand, customVariables) {\n  // Extract custom_variable_key and custom_variable_value from operand\n  let { key, value } = getKeyValue(operand);\n  let operandKey = key;\n  operand = value;\n  if (!customVariables.hasOwnProperty(key)) {\n    // For handling \".*\" regex case when key is not present in customVariables and matches regex is used.\n    return false;\n  }\n  let tagValue = customVariables[operandKey];\n  // Pre process tag value\n  tagValue = preProcessTagValue(tagValue);\n  let { operandType, operandValue } = preProcessOperandValue(operand);\n  // Process both operand and tag values\n  let processedValues = processValues(operandValue, tagValue);\n  tagValue = processedValues.tagValue;\n  return extractResult(operandType, processedValues.operandValue, tagValue);\n}\n\nfunction operandUserParser(operand, customVariables) {\n  const users = operand.split(',');\n  for (let i = 0; i < users.length; i++) {\n    if (users[i].trim() === customVariables._vwoUserId) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction extractResult(operandType, operandValue, tagValue) {\n  let result;\n\n  switch (operandType) {\n    case LOWER_VALUE:\n      if (tagValue !== null) {\n        result = operandValue.toLowerCase() === tagValue.toLowerCase();\n      }\n      break;\n    case STARTING_ENDING_STAR_VALUE:\n      if (tagValue !== null) {\n        result = tagValue.indexOf(operandValue) > -1;\n      }\n      break;\n    case STARTING_STAR_VALUE:\n      if (tagValue !== null) {\n        result = tagValue.endsWith(operandValue);\n      }\n      break;\n    case ENDING_STAR_VALUE:\n      if (tagValue !== null) {\n        result = tagValue.startsWith(operandValue);\n      }\n      break;\n    case REGEX_VALUE:\n      try {\n        let pattern = new RegExp(operandValue, 'g');\n        result = !!pattern.test(tagValue);\n      } catch (err) {\n        result = false;\n      }\n      break;\n    default:\n      result = tagValue === operandValue;\n  }\n\n  return result;\n}\n\nmodule.exports = {\n  extractOperandValue,\n  processValues,\n  preProcessTagValue,\n  preProcessOperandValue,\n  operandCustomVariablesParser,\n  operandUserParser\n};\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst HooksEnum = {\n  DECISION_TYPES: {\n    CAMPAIGN_DECISION: 'CAMPAIGN_DECISION'\n  }\n};\n\nmodule.exports = HooksEnum;\n","var v35 = require('./lib/v35.js');\nvar sha1 = require('./lib/sha1');\nmodule.exports = v35('v5', 0x50, sha1);\n","var bytesToUuid = require('./bytesToUuid');\n\nfunction uuidToBytes(uuid) {\n  // Note: We assume we're being passed a valid uuid string\n  var bytes = [];\n  uuid.replace(/[a-fA-F0-9]{2}/g, function(hex) {\n    bytes.push(parseInt(hex, 16));\n  });\n\n  return bytes;\n}\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n  var bytes = new Array(str.length);\n  for (var i = 0; i < str.length; i++) {\n    bytes[i] = str.charCodeAt(i);\n  }\n  return bytes;\n}\n\nmodule.exports = function(name, version, hashfunc) {\n  var generateUUID = function(value, namespace, buf, offset) {\n    var off = buf && offset || 0;\n\n    if (typeof(value) == 'string') value = stringToBytes(value);\n    if (typeof(namespace) == 'string') namespace = uuidToBytes(namespace);\n\n    if (!Array.isArray(value)) throw TypeError('value must be an array of bytes');\n    if (!Array.isArray(namespace) || namespace.length !== 16) throw TypeError('namespace must be uuid string or an Array of 16 byte values');\n\n    // Per 4.3\n    var bytes = hashfunc(namespace.concat(value));\n    bytes[6] = (bytes[6] & 0x0f) | version;\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n\n    if (buf) {\n      for (var idx = 0; idx < 16; ++idx) {\n        buf[off+idx] = bytes[idx];\n      }\n    }\n\n    return buf || bytesToUuid(bytes);\n  };\n\n  // Function#name is not settable on some platforms (#270)\n  try {\n    generateUUID.name = name;\n  } catch (err) {\n  }\n\n  // Pre-defined namespaces, per Appendix C\n  generateUUID.DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\n  generateUUID.URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\n\n  return generateUUID;\n};\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\n'use strict';\n\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0: return (x & y) ^ (~x & z);\n    case 1: return x ^ y ^ z;\n    case 2: return (x & y) ^ (x & z) ^ (y & z);\n    case 3: return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return (x << n) | (x>>> (32 - n));\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof(bytes) == 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n    bytes = new Array(msg.length);\n    for (var i = 0; i < msg.length; i++) bytes[i] = msg.charCodeAt(i);\n  }\n\n  bytes.push(0x80);\n\n  var l = bytes.length/4 + 2;\n  var N = Math.ceil(l/16);\n  var M = new Array(N);\n\n  for (var i=0; i<N; i++) {\n    M[i] = new Array(16);\n    for (var j=0; j<16; j++) {\n      M[i][j] =\n        bytes[i * 64 + j * 4] << 24 |\n        bytes[i * 64 + j * 4 + 1] << 16 |\n        bytes[i * 64 + j * 4 + 2] << 8 |\n        bytes[i * 64 + j * 4 + 3];\n    }\n  }\n\n  M[N - 1][14] = ((bytes.length - 1) * 8) /\n    Math.pow(2, 32); M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = ((bytes.length - 1) * 8) & 0xffffffff;\n\n  for (var i=0; i<N; i++) {\n    var W = new Array(80);\n\n    for (var t=0; t<16; t++) W[t] = M[i][t];\n    for (var t=16; t<80; t++) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var t=0; t<80; t++) {\n      var s = Math.floor(t/20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = (H[0] + a) >>> 0;\n    H[1] = (H[1] + b) >>> 0;\n    H[2] = (H[2] + c) >>> 0;\n    H[3] = (H[3] + d) >>> 0;\n    H[4] = (H[4] + e) >>> 0;\n  }\n\n  return [\n    H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff,\n    H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff,\n    H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff,\n    H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff,\n    H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff\n  ];\n}\n\nmodule.exports = sha1;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst Constants = require('../constants');\nconst ApiEnum = require('../enums/ApiEnum');\n\nconst DecisionUtil = require('../utils/DecisionUtil');\nconst CampaignUtil = require('../utils/CampaignUtil');\nconst ValidateUtil = require('../utils/ValidateUtil');\nconst DataTypeUtil = require('../utils/DataTypeUtil');\n\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\n\nconst file = FileNameEnum.GetVariation;\n\n/**\n * This API method: Gets the variation assigned for the user for the campaign\n *\n * 1. Validates the arguments being passed\n * 2. Checks if user is eligible to get bucketed into the campaign,\n * 3. Assigns the determinitic variation to the user(based on userId), if user becomes part of campaign\n *    If userStorageService is used, it will look into it for the variation and if found, no further processing is done\n *\n * @param {Object} vwoInstance       VWO instance which has logger, settingsFile etc.\n * @param {String} campaignKey       unique campaign key specified in VWO app\n * @param {String} userId            ID assigned to a user\n * @param {Object} options           Optional params\n *\n * @return {String|null}             If variation is assigned then variation-name otherwise null in case of user not becoming part\n */\nfunction getVariation(vwoInstance, campaignKey, userId, options = {}) {\n  const api = ApiEnum.GET_VARIATION_NAME;\n  let areParamsValid = false;\n  if (DataTypeUtil.isObject(options)) {\n    var { customVariables, variationTargetingVariables, userStorageData, metaData } = options;\n    // Check if arguments have valid data-type\n    if (\n      ValidateUtil.areValidParamsForAPIMethod({\n        method: ApiEnum.GET_VARIATION_NAME,\n        campaignKey,\n        userId,\n        customVariables,\n        variationTargetingVariables,\n        userStorageData,\n        metaData\n      })\n    ) {\n      areParamsValid = true;\n    }\n  }\n\n  if (areParamsValid === false) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.GET_VARIATION_API_MISSING_PARAMS, {\n        file\n      })\n    );\n    return null;\n  }\n\n  // Get the cached configuration\n  let config = vwoInstance.SettingsFileManager.getConfig();\n  let settingsFile = vwoInstance.SettingsFileManager.getSettingsFile(api);\n  config.apiName = api;\n\n  // If no settings are found, simply return no variation\n  if (!settingsFile) {\n    return null;\n  }\n\n  // Get the campaign settings based on campaignKey from the settings\n  let campaign = CampaignUtil.getCampaign(settingsFile, campaignKey);\n\n  // If matching campaign is not found with campaignKey or if found but is in not RUNNING state, simply return no variation\n  if (!campaign || campaign.status !== Constants.STATUS_RUNNING) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.CAMPAIGN_NOT_RUNNING, {\n        file,\n        campaignKey: campaignKey,\n        api\n      })\n    );\n\n    return null;\n  }\n\n  if (CampaignUtil.isFeatureRolloutCampaign(campaign)) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.INVALID_API, {\n        file,\n        campaignKey,\n        campaignType: campaign.type,\n        userId,\n        api\n      })\n    );\n\n    return null;\n  }\n\n  const { variationName } = DecisionUtil.getVariation(\n    config,\n    settingsFile,\n    campaign,\n    campaignKey,\n    userId,\n    customVariables,\n    variationTargetingVariables,\n    userStorageData,\n    metaData,\n    false,\n    undefined,\n    api\n  );\n  if (!variationName) {\n    return null;\n  }\n\n  return variationName;\n}\n\nmodule.exports = getVariation;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst Constants = require('../constants');\nconst GoalTypeEnum = require('../enums/GoalTypeEnum');\nconst ApiEnum = require('../enums/ApiEnum');\n\nconst DecisionUtil = require('../utils/DecisionUtil');\nconst CampaignUtil = require('../utils/CampaignUtil');\nconst { objectValues } = require('../utils/ObjectUtil');\nconst ImpressionUtil = require('../utils/ImpressionUtil');\nconst ValidateUtil = require('../utils/ValidateUtil');\nconst DataTypeUtil = require('../utils/DataTypeUtil');\n\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\n\nconst file = FileNameEnum.Track;\nconst GOAL_TYPE_TO_TRACK_DEFAULT = GoalTypeEnum.ALL;\nconst GOAL_IDENTIFIER_SEPERATOR = '_vwo_';\nconst api = ApiEnum.TRACK;\n\n/**\n * This API method: Marks the conversion of the campaign for a particular goal\n *\n * 1. validates the arguments being passed\n * 2. Checks if user is eligible to get bucketed into the campaign,\n * 3. Gets the assigned determinitic variation to the user(based on userId), if user becomes part of campaign\n * 4. Sends an impression call to VWO server to track goal data\n *\n * @param {Object} vwoInstance               VWO instance which has logger, settingsFile etc.\n * @param {Number} campaignKey               unique campaign test key\n * @param {String} userId                    ID assigned to a user\n * @param {String} goalIdentifier             unique campaign's goal identifier\n * @param {Object} options                   Optional params\n */\nfunction track(vwoInstance, campaignKey, userId, goalIdentifier, options = {}) {\n  let areParamsValid = false;\n  if (DataTypeUtil.isObject(options)) {\n    var {\n      revenueValue,\n      customVariables,\n      variationTargetingVariables,\n      userStorageData,\n      goalTypeToTrack,\n      shouldTrackReturningUser,\n      metaData\n    } = options;\n    // Check if arguments have valid data-type\n    if (\n      ValidateUtil.areValidParamsForAPIMethod({\n        method: ApiEnum.TRACK,\n        campaignKey,\n        userId,\n        goalIdentifier,\n        customVariables,\n        variationTargetingVariables,\n        userStorageData,\n        goalTypeToTrack,\n        shouldTrackReturningUser,\n        metaData\n      }) &&\n      (!goalTypeToTrack || (goalTypeToTrack && objectValues(GoalTypeEnum).includes(goalTypeToTrack)))\n    ) {\n      areParamsValid = true;\n    }\n  }\n\n  if (areParamsValid === false) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.TRACK_API_MISSING_PARAMS, {\n        file\n      })\n    );\n    return null;\n  }\n\n  // Get the cached configuration\n  let config = vwoInstance.SettingsFileManager.getConfig();\n  let settingsFile = vwoInstance.SettingsFileManager.getSettingsFile(api);\n  config.apiName = api;\n\n  // If no settings are found, simply do not track goal and return false\n  if (!settingsFile) {\n    return null;\n  }\n\n  let campaigns = [];\n  goalTypeToTrack = goalTypeToTrack || config.goalTypeToTrack || GOAL_TYPE_TO_TRACK_DEFAULT; // priority order - options > launchConfig > default\n  if (DataTypeUtil.isUndefined(shouldTrackReturningUser)) {\n    // if shouldTrackReturningUser is not given in options\n    if (DataTypeUtil.isBoolean(config.shouldTrackReturningUser)) {\n      // if shouldTrackReturningUser is given in config at launch\n      shouldTrackReturningUser = config.shouldTrackReturningUser;\n    } else {\n      shouldTrackReturningUser = false;\n    }\n  }\n  if (!DataTypeUtil.isString(campaignKey)) {\n    if (DataTypeUtil.isArray(campaignKey)) {\n      campaigns = CampaignUtil.getCampaignsForKeys(settingsFile, campaignKey);\n    } else {\n      campaigns = CampaignUtil.getCampaignsForGoal(settingsFile, goalIdentifier, goalTypeToTrack);\n    }\n  } else {\n    // Get the campaign settings based on campaignKey from the settings\n    let campaign = CampaignUtil.getCampaign(settingsFile, campaignKey);\n    campaigns.push(campaign || { key: campaignKey });\n  }\n  const result = {};\n  campaigns.forEach(\n    campaign =>\n      (result[campaign.key] = trackCampaignGoal(\n        vwoInstance,\n        campaign,\n        campaign.key,\n        userId,\n        settingsFile,\n        goalIdentifier,\n        revenueValue,\n        config,\n        customVariables,\n        variationTargetingVariables,\n        userStorageData,\n        goalTypeToTrack,\n        shouldTrackReturningUser,\n        metaData\n      ))\n  );\n  if (!Object.keys(result).length) {\n    return null;\n  }\n  return result;\n}\n\nfunction trackCampaignGoal(\n  vwoInstance,\n  campaign,\n  campaignKey,\n  userId,\n  settingsFile,\n  goalIdentifier,\n  revenueValue,\n  config,\n  customVariables,\n  variationTargetingVariables,\n  userStorageData,\n  goalTypeToTrack,\n  shouldTrackReturningUser,\n  metaData\n) {\n  // If matching campaign is not found with campaignKey or if found but is in not RUNNING state, simply return no variation\n  if (!campaign || campaign.status !== Constants.STATUS_RUNNING) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.CAMPAIGN_NOT_RUNNING, {\n        file,\n        campaignKey: campaignKey,\n        api\n      })\n    );\n\n    return false;\n  }\n\n  if (CampaignUtil.isFeatureRolloutCampaign(campaign)) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.INVALID_API, {\n        file,\n        campaignKey,\n        campaignType: campaign.type,\n        userId,\n        api\n      })\n    );\n\n    return false;\n  }\n\n  let campaignId = campaign.id;\n\n  // Get the campaign goal settings based on goalIdentifier\n  let goal = CampaignUtil.getCampaignGoal(settingsFile, campaign.key, goalIdentifier);\n\n  if (!goal) {\n    // If no goal is found, something is wrong with the goalIdentifier\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.TRACK_API_GOAL_NOT_FOUND, {\n        file,\n        userId,\n        goalIdentifier,\n        campaignKey: campaignKey\n      })\n    );\n    return false;\n  } else if (goalTypeToTrack !== GOAL_TYPE_TO_TRACK_DEFAULT && goal.type !== goalTypeToTrack) {\n    return false;\n  } else if (goal.type === GoalTypeEnum.REVENUE && !ValidateUtil.isValidValue(revenueValue)) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.TRACK_API_REVENUE_NOT_PASSED_FOR_REVENUE_GOAL, {\n        file,\n        userId,\n        goalIdentifier,\n        campaignKey\n      })\n    );\n    return false;\n  }\n\n  let { variationId, variationName, storedGoalIdentifier } = DecisionUtil.getVariation(\n    config,\n    settingsFile,\n    campaign,\n    campaignKey,\n    userId,\n    customVariables,\n    variationTargetingVariables,\n    userStorageData,\n    metaData,\n    false,\n    goalIdentifier,\n    api\n  );\n\n  // Is User is a part of Campaign and has been decided to be a part of particular variation\n  if (variationName) {\n    if (storedGoalIdentifier) {\n      const identifiers = storedGoalIdentifier.split(GOAL_IDENTIFIER_SEPERATOR);\n      if (!identifiers.includes(goalIdentifier)) {\n        storedGoalIdentifier += GOAL_IDENTIFIER_SEPERATOR + goalIdentifier;\n        DecisionUtil._saveUserData(config, campaign, variationName, userId, metaData, storedGoalIdentifier);\n      } else if (!shouldTrackReturningUser) {\n        vwoInstance.logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.GOAL_ALREADY_TRACKED, {\n            file,\n            userId,\n            goalIdentifier,\n            campaignKey\n          })\n        );\n        return false;\n      }\n    }\n    // If goal is found, send an impression to VWO server for report stats\n    if (config.batchEvents) {\n      let properties = ImpressionUtil.buildBatchEventForTrackingGoal(\n        settingsFile,\n        campaignId,\n        variationId,\n        userId,\n        goal,\n        revenueValue\n      );\n      vwoInstance.batchEventsQueue.enqueue(properties);\n    } else {\n      let properties = ImpressionUtil.buildEventForTrackingGoal(\n        settingsFile,\n        campaignId,\n        variationId,\n        userId,\n        goal,\n        revenueValue\n      );\n      vwoInstance.eventQueue.process(config, properties, vwoInstance);\n    }\n    DecisionUtil._saveUserData(config, campaign, variationName, userId, metaData, goalIdentifier);\n    return true;\n  }\n\n  return false;\n}\n\nmodule.exports = track;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst Constants = require('../constants');\nconst ApiEnum = require('../enums/ApiEnum');\n\nconst DecisionUtil = require('../utils/DecisionUtil');\nconst CampaignUtil = require('../utils/CampaignUtil');\nconst ImpressionUtil = require('../utils/ImpressionUtil');\nconst ValidateUtil = require('../utils/ValidateUtil');\nconst DataTypeUtil = require('../utils/DataTypeUtil');\n\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\n\nconst file = FileNameEnum.IsFeatureEnabled;\n\n/**\n * This API checks: Whether a feature is enabled or not for the given user\n *\n * 1. Validates the arguments being passed\n * 2. Checks if user is eligible for campaign and check if feature is enabled for the user.\n * 4. If feature enabled, sends a call to VWO server for tracking visitor\n *\n * @param {Object} vwoInstance       VWO instance which has logger, settingsFile etc.\n * @param {String} campaignKey       Unique key for a campaign\n * @param {String} userId            Unique identifier for the user\n * @param {Object} options           Optional params\n *\n * @return {Boolean}                 true if feature enabled, false otherwise\n */\nfunction isFeatureEnabled(vwoInstance, campaignKey, userId, options = {}) {\n  const api = ApiEnum.IS_FEATURE_ENABLED;\n  let areParamsValid = false;\n  if (DataTypeUtil.isObject(options)) {\n    var { customVariables, variationTargetingVariables, userStorageData, shouldTrackReturningUser, metaData } = options;\n    // Check if arguments have valid data-type\n    if (\n      ValidateUtil.areValidParamsForAPIMethod({\n        method: ApiEnum.IS_FEATURE_ENABLED,\n        campaignKey,\n        userId,\n        customVariables,\n        variationTargetingVariables,\n        userStorageData,\n        shouldTrackReturningUser,\n        metaData\n      })\n    ) {\n      areParamsValid = true;\n    }\n  }\n\n  if (areParamsValid === false) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.IS_FEATURE_ENABLED_API_MISSING_PARAMS, {\n        file\n      })\n    );\n    return false;\n  }\n\n  // Get the cached configuration\n  let config = vwoInstance.SettingsFileManager.getConfig();\n  let settingsFile = vwoInstance.SettingsFileManager.getSettingsFile(api);\n\n  // If no settings are found, simply log and return false\n  if (!settingsFile) {\n    return false;\n  }\n\n  shouldTrackReturningUser = shouldTrackReturningUser || config.shouldTrackReturningUser || false;\n\n  // Get the campaign settings based on campaignKey from the settings\n  let campaign = CampaignUtil.getCampaign(settingsFile, campaignKey);\n\n  if (!campaign || campaign.status !== Constants.STATUS_RUNNING) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.CAMPAIGN_NOT_RUNNING, {\n        file,\n        campaignKey,\n        api\n      })\n    );\n\n    return false;\n  }\n\n  if (CampaignUtil.isAbCampaign(campaign)) {\n    // API not allowed for full-stack AB campaigns\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.INVALID_API, {\n        file,\n        campaignKey,\n        campaignType: campaign.type,\n        userId,\n        api\n      })\n    );\n\n    return false;\n  }\n\n  const { variation, variationName, variationId, isStoredVariation } = DecisionUtil.getVariation(\n    config,\n    settingsFile,\n    campaign,\n    campaignKey,\n    userId,\n    customVariables,\n    variationTargetingVariables,\n    userStorageData,\n    metaData,\n    true,\n    undefined,\n    api\n  );\n\n  let isFeatureEnabled = false;\n\n  if (variationName) {\n    isFeatureEnabled = CampaignUtil.isFeatureRolloutCampaign(campaign) || variation.isFeatureEnabled;\n\n    if (isStoredVariation && !shouldTrackReturningUser) {\n      vwoInstance.logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.USER_ALREADY_TRACKED, {\n          file,\n          userId,\n          campaignKey,\n          api\n        })\n      );\n    } else {\n      // Variation found...let VWO server knows about it to show report stats\n      if (config.batchEvents) {\n        let properties = ImpressionUtil.buildBatchEventForTrackingUser(settingsFile, campaign.id, variationId, userId);\n        vwoInstance.batchEventsQueue.enqueue(properties);\n      } else {\n        let properties = ImpressionUtil.buildEventForTrackingUser(\n          settingsFile,\n          campaign.id,\n          variationId,\n          userId,\n          vwoInstance.usageStats.getUsageStats()\n        );\n        vwoInstance.eventQueue.process(config, properties, vwoInstance);\n      }\n    }\n  }\n\n  if (isFeatureEnabled) {\n    vwoInstance.logger.log(\n      LogLevelEnum.INFO,\n      LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.FEATURE_ENABLED_FOR_USER, {\n        file,\n        campaignKey,\n        userId\n      })\n    );\n  } else {\n    vwoInstance.logger.log(\n      LogLevelEnum.INFO,\n      LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.FEATURE_NOT_ENABLED_FOR_USER, {\n        file,\n        campaignKey,\n        userId\n      })\n    );\n  }\n\n  return isFeatureEnabled;\n}\n\nmodule.exports = isFeatureEnabled;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst Constants = require('../constants');\nconst ApiEnum = require('../enums/ApiEnum');\n\nconst DecisionUtil = require('../utils/DecisionUtil');\nconst CampaignUtil = require('../utils/CampaignUtil');\nconst ValidateUtil = require('../utils/ValidateUtil');\nconst FeatureUtil = require('../utils/FeatureUtil');\nconst DataTypeUtil = require('../utils/DataTypeUtil');\nconst ObjectUtil = require('../utils/ObjectUtil');\n\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\n\nconst file = FileNameEnum.GetFeatureVariableValue;\n\n/**\n * This API method:\n *\n * 1. Validates the arguments being passed\n * 2. Checks if user is eligible for campaign and check if feature is enabled for the user.\n * 4. If feature enabled, return the variable for that variation(if Feature Test),\n *    otherwise the default values being set in Feature\n *\n * @param {Object} vwoInstance   VWO instance which has logger, settingsFile etc.\n * @param {String} campaignKey   Unique key for a campaign\n * @param {String} variableKey   Unique key for a feature's variable\n * @param {String} userId        Unique identifier for the user\n * @param {Object} options           Optional params\n *\n * @return {string|number|double|boolean|null} Variable value as is set in the VWO app i.e.\n *                                             maintaining the data-type,\n *                                             null if anything fails like campaign / variable not found\n */\nfunction getFeatureVariableValue(vwoInstance, campaignKey, variableKey, userId, options = {}) {\n  try {\n    const api = ApiEnum.GET_FEATURE_VARIABLE_VALUE;\n    let areParamsValid = false;\n    if (DataTypeUtil.isObject(options)) {\n      var { customVariables, variationTargetingVariables, userStorageData, metaData } = options;\n      // Check if arguments have valid data-type\n      if (\n        ValidateUtil.areValidParamsForAPIMethod({\n          method: ApiEnum.GET_FEATURE_VARIABLE_VALUE,\n          campaignKey,\n          variableKey,\n          userId,\n          customVariables,\n          variationTargetingVariables,\n          userStorageData,\n          metaData\n        })\n      ) {\n        areParamsValid = true;\n      }\n    }\n\n    if (areParamsValid === false) {\n      vwoInstance.logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.GET_FEATURE_VARIABLE_MISSING_PARAMS, {\n          file,\n          campaignKey,\n          variableKey\n        })\n      );\n      return null;\n    }\n\n    // Get the cached configuration\n    let config = vwoInstance.SettingsFileManager.getConfig();\n    let settingsFile = vwoInstance.SettingsFileManager.getSettingsFile(api);\n    config.apiName = api;\n\n    // If no settings are found, simply return no variation\n    if (!settingsFile) {\n      return null;\n    }\n\n    let campaign = CampaignUtil.getCampaign(settingsFile, campaignKey);\n\n    if (!campaign || campaign.status !== Constants.STATUS_RUNNING) {\n      vwoInstance.logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.CAMPAIGN_NOT_RUNNING, {\n          file,\n          campaignKey,\n          api\n        })\n      );\n\n      return null;\n    }\n\n    if (CampaignUtil.isAbCampaign(campaign)) {\n      // API not allowed for full-stack AB campaigns\n      vwoInstance.logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.INVALID_API, {\n          file,\n          campaignKey,\n          campaignType: campaign.type,\n          userId,\n          api\n        })\n      );\n\n      return null;\n    }\n\n    let variable;\n    const { variation, variationName } = DecisionUtil.getVariation(\n      config,\n      settingsFile,\n      campaign,\n      campaignKey,\n      userId,\n      customVariables,\n      variationTargetingVariables,\n      userStorageData,\n      metaData,\n      false,\n      undefined,\n      api\n    );\n\n    if (!variationName) {\n      vwoInstance.logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.FEATURE_NOT_ENABLED_FOR_USER, {\n          file,\n          campaignKey,\n          userId\n        })\n      );\n\n      return null;\n    }\n\n    if (CampaignUtil.isFeatureRolloutCampaign(campaign)) {\n      variable = FeatureUtil.getVariableForFeature(campaign, variableKey);\n    } else if (CampaignUtil.isFeatureTestCampaign(campaign)) {\n      variable = FeatureUtil.getVariableValueForVariation(campaign, variation, variableKey);\n\n      if (ObjectUtil.areObjectKeys(variable) && variation.isFeatureEnabled) {\n        vwoInstance.logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.USER_RECEIVED_VARIABLE_VALUE, {\n            file,\n            variableKey,\n            campaignKey: campaign.key,\n            variableValue: variable.value,\n            userId\n          })\n        );\n      } else if (ObjectUtil.areObjectKeys(variable) && !variation.isFeatureEnabled) {\n        vwoInstance.logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.VARIABLE_NOT_USED_RETURN_DEFAULT_VARIABLE_VALUE, {\n            file,\n            variableKey,\n            variationName\n          })\n        );\n      }\n    }\n\n    if (!ObjectUtil.areObjectKeys(variable)) {\n      vwoInstance.logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.VARIABLE_NOT_FOUND, {\n          file,\n          variableKey,\n          userId\n        })\n      );\n\n      return null;\n    }\n\n    let variableValue = variable.value;\n    let typeCastedValue = FeatureUtil.getTypeCastVariableValue(variableValue, variable.type);\n\n    return typeCastedValue;\n  } catch (err) {\n    vwoInstance.logger.log(LogLevelEnum.ERROR, err.message);\n\n    return null;\n  }\n}\n\nmodule.exports = getFeatureVariableValue;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst CampaignUtil = require('./CampaignUtil');\nconst DataTypeUtil = require('./DataTypeUtil');\nconst FeatureVariableTypeEnum = require('../enums/FeatureVariableTypeEnum');\n\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\nconst logger = logging.getLogger();\n\nconst file = FileNameEnum.FeatureUtil;\n\nlet FeatureUtil = {\n  getVariableForFeature: (campaign, variableKey) => {\n    let variableData = {};\n\n    if (CampaignUtil.isFeatureRolloutCampaign(campaign)) {\n      let variables = campaign.variables || [];\n\n      for (let i = 0; i < variables.length; i++) {\n        if (variables[i].key === variableKey) {\n          variableData = variables[i];\n\n          break;\n        }\n      }\n\n      return variableData;\n    }\n\n    return variableData;\n  },\n  getVariableValueForVariation: (campaign, variation, variableKey) => {\n    let variationVariable = {};\n\n    if (CampaignUtil.isFeatureTestCampaign(campaign)) {\n      if (!variation || !variation || !variation.variables) {\n        return variationVariable;\n      }\n\n      if (!variation.isFeatureEnabled) {\n        variation = CampaignUtil.getControlForCampaign(campaign);\n      }\n\n      for (let i = 0; i < variation.variables.length; i++) {\n        let variable = variation.variables[i];\n\n        if (variableKey === variable.key) {\n          variationVariable = variable;\n          break;\n        }\n      }\n    }\n\n    return variationVariable;\n  },\n  getTypeCastVariableValue: (variableValue, variableType) => {\n    let typeCastedValue;\n\n    switch (variableType) {\n      case FeatureVariableTypeEnum.INTEGER:\n        typeCastedValue = parseInt(variableValue, 10);\n        if (!DataTypeUtil.isNumber(typeCastedValue) || isNaN(typeCastedValue)) {\n          logger.log(\n            LogLevelEnum.ERROR,\n            LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.UNABLE_TO_CAST_VALUE, {\n              file,\n              variableValue,\n              variableType\n            })\n          );\n          typeCastedValue = null;\n        }\n        break;\n\n      case FeatureVariableTypeEnum.DOUBLE:\n        typeCastedValue = parseFloat(variableValue);\n        if (!DataTypeUtil.isNumber(typeCastedValue) || isNaN(typeCastedValue)) {\n          logger.log(\n            LogLevelEnum.ERROR,\n            LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.UNABLE_TO_CAST_VALUE, {\n              file,\n              variableValue,\n              variableType\n            })\n          );\n          typeCastedValue = null;\n        }\n        break;\n\n      case FeatureVariableTypeEnum.BOOLEAN:\n        if (!DataTypeUtil.isBoolean(variableValue)) {\n          logger.log(\n            LogLevelEnum.ERROR,\n            LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.UNABLE_TO_CAST_VALUE, {\n              file,\n              variableValue,\n              variableType\n            })\n          );\n          typeCastedValue = null;\n        } else {\n          typeCastedValue = variableValue;\n        }\n        break;\n\n      case FeatureVariableTypeEnum.JSON:\n        if (!DataTypeUtil.isObject(variableValue)) {\n          logger.log(\n            LogLevelEnum.ERROR,\n            LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.UNABLE_TO_CAST_VALUE, {\n              file,\n              variableValue,\n              variableType\n            })\n          );\n          typeCastedValue = null;\n        } else {\n          typeCastedValue = variableValue;\n        }\n        break;\n\n      default:\n        typeCastedValue = variableValue;\n        break;\n    }\n\n    return typeCastedValue;\n  }\n};\n\nmodule.exports = FeatureUtil;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst FeatureVariableTypeEnum = {\n  BOOLEAN: 'boolean',\n  DOUBLE: 'double',\n  INTEGER: 'integer',\n  STRING: 'string',\n  JSON: 'json'\n};\n\nmodule.exports = FeatureVariableTypeEnum;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst ApiEnum = require('../enums/ApiEnum');\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst ValidateUtil = require('../utils/ValidateUtil');\nconst ImpressionUtil = require('../utils/ImpressionUtil');\n\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\n\nconst file = FileNameEnum.Push;\n\n/**\n * This API method: Pushes the key-value tag pair for a particular user\n *\n * 1. validates the arguments being passed\n * 2. Sends a call to VWO push api\n *\n * @param {Object} vwoInstance               VWO instance which has logger, settingsFile etc.\n * @param {String} tagKey                    tag key\n * @param {String} tagValue                  tag Value\n * @param {String} userId                    ID assigned to a user\n *\n * @return {Boolean}                         true if request is pushed to eventQueue, false if params are invalid or settings file is unavailable\n */\nfunction push(vwoInstance, tagKey, tagValue, userId) {\n  const api = ApiEnum.PUSH;\n\n  if (!ValidateUtil.areValidParamsForAPIMethod({ method: ApiEnum.PUSH, tagKey, tagValue, userId })) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.PUSH_INVALID_PARAMS, {\n        file,\n        method: api\n      })\n    );\n    return false;\n  }\n\n  if (tagKey.length > 255) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.TAG_KEY_LENGTH_EXCEEDED, {\n        file,\n        tagKey,\n        userId\n      })\n    );\n    return false;\n  }\n\n  if (tagValue.length > 255) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.TAG_VALUE_LENGTH_EXCEEDED, {\n        file,\n        tagKey,\n        userId,\n        tagValue\n      })\n    );\n    return false;\n  }\n\n  // Get the cached configuration\n  let config = vwoInstance.SettingsFileManager.getConfig();\n  let settingsFile = vwoInstance.SettingsFileManager.getSettingsFile(api);\n\n  // If no settings are found, simply false\n  if (!settingsFile) {\n    return false;\n  }\n\n  if (config.batchEvents) {\n    let properties = ImpressionUtil.buildBatchEventForPushing(settingsFile, tagKey, tagValue, userId);\n    vwoInstance.batchEventsQueue.enqueue(properties);\n  } else {\n    let properties = ImpressionUtil.buildEventForPushing(settingsFile, tagKey, tagValue, userId);\n    vwoInstance.eventQueue.process(config, properties, vwoInstance);\n  }\n\n  return true;\n}\n\nmodule.exports = push;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DataTypeUtil = require('../utils/DataTypeUtil');\nconst EventDispatcher = require('../utils/EventDispatcherUtil');\n\nclass EventQueue {\n  constructor() {\n    this.running = false;\n    this.queue = [];\n  }\n\n  process(config, properties, vwoInstance) {\n    if (config && config.isDevelopmentMode) {\n      return;\n    }\n\n    this.enqueue(properties, vwoInstance);\n  }\n\n  enqueue(properties, vwoInstance) {\n    this.queue.push({\n      eventName: properties.eventName,\n      properties: properties,\n      callback: () => {\n        EventDispatcher.dispatch(properties, () => {});\n      }\n    });\n\n    vwoInstance.eventQueue.executeNext(properties);\n\n    if (!this.running) {\n      // if nothing is running, then start the engines!\n      this.executeNext(properties);\n    }\n\n    return this;\n  }\n\n  executeNext(properties) {\n    this.running = false;\n\n    // get the first element off the queue\n    if (this.queue && this.queue.length) {\n      let event = this.queue.shift();\n\n      if (event) {\n        this.running = true;\n        if (event.callback && DataTypeUtil.isFunction(event.callback)) {\n          event.callback(properties);\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = EventQueue;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\nconst logger = logging.getLogger();\nconst FunctionUtil = require('./FunctionUtil');\nconst excludedProperties = ['url'];\n\nlet EventDispatcher = {\n  dispatch: function(properties, callback) {\n    let parsedUrl;\n    let queryParams = '?';\n\n    queryParams += FunctionUtil.convertObjectKeysToString(properties, excludedProperties);\n\n    try {\n      // Require files only if required in respective Engine i.e. Node / Browser\n      if (typeof process.env === 'undefined') {\n        parsedUrl = new URL(properties.url);\n\n        require('./HttpImageUtil').sendCall(parsedUrl, queryParams);\n      } else {\n        const url = require('url');\n\n        parsedUrl = url.parse(properties.url);\n\n        require('./HttpHandlerUtil').sendGetCall(parsedUrl, queryParams, properties, callback);\n      }\n    } catch (err) {\n      let endPoint = properties.url;\n\n      logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.IMPRESSION_FAILED, {\n          file: FileNameEnum.EventDispatcher,\n          endPoint,\n          err\n        })\n      );\n    }\n\n    return false;\n  }\n};\n\nmodule.exports = EventDispatcher;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst noop = () => {};\n\nconst HttpImageUtil = {\n  sendCall: function(url, queryParams, options = {}) {\n    let endPoint = `https://${url.host}${url.pathname}${queryParams}`;\n\n    let { successCallback, errorCallback } = options;\n    let isCallbackCalled = false;\n    let img = new Image();\n\n    successCallback = successCallback || noop;\n    errorCallback = errorCallback || noop;\n\n    img.onload = function() {\n      if (isCallbackCalled) {\n        return;\n      }\n      isCallbackCalled = true;\n      successCallback();\n    };\n\n    img.onerror = function() {\n      if (isCallbackCalled) {\n        return;\n      }\n      isCallbackCalled = true;\n      errorCallback();\n    };\n\n    img.src = endPoint;\n  }\n};\nmodule.exports = HttpImageUtil;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst CampaignUtil = require('../utils/CampaignUtil');\nconst FunctionUtil = require('../utils/FunctionUtil');\nconst SettingsFileUtil = require('../utils/SettingsFileUtil');\n\nconst logging = require('./logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst validateSettingsFile = require('../schemas/SettingsFileSchema');\nconst { isObject } = require('../utils/DataTypeUtil');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\n\nconst file = FileNameEnum.SettingsFileManager;\n\nclass SettingsFileManager {\n  // PRIVATE METHODS\n\n  constructor(config) {\n    if (config) {\n      if (\n        (config.settingsFile && isObject(config.settingsFile.campaigns)) ||\n        (config.settingsFile && !config.settingsFile.campaigns)\n      ) {\n        config.settingsFile.campaigns = [];\n      }\n\n      this._configObj = config;\n      this._clonedSettingsFile = config.settingsFile ? FunctionUtil.cloneObject(config.settingsFile) : null;\n    } else {\n      this._configObj = null;\n      this._clonedSettingsFile = null;\n    }\n  }\n\n  _setVariationBucketing(campaign) {\n    CampaignUtil.setVariationAllocation(campaign);\n  }\n\n  // PUBLIC METHODS\n\n  isSettingsFileValid() {\n    if (!this._configObj || !this._clonedSettingsFile) {\n      return false;\n    }\n    let isValidSettingsFile = validateSettingsFile(this._clonedSettingsFile);\n\n    if (!isValidSettingsFile) {\n      this._configObj.logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.SETTINGS_FILE_CORRUPTED, {\n          file\n        })\n      );\n\n      return false;\n    }\n\n    return true;\n  }\n\n  checkAndPoll() {\n    if (!this._configObj.pollingInterval || !this._configObj.sdkKey) {\n      return;\n    }\n\n    let lastSettingsFile = JSON.stringify(this._clonedSettingsFile);\n    setInterval(() => {\n      SettingsFileUtil.get(this._clonedSettingsFile.accountId, this._configObj.sdkKey)\n        .then(latestSettingsFile => {\n          this._configObj.logger.log(\n            LogLevelEnum.INFO,\n            LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.POLLING_SUCCESS, {\n              file,\n              accountId: this._clonedSettingsFile.accountId\n            })\n          );\n          const stringifiedLatestSettingsFile = JSON.stringify(latestSettingsFile);\n\n          if (stringifiedLatestSettingsFile !== lastSettingsFile) {\n            lastSettingsFile = stringifiedLatestSettingsFile;\n\n            this.updateSettingsFile(latestSettingsFile);\n\n            this._configObj.logger.log(\n              LogLevelEnum.INFO,\n              LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.SETTINGS_FILE_UPDATED, {\n                file,\n                accountId: this._clonedSettingsFile.accountId\n              })\n            );\n          } else {\n            this._configObj.logger.log(\n              LogLevelEnum.INFO,\n              LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.SETTINGS_NOT_UPDATED, {\n                file,\n                accountId: this._clonedSettingsFile.accountId\n              })\n            );\n          }\n        })\n        .catch(_e => {\n          this._configObj.logger.log(\n            LogLevelEnum.ERROR,\n            LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.POLLING_FAILED, {\n              file,\n              accountId: this._clonedSettingsFile.accountId\n            })\n          );\n        });\n    }, this._configObj.pollingInterval);\n\n    this._configObj.logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.STARTED_POLLING, {\n        file,\n        pollingInterval: this._configObj.pollingInterval\n      })\n    );\n  }\n  processSettingsFile() {\n    let settingsFile = this._clonedSettingsFile;\n\n    for (let i = 0; i < settingsFile.campaigns.length; i++) {\n      let campaign = settingsFile.campaigns[i];\n\n      this._setVariationBucketing(campaign);\n    }\n\n    this._configObj.logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.SETTINGS_FILE_PROCESSED, {\n        file\n      })\n    );\n\n    return settingsFile;\n  }\n\n  /**\n   * Fetch latest settings-file and update so that vwoClientInstance could use latest settings\n   * Helpful especially when using webhooks\n   *\n   * @param {Number} accountId\n   * @param {String} sdkKey\n   *\n   * @return {Promise}\n   */\n  getAndUpdateSettingsFile(accountId = this._clonedSettingsFile.accountId, sdkKey = this._clonedSettingsFile.sdkKey) {\n    return new Promise((resolve, _reject) => {\n      SettingsFileUtil.get(accountId, sdkKey, null, { isViaWebhook: true })\n        .then(settings => {\n          this.updateSettingsFile(settings);\n          resolve(settings);\n        })\n        .catch(_err => {});\n    });\n  }\n\n  /**\n   * Update the settings-file on the instance so that latest settings could be used from next hit onwards\n   * @param {Object} settings\n   */\n  updateSettingsFile(settings) {\n    this._clonedSettingsFile = FunctionUtil.cloneObject(settings);\n    this.processSettingsFile();\n  }\n\n  getConfig() {\n    return this._configObj;\n  }\n\n  getSettingsFile(api) {\n    if (!this._clonedSettingsFile) {\n      this._configObj.logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.API_HAS_CORRUPTED_SETTINGS_FILE, {\n          file,\n          api\n        })\n      );\n    }\n    return this._clonedSettingsFile;\n  }\n}\nmodule.exports = SettingsFileManager;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst { getCurrentTime } = require('./FunctionUtil');\nconst { isObject, isFunction } = require('./DataTypeUtil');\n\nconst XhrUtil = {\n  _getStoredSettings: function(userStorageService) {\n    let isStoredData = false;\n    let parsedSettings;\n\n    if (userStorageService && isObject(userStorageService) && isFunction(userStorageService.getSettings)) {\n      try {\n        const settings = userStorageService.getSettings();\n        parsedSettings = JSON.parse(settings);\n\n        if (parsedSettings && isObject(parsedSettings) && Object.keys(parsedSettings).length > 3) {\n          const info = `VWO-SDK - [INFO]: ${getCurrentTime()} VWO settings found in Storage Service.`;\n\n          console.info(info);\n\n          isStoredData = true;\n        } else if (parsedSettings) {\n          const error = `VWO-SDK - [ERROR]: ${getCurrentTime()} VWO settings found in Storage Service is not valid.`;\n\n          console.error(error);\n        } else {\n          const warning = `VWO-SDK - [WARNING]: ${getCurrentTime()} VWO settings is empty in Storage Service.`;\n\n          console.warn(warning);\n        }\n      } catch (err) {\n        const error = `VWO-SDK - [ERROR]: ${getCurrentTime()} VWO settings found in Storage Service is not valid. ${err}`;\n\n        console.error(error);\n        isStoredData = false;\n      }\n    }\n\n    return {\n      isStoredData,\n      parsedSettings\n    };\n  },\n  send: function({ method, url, userStorageService } = {}) {\n    if (!url || !method) {\n      return;\n    }\n\n    return new Promise((resolve, reject) => {\n      const { isStoredData, parsedSettings } = XhrUtil._getStoredSettings(userStorageService);\n\n      if (isStoredData) {\n        resolve(parsedSettings);\n      } else {\n        let xhr = new XMLHttpRequest();\n\n        xhr.open(method, url);\n        xhr.send();\n\n        xhr.onload = function() {\n          try {\n            let parsedXhrResponse = JSON.parse(xhr.response);\n\n            if (userStorageService && isObject(userStorageService) && isFunction(userStorageService.setSettings)) {\n              userStorageService.setSettings(xhr.response);\n            }\n\n            resolve(parsedXhrResponse);\n          } catch (err) {\n            console.error(err);\n          }\n        };\n\n        xhr.onerror = function() {\n          let error = `VWO-SDK - [ERROR]: ${getCurrentTime()} Request failed for fetching account settings. Got Status Code: ${\n            xhr.status\n          }`;\n\n          console.error(error);\n          reject(error);\n        };\n      }\n    });\n  }\n};\n\nmodule.exports = XhrUtil;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet { validate, number, string, boolean, array, object, optional, union, type, record } = require('superstruct');\n\nconst campaignGoalSchema = type({\n  id: union([number(), string()]),\n  identifier: string(),\n  type: string()\n});\n\nconst variableObjectSchema = type({\n  id: union([number(), string()]),\n  type: string(),\n  key: string(),\n  value: union([number(), string(), boolean()])\n});\n\nconst campaignVariationSchema = type({\n  id: union([number(), string()]),\n  name: string(),\n  weight: union([number(), string()]),\n  changes: optional(object()),\n  segments: optional(object()),\n  variables: optional(union([object(), array(variableObjectSchema)])),\n  isFeatureEnabled: optional(boolean()),\n  startVariationAllocation: optional(number()),\n  endVariationAllocation: optional(number())\n});\n\nconst campaignObjectSchema = type({\n  id: union([number(), string()]),\n  type: string(),\n  key: string(),\n  status: string(),\n  name: string(),\n  isBucketingSeedEnabled: optional(boolean()),\n  percentTraffic: number(),\n  goals: union([object(), array(campaignGoalSchema)]),\n  variations: union([object(), array(campaignVariationSchema)]),\n  variables: optional(union([object(), array(variableObjectSchema)])),\n  segments: object(),\n  isForcedVariationEnabled: optional(boolean()),\n  isUserListEnabled: optional(boolean())\n});\n\nconst groupSchema = type({\n  groupName: string(),\n  campaigns: array(number())\n});\n\nconst settingsFileSchema = type({\n  sdkKey: optional(string()),\n  version: union([number(), string()]),\n  accountId: union([number(), string()]),\n  campaigns: array(campaignObjectSchema),\n  campaignGroups: optional(record(string(), number())),\n  groups: optional(union([object(), record(string(), groupSchema)]))\n});\n\nconst validateSettingsFile = function(settings) {\n  const [error] = validate(settings, settingsFileSchema);\n  return !error;\n};\n\nmodule.exports = validateSettingsFile;\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n/**\n * Convert a validation result to an iterable of failures.\n */\nfunction* toFailures(result, context) {\n  if (result === true) ; else if (result === false) {\n    yield context.fail();\n  } else {\n    yield* result;\n  }\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nfunction iteratorShift(input) {\n  const {\n    done,\n    value\n  } = input.next();\n  return done ? undefined : value;\n}\n\n/**\n * `Struct` objects encapsulate the schema for a specific data type (with\n * optional coercion). You can then use the `assert`, `is` or `validate` helpers\n * to validate unknown data against a struct.\n */\n\nclass Struct {\n  constructor(props) {\n    const {\n      type,\n      schema,\n      coercer = value => value,\n      validator = () => [],\n      refiner = () => []\n    } = props;\n    this.type = type;\n    this.schema = schema;\n    this.coercer = coercer;\n    this.validator = validator;\n    this.refiner = refiner;\n  }\n\n}\n/**\n * `StructError` objects are thrown (or returned) by Superstruct when its\n * validation fails. The error represents the first error encountered during\n * validation. But they also have an `error.failures` property that holds\n * information for all of the failures encountered.\n */\n\nclass StructError extends TypeError {\n  constructor(failure, moreFailures) {\n    const {\n      path,\n      value,\n      type,\n      branch\n    } = failure,\n          rest = _objectWithoutProperties(failure, [\"path\", \"value\", \"type\", \"branch\"]);\n\n    const message = `Expected a value of type \\`${type}\\`${path.length ? ` for \\`${path.join('.')}\\`` : ''} but received \\`${JSON.stringify(value)}\\`.`;\n    let failuresResult;\n\n    function failures() {\n      if (!failuresResult) {\n        failuresResult = [failure, ...moreFailures];\n      }\n\n      return failuresResult;\n    }\n\n    super(message);\n    this.value = value;\n    Object.assign(this, rest);\n    this.type = type;\n    this.path = path;\n    this.branch = branch;\n    this.failures = failures;\n    this.stack = new Error().stack;\n    this.__proto__ = StructError.prototype;\n  }\n\n}\n/**\n * Assert that a value passes a `Struct`, throwing if it doesn't.\n */\n\nfunction assert(value, struct) {\n  const result = validate(value, struct);\n\n  if (result[0]) {\n    throw result[0];\n  }\n}\n/**\n * Coerce a value with the coercion logic of `Struct` and validate it.\n */\n\nfunction coerce(value, struct) {\n  const ret = struct.coercer(value);\n  assert(ret, struct);\n  return ret;\n}\n/**\n * Check if a value passes a `Struct`.\n */\n\nfunction is(value, struct) {\n  const result = validate(value, struct);\n  return !result[0];\n}\n/**\n * Validate a value against a `Struct`, returning an error if invalid.\n */\n\nfunction validate(value, struct, coercing = false) {\n  if (coercing) {\n    value = struct.coercer(value);\n  }\n\n  const failures = check(value, struct);\n  const failure = iteratorShift(failures);\n\n  if (failure) {\n    const error = new StructError(failure, failures);\n    return [error, undefined];\n  } else {\n    return [undefined, value];\n  }\n}\n/**\n * Check a value against a `Struct`, returning an iterable of failures.\n */\n\nfunction* check(value, struct, path = [], branch = []) {\n  const {\n    type\n  } = struct;\n  const ctx = {\n    value,\n    type,\n    branch,\n    path,\n\n    fail(props = {}) {\n      return _objectSpread2({\n        value,\n        type,\n        path,\n        branch: [...branch, value]\n      }, props);\n    },\n\n    check(v, s, parent, key) {\n      const p = parent !== undefined ? [...path, key] : path;\n      const b = parent !== undefined ? [...branch, parent] : branch;\n      return check(v, s, p, b);\n    }\n\n  };\n  const failures = toFailures(struct.validator(value, ctx), ctx);\n  const failure = iteratorShift(failures);\n\n  if (failure) {\n    yield failure;\n    yield* failures;\n  } else {\n    yield* toFailures(struct.refiner(value, ctx), ctx);\n  }\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n */\n\nfunction coercion(struct, coercer) {\n  const fn = struct.coercer;\n  return new Struct(_objectSpread2(_objectSpread2({}, struct), {}, {\n    coercer: value => {\n      return fn(coercer(value));\n    }\n  }));\n}\n/**\n * Augment a struct to coerce a default value for missing values.\n *\n * Note: You must use `coerce(value, Struct)` on the value before validating it\n * to have the value defaulted!\n */\n\nfunction defaulted(S, fallback, strict) {\n  return coercion(S, x => {\n    const f = typeof fallback === 'function' ? fallback() : fallback;\n\n    if (x === undefined) {\n      return f;\n    }\n\n    if (strict !== true && isPlainObject(x) && isPlainObject(f)) {\n      const ret = _objectSpread2({}, x);\n\n      let changed = false;\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key];\n          changed = true;\n        }\n      }\n\n      if (changed) {\n        return ret;\n      }\n    }\n\n    return x;\n  });\n}\n/**\n * Coerce a value to mask its properties to only that defined in the struct.\n */\n\nfunction masked(S) {\n  return coercion(S, x => {\n    if (!isPlainObject(x)) {\n      return x;\n    }\n\n    const ret = {};\n\n    for (const key in S.schema) {\n      ret[key] = x[key];\n    }\n\n    return ret;\n  });\n}\n/**\n * Check if a value is a plain object.\n */\n\nfunction isPlainObject(value) {\n  if (Object.prototype.toString.call(value) !== '[object Object]') {\n    return false;\n  }\n\n  const prototype = Object.getPrototypeOf(value);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Augment a string or array struct to constrain its length to zero.\n */\n\nfunction empty(S) {\n  return refinement(S, `${S.type} & Empty`, value => {\n    return value.length === 0;\n  });\n}\n/**\n * Augment a string or array struct to constrain its length to being between a\n * minimum and maximum size.\n */\n\nfunction length(S, min, max) {\n  return refinement(S, `${S.type} & Length<${min},${max}>`, value => {\n    return min < value.length && value.length < max;\n  });\n}\n/**\n * Refine a string struct to match a specific regexp pattern.\n */\n\nfunction pattern(S, regexp) {\n  return refinement(S, `${S.type} & Pattern<${regexp.source}>`, value => {\n    return regexp.test(value);\n  });\n}\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n */\n\nfunction refinement(struct, type, refiner) {\n  const fn = struct.refiner;\n  return new Struct(_objectSpread2(_objectSpread2({}, struct), {}, {\n    type,\n\n    *refiner(value, fail) {\n      yield* toFailures(fn(value, fail), fail);\n      yield* toFailures(refiner(value, fail), fail);\n    }\n\n  }));\n}\n\n/**\n * Validate any value.\n */\n\nfunction any() {\n  return struct('any', () => true);\n}\nfunction array(Element) {\n  return new Struct({\n    type: `Array<${Element ? Element.type : 'unknown'}>`,\n    schema: Element,\n    coercer: value => {\n      return Element && Array.isArray(value) ? value.map(v => coerce(v, Element)) : value;\n    },\n\n    *validator(value, ctx) {\n      if (!Array.isArray(value)) {\n        yield ctx.fail();\n        return;\n      }\n\n      if (Element) {\n        for (const [i, v] of value.entries()) {\n          yield* ctx.check(v, Element, value, i);\n        }\n      }\n    }\n\n  });\n}\n/**\n * Validate that boolean values.\n */\n\nfunction boolean() {\n  return struct('boolean', value => {\n    return typeof value === 'boolean';\n  });\n}\n/**\n * Validate that `Date` values.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nfunction date() {\n  return struct('Date', value => {\n    return value instanceof Date && !isNaN(value.getTime());\n  });\n}\n/**\n * Validate that a value dynamically, determing which struct to use at runtime.\n */\n\nfunction dynamic(fn) {\n  return struct('Dynamic<...>', (value, ctx) => {\n    return ctx.check(value, fn(value, ctx));\n  });\n}\nfunction enums(values) {\n  return struct(`Enum<${values.map(toLiteralString)}>`, value => {\n    return values.includes(value);\n  });\n}\n/**\n * Validate that a value is a function.\n */\n\nfunction func() {\n  return struct('Function', value => {\n    return typeof value === 'function';\n  });\n}\n/**\n * Validate that a value is an instance of a class.\n */\n\nfunction instance(Class) {\n  return struct(`InstanceOf<${Class.name}>`, value => {\n    return value instanceof Class;\n  });\n}\nfunction intersection(Structs) {\n  return struct(Structs.map(s => s.type).join(' & '), function* (value, ctx) {\n    for (const S of Structs) {\n      yield* ctx.check(value, S);\n    }\n  });\n}\n/**\n * Validate a value lazily, by constructing the struct right before the first\n * validation. This is useful for cases where you want to have self-referential\n * structs for nested data structures.\n */\n\nfunction lazy(fn) {\n  let S;\n  return struct('Lazy<...>', (value, ctx) => {\n    if (!S) {\n      S = fn();\n    }\n\n    return ctx.check(value, S);\n  });\n}\nfunction literal(constant) {\n  return struct(`Literal<${toLiteralString(constant)}>`, value => {\n    return value === constant;\n  });\n}\n/**\n * Validate that a value is a map with specific key and value entries.\n */\n\nfunction map(Key, Value) {\n  return struct(`Map<${Key.type},${Value.type}>`, function* (value, ctx) {\n    if (!(value instanceof Map)) {\n      yield ctx.fail();\n      return;\n    }\n\n    for (const [k, v] of value.entries()) {\n      yield* ctx.check(k, Key, value, k);\n      yield* ctx.check(v, Value, value, k);\n    }\n  });\n}\n/**\n * Validate that a value always fails.\n */\n\nfunction never() {\n  return struct('never', () => false);\n}\n/**\n * Augment a struct to make it accept `null` values.\n */\n\nfunction nullable(S) {\n  return new Struct({\n    type: `${S.type} | null`,\n    schema: S.schema,\n    validator: (value, ctx) => {\n      return value === null || ctx.check(value, S);\n    }\n  });\n}\n/**\n * Validate that a value is a number.\n */\n\nfunction number() {\n  return struct(`number`, value => {\n    return typeof value === 'number' && !isNaN(value);\n  });\n}\nfunction object(Structs) {\n  const knowns = Structs ? Object.keys(Structs) : [];\n  const Never = never();\n  return new Struct({\n    type: Structs ? `Object<{${knowns.join(',')}}>` : 'Object',\n    schema: Structs ? Structs : null,\n    coercer: Structs ? createObjectCoercer(Structs) : x => x,\n\n    *validator(value, ctx) {\n      if (typeof value !== 'object' || value == null) {\n        yield ctx.fail();\n        return;\n      }\n\n      if (Structs) {\n        const unknowns = new Set(Object.keys(value));\n\n        for (const key of knowns) {\n          unknowns.delete(key);\n          const Value = Structs[key];\n          const v = value[key];\n          yield* ctx.check(v, Value, value, key);\n        }\n\n        for (const key of unknowns) {\n          const v = value[key];\n          yield* ctx.check(v, Never, value, key);\n        }\n      }\n    }\n\n  });\n}\n/**\n * Augment a struct to make it optionally accept `undefined` values.\n */\n\nfunction optional(S) {\n  return new Struct({\n    type: `${S.type}?`,\n    schema: S.schema,\n    validator: (value, ctx) => {\n      return value === undefined || ctx.check(value, S);\n    }\n  });\n}\n/**\n * Validate that a partial object with specific entry values.\n */\n\nfunction partial(Structs) {\n  if (Structs instanceof Struct) {\n    Structs = Structs.schema;\n  }\n\n  const knowns = Object.keys(Structs);\n  const Never = never();\n  return new Struct({\n    type: `Partial<{${knowns.join(',')}}>`,\n    schema: Structs,\n    coercer: createObjectCoercer(Structs),\n\n    *validator(value, ctx) {\n      if (typeof value !== 'object' || value == null) {\n        yield ctx.fail();\n        return;\n      }\n\n      const unknowns = new Set(Object.keys(value));\n\n      for (const key of knowns) {\n        unknowns.delete(key);\n\n        if (!(key in value)) {\n          continue;\n        }\n\n        const Value = Structs[key];\n        const v = value[key];\n        yield* ctx.check(v, Value, value, key);\n      }\n\n      for (const key of unknowns) {\n        const v = value[key];\n        yield* ctx.check(v, Never, value, key);\n      }\n    }\n\n  });\n}\n/**\n * Validate that a value is a record with specific key and\n * value entries.\n */\n\nfunction record(Key, Value) {\n  return struct(`Record<${Key.type},${Value.type}>`, function* (value, ctx) {\n    if (typeof value !== 'object' || value == null) {\n      yield ctx.fail();\n      return;\n    }\n\n    for (const k in value) {\n      const v = value[k];\n      yield* ctx.check(k, Key, value, k);\n      yield* ctx.check(v, Value, value, k);\n    }\n  });\n}\n/**\n * Validate that a set of values matches a specific type.\n */\n\nfunction set(Element) {\n  return struct(`Set<${Element.type}>`, (value, ctx) => {\n    if (!(value instanceof Set)) {\n      return false;\n    }\n\n    for (const val of value) {\n      const [failure] = ctx.check(val, Element);\n\n      if (failure) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n}\n/**\n * Validate that a value is a string.\n */\n\nfunction string() {\n  return struct('string', value => {\n    return typeof value === 'string';\n  });\n}\n/**\n * Define a `Struct` instance with a type and validation function.\n */\n\nfunction struct(name, validator) {\n  return new Struct({\n    type: name,\n    validator,\n    schema: null\n  });\n}\nfunction tuple(Elements) {\n  const Never = never();\n  return struct(`[${Elements.map(s => s.type).join(',')}]`, function* (value, ctx) {\n    if (!Array.isArray(value)) {\n      yield ctx.fail();\n      return;\n    }\n\n    for (const [index, Element] of Elements.entries()) {\n      const v = value[index];\n      yield* ctx.check(v, Element, value, index);\n    }\n\n    if (value.length > Elements.length) {\n      const index = Elements.length;\n      const v = value[index];\n      yield* ctx.check(v, Never, value, index);\n    }\n  });\n}\n/**\n * Validate that a value matches a specific strutural interface, like the\n * structural typing that TypeScript uses.\n */\n\nfunction type(Structs) {\n  const keys = Object.keys(Structs);\n  return struct(`Type<{${keys.join(',')}}>`, function* (value, ctx) {\n    if (typeof value !== 'object' || value == null) {\n      yield ctx.fail();\n      return;\n    }\n\n    for (const key of keys) {\n      const Value = Structs[key];\n      const v = value[key];\n      yield* ctx.check(v, Value, value, key);\n    }\n  });\n}\nfunction union(Structs) {\n  return struct(`${Structs.map(s => s.type).join(' | ')}`, function* (value, ctx) {\n    for (const S of Structs) {\n      const [...failures] = ctx.check(value, S);\n\n      if (failures.length === 0) {\n        return;\n      }\n    }\n\n    yield ctx.fail();\n  });\n}\n/**\n * Convert a value to a literal string.\n */\n\nfunction toLiteralString(value) {\n  return typeof value === 'string' ? `\"${value.replace(/\"/g, '\"')}\"` : `${value}`;\n}\n/**\n * Coerce the values of an object-like struct.\n */\n\n\nfunction createObjectCoercer(Structs) {\n  const knowns = Object.keys(Structs);\n  return value => {\n    if (typeof value !== 'object' || value == null) {\n      return value;\n    }\n\n    const ret = {};\n    const unknowns = new Set(Object.keys(value));\n\n    for (const key of knowns) {\n      unknowns.delete(key);\n      const Value = Structs[key];\n      const v = value[key];\n      ret[key] = coerce(v, Value);\n    }\n\n    for (const key of unknowns) {\n      ret[key] = value[key];\n    }\n\n    return ret;\n  };\n}\n\nexport { Struct, StructError, any, array, assert, boolean, coerce, coercion, date, defaulted, dynamic, empty, enums, func, instance, intersection, is, lazy, length, literal, map, masked, never, nullable, number, object, optional, partial, pattern, record, refinement, set, string, struct, tuple, type, union, validate };\n//# sourceMappingURL=index.es.js.map\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst { LogManager } = require('./logging');\n\nclass UsageStats {\n  constructor() {\n    this.data = {};\n  }\n\n  /**\n   * Collect the usage stats from the params passed at the time of instantiating VWO and send them to VWO Server\n   * @param {Object} config    config passed at the time of instantiation.\n   */\n  collectUsageStats(config) {\n    this.data['eb'] = Number(!!config.batchEvents);\n    this.data['ig'] = Number(!!config.integrations);\n    this.data['ss'] = Number(!!config.userStorageService);\n    this.data['cl'] = Number(!(config.logger instanceof LogManager));\n    this.data['ll'] = Number(config.logging && config.logging.level);\n    this.data['tr'] = Number(config.shouldTrackReturningUser);\n    this.data['gt'] = Number(!!config.goalTypeToTrack);\n    this.data['pi'] = Number(!!config.pollingInterval);\n\n    Object.keys(this.data).forEach(function(key) {\n      if (!this.data[key]) {\n        delete this.data[key];\n      }\n    }, this);\n  }\n\n  /**\n   * Get the collected usage stats.\n   * @returns     collected usage stats data\n   */\n  getUsageStats() {\n    if (Object.keys(this.data).length > 0) {\n      this.data['_l'] = 1;\n    }\n    return this.data;\n  }\n}\n\nmodule.exports = UsageStats;\n"],"sourceRoot":""}