{"version":3,"sources":["webpack://vwoSdk/webpack/universalModuleDefinition","webpack://vwoSdk/webpack/bootstrap","webpack://vwoSdk/./lib/services/logging/index.js","webpack://vwoSdk/./lib/enums/FileNameEnum.js","webpack://vwoSdk/./lib/utils/DataTypeUtil.js","webpack://vwoSdk/./lib/constants/index.js","webpack://vwoSdk/./lib/utils/ValidateUtil.js","webpack://vwoSdk/./lib/utils/FunctionUtil.js","webpack://vwoSdk/./lib/enums/ApiEnum.js","webpack://vwoSdk/./lib/utils/CampaignUtil.js","webpack://vwoSdk/./lib/utils/DecisionUtil.js","webpack://vwoSdk/./lib/enums/GoalTypeEnum.js","webpack://vwoSdk/./lib/utils/ObjectUtil.js","webpack://vwoSdk/./lib/utils/ImpressionUtil.js","webpack://vwoSdk/./lib/enums/EventEnum.js","webpack://vwoSdk/./lib/core/BucketingService.js","webpack://vwoSdk/./lib/enums/LogLevelEnum.js","webpack://vwoSdk/./lib/enums/CampaignTypeEnum.js","webpack://vwoSdk/./lib/enums/segment/index.js","webpack://vwoSdk/./lib/services/HooksManager.js","webpack://vwoSdk/./lib/utils/UuidUtil.js","webpack://vwoSdk/./lib/enums/UrlEnum.js","webpack://vwoSdk/./lib/utils/XhrUtil.js","webpack://vwoSdk/./lib/utils/SettingsFileUtil.js","webpack://vwoSdk/./lib/index.js","webpack://vwoSdk/./lib/VWO.js","webpack://vwoSdk/./lib/api/index.js","webpack://vwoSdk/./lib/api/activate.js","webpack://vwoSdk/./lib/core/VariationDecider.js","webpack://vwoSdk/./lib/enums/DataTypeEnum.js","webpack://vwoSdk/./node_modules/murmurhash/murmurhash.js","webpack://vwoSdk/./lib/services/logging/LoggingManager.js","webpack://vwoSdk/./lib/enums/AnsiColorEnum.js","webpack://vwoSdk/./lib/enums/LogMessageEnum.js","webpack://vwoSdk/./lib/utils/LogMessageUtil.js","webpack://vwoSdk/./lib/services/logging/ConsoleLogManager.js","webpack://vwoSdk/./lib/enums/StatusEnum.js","webpack://vwoSdk/./lib/core/SegmentEvaluator.js","webpack://vwoSdk/./lib/enums/segment/SegmentOperandTypesEnum.js","webpack://vwoSdk/./lib/enums/segment/SegmentOperatorTypesEnum.js","webpack://vwoSdk/./lib/enums/segment/SegmentOperandValueTypeRegexesEnum.js","webpack://vwoSdk/./lib/enums/segment/SegmentOperandValuesEnum.js","webpack://vwoSdk/./lib/utils/SegmentUtil.js","webpack://vwoSdk/./lib/enums/HooksEnum.js","webpack://vwoSdk/./node_modules/uuid/v5.js","webpack://vwoSdk/./node_modules/uuid/lib/v35.js","webpack://vwoSdk/./node_modules/uuid/lib/bytesToUuid.js","webpack://vwoSdk/./node_modules/uuid/lib/sha1-browser.js","webpack://vwoSdk/./lib/api/getVariation.js","webpack://vwoSdk/./lib/api/track.js","webpack://vwoSdk/./lib/api/isFeatureEnabled.js","webpack://vwoSdk/./lib/api/getFeatureVariableValue.js","webpack://vwoSdk/./lib/utils/FeatureUtil.js","webpack://vwoSdk/./lib/enums/FeatureVariableTypeEnum.js","webpack://vwoSdk/./lib/api/push.js","webpack://vwoSdk/./lib/services/EventQueue.js","webpack://vwoSdk/./lib/utils/EventDispatcherUtil.js","webpack://vwoSdk/./lib/utils/HttpImageUtil.js","webpack://vwoSdk/./lib/services/SettingsFileManager.js","webpack://vwoSdk/./lib/schemas/SettingsFileSchema.js","webpack://vwoSdk/./node_modules/superstruct/lib/index.es.js","webpack://vwoSdk/./lib/services/UsageStats.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","logging","require","INDEX","VWO","API","Activate","GetVariation","Track","IsFeatureEnabled","GetFeatureVariableValue","Push","SegmentEvaluator","BucketingService","VariationDecider","ConsoleLogManager","EventQueue","LoggingManager","SettingsFileManager","BatchEventsQueue","CampaignUtil","DataTypeUtil","EventDispatcher","EventDispatcherUtil","FeatureUtil","Functionutil","ImpressionUtil","UuidUtil","ValidateUtil","DecisionUtil","HttpHandlerUtil","HttpImageUtil","UsageStatsUtil","_toStringValue","val","toString","isNumber","isString","isObject","isFunction","isBoolean","isUndefined","isNull","isArray","packageFile","SDK_NAME","version","SDK_VERSION","PLATFORM","SEED_VALUE","MAX_TRAFFIC_PERCENT","MAX_TRAFFIC_VALUE","MAX_EVENTS_PER_REQUEST","DEFAULT_EVENTS_PER_REQUEST","DEFAULT_REQUEST_TIME_INTERVAL","STATUS_RUNNING","SEED_URL","HTTP_PROTOCOL","HTTPS_PROTOCOL","SDK_QUERY_PARAM","SDK_VERSION_QUERY_PARAM","DataTypeEnum","ApiEnum","GoalTypeEnum","APIMethodArgumentsValidationEnum","ACTIVATE","campaignKey","userId","customVariables","variationTargetingVariables","userStorageData","shouldTrackReturningUser","metaData","type","STRING","OBJECT","BOOLEAN","TRACK","goalIdentifier","goalTypeToTrack","ALL","STRING_NULL_UNDEFINED_ARRAY","IS_FEATURE_ENABLED","GET_FEATURE_VARIABLE_VALUE","variableKey","PUSH","tagKey","tagValue","customDimensionMap","GET_VARIATION_NAME","isValidValue","undefined","isValidString","isValidNumber","isValidFunction","isValidBoolean","isValidObject","areValidParamsForAPIMethod","argsObj","args","method","validators","length","argConfig","argValue","NUMBER","push","every","FunctionUtil","cloneObject","obj","JSON","parse","stringify","getRandomNumber","Math","random","getCurrentUnixTimestamp","ceil","Date","getCurrentUnixTimestampInMillis","matchWithRegex","string","regex","match","RegExp","err","FileNameEnum","logger","getLogger","LogLevelEnum","LogMessageEnum","LogMessageUtil","file","log","ERROR","build","ERROR_MESSAGES","REGEX_CREATION_FAILED","getCurrentTime","toISOString","convertObjectKeysToString","properties","excludedProperties","queryParams","prop","indexOf","objectValues","values","LAUNCH","Constants","CampaignTypeEnum","_getVariationBucketRange","variationWeight","startRange","min","getCampaignBasedOnId","settingsFile","campaignId","campaign","campaigns","parseInt","id","scaleVariationWeights","variations","totalWeight","reduce","acc","variation","weight","forEach","getCampaign","getCampaignsForKeys","campaignKeys","getCampaignsForGoal","goal","getCampaignGoal","NO_CAMPAIGN_FOUND","getCampaignStatus","status","toLowerCase","isCampaignRunning","validateCampaign","keys","setVariationAllocation","numberOfVariations","currentAllocation","assignRangeValues","INFO","INFO_MESSAGES","VARIATION_RANGE_ALLOCATION","variationName","start","startVariationAllocation","end","endVariationAllocation","setCampaignAllocation","stepFactor","desiredCampaignGoal","goals","identifier","getCampaignVariation","desiredVariation","getControlForCampaign","control","isFeatureTestCampaign","FEATURE_TEST","isFeatureRolloutCampaign","FEATURE_ROLLOUT","isAbCampaign","AB","isPartOfGroup","campaignGroups","groupId","groupName","groups","getGroupCampaigns","getBucketingSeed","isBucketingSeedEnabled","StatusEnum","HooksManager","HooksEnum","SegmentationTypeEnum","getVariation","config","isTrackUserAPI","newGoalIdentifier","api","vwoUserId","generateFor","accountId","decision","campaignType","campaignName","event","DECISION_TYPES","CAMPAIGN_DECISION","isForcedVariationEnabled","sdkVersion","source","assign","_vwoUserId","isUserListEnabled","whitelistedVariation","_checkForWhitelisting","storedVariation","_checkForUserStorage","_checkForPreSegmentation","isUserPartOfCampaign","campaignList","isWhitelistedOrStoredVariation","_checkForStorageAndWhitelisting","CALLED_CAMPAIGN_NOT_WINNER","inEligibleCampaignKeys","eligibleCampaignKeys","getEligbleCampaigns","eligibleCampaigns","inEligibleCampaigns","DEBUG","DEBUG_MESSAGES","GOT_ELIGIBLE_CAMPAIGNS","slice","inEligibleText","noOfEligibleCampaigns","noOfGroupCampaigns","evaluateTrafficAndGetVariation","_normalizeAndFindWinningCampaign","_evaluateWhitelisting","disableLogs","targetedVariations","segments","PASSED","FAILED","SEGMENTATION_STATUS","segmentationType","SEGMENTATION_SKIPPED","_getVariation","calculateBucketValue","variationId","_getStoredVariationAndGoalIdentifiers","userData","_getStoredUserData","GETTING_STORED_VARIATION","NO_STORED_VARIATION","_getStoredVariation","data","userStorageMap","userStorageService","NO_USER_STORAGE_SERVICE_GET","GETTING_DATA_USER_STORAGE_SERVICE","GET_USER_STORAGE_SERVICE_FAILED","_saveUserData","isSaved","NO_USER_STORAGE_SERVICE_SET","set","SETTING_DATA_USER_STORAGE_SERVICE","ex","SET_USER_STORAGE_SERVICE_FAILED","calledCampaign","otherCampaignWinner","some","groupCampaign","OTHER_CAMPAIGN_SATISFIES_WHITELISTING_STORAGE","getVariationAllotted","VARIATION_ALLOCATED","NO_VARIATION_ALLOCATED","execute","fromUserStorageService","isUserWhitelisted","isFeatureEnabled","variationString","whitelistingResult","WHITELISTING_SKIPPED","GOT_STORED_VARIATION","storedGoalIdentifier","isStoredVariation","CAMPAIGN_NOT_ACTIVATED","apiName","reason","shortlistedCampaigns","floor","winnerCampaign","GOT_WINNER_CAMPAIGN","REVENUE","CUSTOM","ObjectUtil","areObjectKeys","getKeyValue","map","UrlEnum","getBaseProperties","configObj","sId","u","getPrimaryProperties","getReportingProperties","account_id","ap","buildEventForPushing","url","BASE_URL","tags","encodeURIComponent","IMPRESSION_FOR_PUSH","_getStringifiedLogProperties","buildBatchEventForPushing","buildEventForTrackingUser","usageStats","experiment_id","combination","ed","TRACK_USER","IMPRESSION_FOR_TRACK_USER","buildBatchEventForTrackingUser","buildEventForTrackingGoal","revenue","goalId","TRACK_GOAL","IMPRESSION_FOR_TRACK_GOAL","buildBatchEventForTrackingGoal","sdkKey","getEventsBaseProperties","eventName","en","a","env","eTime","EVENTS","getEventBasePayload","uuid","props","sdkName","$visitor","vwo_fs_environment","msgId","visId","sessionId","time","visitor","getTrackUserPayloadData","isFirst","IMPRESSION_FOR_EVENT_ARCH_TRACK_USER","getTrackGoalPayloadData","metricMap","revenueValue","revenuePropList","metric","IMPRESSION_FOR_EVENT_ARCH_TRACK_GOAL","goalName","vwoMeta","size","revenueProp","isCustomEvent","getPushPayloadData","IMPRESSION_FOR_EVENT_ARCH_PUSH","logProperties","VWO_VARIATION_SHOWN","VWO_SYNC_VISITOR_PROP","Hasher","_generateBucketValue","hashValue","maxValue","multiplier","ratio","pow","multipliedValue","bucketValue","_getBucketValueForUser","seed","disableLog","v3","USER_HASH_BUCKET_VALUE","trafficAllocation","percentTraffic","valueAssignedToUser","isUserPart","USER_ELIGIBILITY_FOR_CAMPAIGN","bucketUserToVariation","INVALID_USER_ID","_generateHashValue","VARIATION_HASH_BUCKET_VALUE","AnsiColorEnum","NOTSET","WARN","LogLevelColorInfoEnum","BOLD","WHITE","RESET","LIGHTBLUE","CYAN","YELLOW","RED","LogLevelInfoEnum","LogNumberLevel","_0","_1","_2","_3","_4","SegmentEnum","SegmentOperandTypes","SegmentOperatorTypes","SegmentOperandValueTypeRegexes","SegmentOperandValues","init","callback","integrations","uuidv5","VWO_NAMESPACE","URL","hash","userIdNamespace","generate","desiredUuid","replace","toUpperCase","UUID_FOR_USER","namespace","SETTINGS_URL","WEBHOOK_SETTINGS_URL","BATCH_EVENTS","XhrUtil","_getStoredSettings","parsedSettings","isStoredData","getSettings","settings","info","console","error","warning","warn","send","payload","Promise","resolve","reject","xhr","XMLHttpRequest","xhrHandler","onload","xhrOnLoad","onerror","xhrOnError","open","parsedXhrResponse","response","setSettings","SettingsFileUtil","protocol","hostname","path","isViaWebhook","port","handleHttpRequest","res","statusCode","contentType","headers","rawData","test","message","resume","setEncoding","on","chunk","handleHttpResponse","parsedData","setLogHandler","setLogLevel","logError","Error","setLogger","getSettingsFile","launch","sdkConfig","isDevelopmentMode","includes","level","pollingInterval","POLLING_INTERVAL_INVALID","SDK_KEY_NOT_PROVIVED","SDK_KEY_NOT_STRING","batchEvents","EVENT_BATCHING_NOT_OBJECT","SDK_CONFIG_CORRUPTED","setLogColorMode","haveColoredLogs","CUSTOM_LOGGER_USED","CUSTOM_LOGGER_MISCONFIGURED","LOG_LEVEL_SET","SET_DEVELOPMENT_MODE","SettingsFileService","UsageStats","getVariationName","returnPromiseFor","optOut","settingsFileManager","isSettingsFileValid","VALID_CONFIGURATION","checkAndPoll","eventQueue","getConfig","collectUsageStats","processSettingsFile","SDK_INITIALIZED","INVALID_SETTINGS_FILE","options","self","activate","all","CONFIG_RETURN_PROMISE","API_NOT_ENABLED","responseCallback","_error","_response","apiResponse","campaignSpecifier","track","trackResponse","counter","filter","Boolean","isFeatureEnabledApiResponse","getFeatureVariableValue","arguments","PUSH_INVALID_PARAMS","OPT_OUT_API_CALLED","_destroyInstanceVariables","batchEventsQueue","flushEvents","then","getAndUpdateSettingsFile","EventEnum","vwoInstance","areParamsValid","ACTIVATE_API_MISSING_PARAMS","CAMPAIGN_NOT_RUNNING","INVALID_API","INVALID_VARIATION_KEY","USER_ALREADY_TRACKED","enqueue","isEventArchEnabled","getUsageStats","process","Bucketer","getVariationOfCampaignForUser","GOT_VARIATION_FOR_USER","USER_NOT_PART_OF_CAMPAIGN","USER_GOT_NO_VARIATION","MurmurHashV3","remainder","bytes","h1","h1b","c1","c2","k1","charCodeAt","murmur","v2","str","k","h","globalLogLevel","isColoredLogEnabled","globalLogHandler","LogManager","_customLog","getLogLevel","getLogColorMode","GREEN","GOT_FROM_CACHE","RESET_CACHE","SET_IN_CACHE","SETTINGS_FILE_PROCESSED","USER_NOT_PART_OF_Campaign","STARTED_POLLING","BATCH_EVENT_LIMIT_EXCEEDED","BULK_NOT_PROCESSED","BEFORE_FLUSHING","FLUSH_EVENTS","API_HAS_CORRUPTED_SETTINGS_FILE","GET_FEATURE_VARIABLE_MISSING_PARAMS","GET_VARIATION_API_MISSING_PARAMS","IMPRESSION_FAILED","IS_FEATURE_ENABLED_API_MISSING_PARAMS","PUSH_INVALID_PARAMS_CD_MAP","SEGMENTATION_ERROR","SETTINGS_FILE_CORRUPTED","TAG_KEY_LENGTH_EXCEEDED","TAG_VALUE_LENGTH_EXCEEDED","TRACK_API_GOAL_NOT_FOUND","TRACK_API_MISSING_PARAMS","TRACK_API_REVENUE_NOT_PASSED_FOR_REVENUE_GOAL","UNABLE_TO_CAST_VALUE","VARIABLE_NOT_FOUND","POLLING_FAILED","NO_BATCH_QUEUE","FEATURE_ENABLED_FOR_USER","FEATURE_NOT_ENABLED_FOR_USER","IMPRESSION_SUCCESS","IMPRESSION_SUCCESS_FOR_EVENT_ARCH","USER_RECEIVED_VARIABLE_VALUE","VARIABLE_NOT_USED_RETURN_DEFAULT_VARIABLE_VALUE","GOAL_ALREADY_TRACKED","POLLING_SUCCESS","SETTINGS_FILE_UPDATED","BULK_IMPRESSION_SUCCESS","AFTER_FLUSHING","SETTINGS_NOT_UPDATED","DEV_MODE_ON","WARNING_MESSAGES","nargs","template","index","result","logLevel","prefix","logMessage","shouldLog","consoleLog","targetLogLevel","logArguments","apply","operandCustomVariablesParser","operandUserParser","AND","OR","NOT","CUSTOM_VARIABLE","USER","dsl","evaluator","operator","subDsl","list","LOWER","LOWER_MATCH","WILDCARD","WILDCARD_MATCH","REGEX","REGEX_MATCH","STARTING_STAR","ENDING_STAR","LOWER_VALUE","STARTING_ENDING_STAR_VALUE","STARTING_STAR_VALUE","ENDING_STAR_VALUE","REGEX_VALUE","EQUAL_VALUE","extractOperandValue","operand","processValues","operandValue","processedOperandValue","parseFloat","processedTagValue","preProcessTagValue","preProcessOperandValue","operandType","startingStar","endingStar","operandKey","processedValues","endsWith","startsWith","pattern","extractResult","users","split","trim","v35","sha1","bytesToUuid","hashfunc","generateUUID","buf","offset","off","unescape","Array","stringToBytes","hex","uuidToBytes","TypeError","concat","idx","DNS","byteToHex","substr","bth","join","f","x","y","z","ROTL","K","H","msg","N","M","j","W","b","e","T","GOAL_TYPE_TO_TRACK_DEFAULT","GOAL_IDENTIFIER_SEPERATOR","Set","add","trackCampaignGoal","variable","getVariableForFeature","getVariableValueForVariation","variableValue","getTypeCastVariableValue","FeatureVariableTypeEnum","variableData","variables","variationVariable","variableType","typeCastedValue","INTEGER","isNaN","DOUBLE","success","running","queue","dispatchPostCall","dispatchGetCall","executeNext","shift","parsedUrl","sendCall","successCallback","endPoint","handleGetResponse","baseParams","params","mainKeys","handlePostResponse","noop","printLog","URLSearchParams","host","pathname","errorCallback","isCallbackCalled","img","Image","handleGetCall","src","validateSettingsFile","_configObj","_clonedSettingsFile","lastSettingsFile","setInterval","latestSettingsFile","stringifiedLatestSettingsFile","updateSettingsFile","_e","_setVariationBucketing","_reject","_err","validate","number","boolean","array","optional","union","record","campaignGoalSchema","variableObjectSchema","campaignVariationSchema","changes","campaignObjectSchema","groupSchema","settingsFileSchema","_defineProperty","configurable","writable","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectSpread2","target","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","toFailures","context","fail","iteratorShift","input","done","next","func","Struct","schema","coercer","validator","refiner","StructError","failure","moreFailures","branch","rest","failuresResult","super","failures","stack","__proto__","assert","struct","coerce","ret","is","coercing","check","ctx","v","parent","coercion","fn","defaulted","S","fallback","strict","isPlainObject","changed","masked","getPrototypeOf","empty","refinement","max","regexp","any","Element","entries","date","getTime","dynamic","enums","toLiteralString","instance","Class","intersection","Structs","lazy","literal","constant","Key","Value","Map","never","nullable","knowns","Never","createObjectCoercer","unknowns","delete","partial","tuple","Elements","Number"],"mappings":"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","file":"vwo-javascript-sdk.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\t// CommonJS2\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\t// AMD\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\t// CommonJS\n\telse if(typeof exports === 'object')\n\t\texports[\"vwoSdk\"] = factory();\n\t// Root\n\telse\n\t\troot[\"vwoSdk\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 22);\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst logging = require('./LoggingManager');\n\nmodule.exports = logging;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst LIB_PATH = 'lib';\nconst CORE_PATH = 'lib/core';\nconst UTIL_PATH = 'lib/util';\nconst SERVICES_PATH = 'lib/services';\n\nmodule.exports = {\n  INDEX: `${LIB_PATH}/index`,\n\n  VWO: `${LIB_PATH}/VWO`,\n\n  API: `${LIB_PATH}/api/index`,\n\n  Activate: `${LIB_PATH}/api/activate`,\n  GetVariation: `${LIB_PATH}/api/getVariation`,\n  Track: `${LIB_PATH}/api/track`,\n  IsFeatureEnabled: `${LIB_PATH}/api/isFeatureEnabled`,\n  GetFeatureVariableValue: `${LIB_PATH}/api/getFeatureVariableValue`,\n  Push: `${LIB_PATH}/api/push`,\n\n  SegmentEvaluator: `${CORE_PATH}/SegmentEvaluator`,\n  BucketingService: `${CORE_PATH}/BucketingService`,\n  VariationDecider: `${CORE_PATH}/VariationDecider`,\n\n  ConsoleLogManager: `${SERVICES_PATH}/ConsoleLogManager`,\n  EventQueue: `${SERVICES_PATH}/EventQueue`,\n  LoggingManager: `${SERVICES_PATH}/LoggingManager`,\n  SettingsFileManager: `${SERVICES_PATH}/SettingsFileManager`,\n  BatchEventsQueue: `${SERVICES_PATH}/BatchEventsQueue`,\n\n  CampaignUtil: `${UTIL_PATH}/CampaignUtil`,\n  DataTypeUtil: `${UTIL_PATH}/DataTypeUtil`,\n  EventDispatcher: `${UTIL_PATH}/EventDispatcher`,\n  EventDispatcherUtil: `${UTIL_PATH}/EventDispatcherUtil`,\n  FeatureUtil: `${UTIL_PATH}/FeatureUtil`,\n  Functionutil: `${UTIL_PATH}/Functionutil`,\n  ImpressionUtil: `${UTIL_PATH}/ImpressionUtil`,\n  UuidUtil: `${UTIL_PATH}/UuidUtil`,\n  ValidateUtil: `${UTIL_PATH}/ValidateUtil`,\n  DecisionUtil: `${UTIL_PATH}/DecisionUtils`,\n  HttpHandlerUtil: `${UTIL_PATH}/HttpHandlerUtil`,\n  HttpImageUtil: `${UTIL_PATH}/HttpImageUtil`,\n\n  UsageStatsUtil: `${SERVICES_PATH}/UsageStats`\n};\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DataTypeUtil = {\n  _toStringValue: function(val) {\n    return Object.prototype.toString.call(val);\n  },\n  isNumber: function(val) {\n    return DataTypeUtil._toStringValue(val) === '[object Number]';\n  },\n  isString: function(val) {\n    return DataTypeUtil._toStringValue(val) === '[object String]';\n  },\n  isObject: function(val) {\n    return DataTypeUtil._toStringValue(val) === '[object Object]';\n  },\n  isFunction: function(val) {\n    return DataTypeUtil._toStringValue(val) === '[object Function]';\n  },\n  isBoolean: function(val) {\n    return DataTypeUtil._toStringValue(val) === '[object Boolean]';\n  },\n  isUndefined: function(val) {\n    return DataTypeUtil._toStringValue(val) === '[object Undefined]';\n  },\n  isNull: function(val) {\n    return DataTypeUtil._toStringValue(val) === '[object Null]';\n  },\n  isArray: function(val) {\n    return DataTypeUtil._toStringValue(val) === '[object Array]';\n  }\n};\n\nmodule.exports = DataTypeUtil;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* global SDK_NAME, SDK_VERSION */\n\nlet packageFile = {};\n\n// For javascript-sdk, to keep the build size low\n// avoid adding the whole package file in the file\nif (typeof process.env === 'undefined') {\n  packageFile = {\n    name: SDK_NAME,\n    version: SDK_VERSION\n  };\n} else {\n  packageFile = require('../../package.json');\n}\n\nmodule.exports = {\n  SDK_NAME: packageFile.name,\n  SDK_VERSION: packageFile.version,\n\n  PLATFORM: 'server',\n\n  SEED_VALUE: 1,\n\n  MAX_TRAFFIC_PERCENT: 100,\n  MAX_TRAFFIC_VALUE: 10000,\n  MAX_EVENTS_PER_REQUEST: 5000,\n\n  DEFAULT_EVENTS_PER_REQUEST: 100,\n  DEFAULT_REQUEST_TIME_INTERVAL: 600, // 10 * 60(secs) = 600 secs i.e. 10 minutes\n\n  STATUS_RUNNING: 'RUNNING',\n\n  SEED_URL: 'https://vwo.com',\n\n  HTTP_PROTOCOL: 'http://',\n  HTTPS_PROTOCOL: 'https://',\n\n  SDK_QUERY_PARAM: 'sdk',\n  SDK_VERSION_QUERY_PARAM: 'sdk-v'\n};\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DataTypeUtil = require('./DataTypeUtil');\nconst DataTypeEnum = require('../enums/DataTypeEnum');\nconst ApiEnum = require('../enums/ApiEnum');\nconst GoalTypeEnum = require('../enums/GoalTypeEnum');\n\nconst APIMethodArgumentsValidationEnum = {\n  [ApiEnum.ACTIVATE]: function({\n    campaignKey,\n    userId,\n    customVariables = {},\n    variationTargetingVariables = {},\n    userStorageData = {},\n    shouldTrackReturningUser = false,\n    metaData = {}\n  }) {\n    return [\n      {\n        key: 'campaignKey',\n        value: campaignKey,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'userId',\n        value: userId,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'customVariables',\n        value: customVariables,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'variationTargetingVariables',\n        value: variationTargetingVariables,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'userStorageData',\n        value: userStorageData,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'shouldTrackReturningUser',\n        value: shouldTrackReturningUser,\n        type: DataTypeEnum.BOOLEAN\n      },\n      {\n        key: 'metaData',\n        value: metaData,\n        type: DataTypeEnum.OBJECT\n      }\n    ];\n  },\n  [ApiEnum.TRACK]: function({\n    campaignKey,\n    userId,\n    goalIdentifier,\n    customVariables = {},\n    variationTargetingVariables = {},\n    userStorageData = {},\n    goalTypeToTrack = GoalTypeEnum.ALL,\n    shouldTrackReturningUser = false,\n    metaData = {}\n  }) {\n    return [\n      {\n        key: 'campaignKey',\n        value: campaignKey,\n        type: DataTypeEnum.STRING_NULL_UNDEFINED_ARRAY\n      },\n      {\n        key: 'userId',\n        value: userId,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'goalIdentifier',\n        value: goalIdentifier,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'customVariables',\n        value: customVariables,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'variationTargetingVariables',\n        value: variationTargetingVariables,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'userStorageData',\n        value: userStorageData,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'goalTypeToTrack',\n        value: goalTypeToTrack,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'shouldTrackReturningUser',\n        value: shouldTrackReturningUser,\n        type: DataTypeEnum.BOOLEAN\n      },\n      {\n        key: 'metaData',\n        value: metaData,\n        type: DataTypeEnum.OBJECT\n      }\n    ];\n  },\n  [ApiEnum.IS_FEATURE_ENABLED]: function({\n    campaignKey,\n    userId,\n    customVariables = {},\n    variationTargetingVariables = {},\n    userStorageData = {},\n    shouldTrackReturningUser = false,\n    metaData = {}\n  }) {\n    return [\n      {\n        key: 'campaignKey',\n        value: campaignKey,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'userId',\n        value: userId,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'customVariables',\n        value: customVariables,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'variationTargetingVariables',\n        value: variationTargetingVariables,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'userStorageData',\n        value: userStorageData,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'shouldTrackReturningUser',\n        value: shouldTrackReturningUser,\n        type: DataTypeEnum.BOOLEAN\n      },\n      {\n        key: 'metaData',\n        value: metaData,\n        type: DataTypeEnum.OBJECT\n      }\n    ];\n  },\n  [ApiEnum.GET_FEATURE_VARIABLE_VALUE]: function({\n    campaignKey,\n    variableKey,\n    userId,\n    customVariables = {},\n    variationTargetingVariables = {},\n    userStorageData = {},\n    metaData = {}\n  }) {\n    return [\n      {\n        key: 'campaignKey',\n        value: campaignKey,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'variableKey',\n        value: variableKey,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'userId',\n        value: userId,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'customVariables',\n        value: customVariables,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'variationTargetingVariables',\n        value: variationTargetingVariables,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'userStorageData',\n        value: userStorageData,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'metaData',\n        value: metaData,\n        type: DataTypeEnum.OBJECT\n      }\n    ];\n  },\n  [ApiEnum.PUSH]: function({ tagKey, tagValue, userId, customDimensionMap }) {\n    return [\n      {\n        key: 'tagKey',\n        value: tagKey,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'tagValue',\n        value: tagValue,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'userId',\n        value: userId,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'customDimensionMap',\n        value: customDimensionMap,\n        type: DataTypeEnum.OBJECT\n      }\n    ];\n  }\n};\n// both have same\nAPIMethodArgumentsValidationEnum[ApiEnum.GET_VARIATION_NAME] = APIMethodArgumentsValidationEnum[ApiEnum.ACTIVATE];\n\nconst ValidateUtil = {\n  isValidValue: function(value) {\n    return !!(value !== undefined && value);\n  },\n  isValidString: function(value) {\n    return ValidateUtil.isValidValue(value) && DataTypeUtil.isString(value);\n  },\n  isValidNumber: function(value) {\n    return ValidateUtil.isValidValue(value) && DataTypeUtil.isNumber(value);\n  },\n  isValidFunction: function(value) {\n    return ValidateUtil.isValidValue(value) && DataTypeUtil.isFunction(value);\n  },\n  isValidBoolean: function(value) {\n    return value !== undefined && DataTypeUtil.isBoolean(value);\n  },\n  isValidObject: function(value) {\n    return value !== undefined && DataTypeUtil.isObject(value);\n  },\n  areValidParamsForAPIMethod: argsObj => {\n    let isValid = false;\n    let args = APIMethodArgumentsValidationEnum[argsObj.method](argsObj);\n\n    let validators = [];\n\n    for (let i = 0; i < args.length; i++) {\n      let argConfig = args[i];\n      let argValue = argConfig.value;\n      let dataType = argConfig.type;\n      // let value;\n\n      switch (dataType) {\n        case DataTypeEnum.NUMBER:\n          validators.push(ValidateUtil.isValidNumber(argValue));\n          break;\n        case DataTypeEnum.STRING:\n          validators.push(ValidateUtil.isValidString(argValue));\n          break;\n        case DataTypeEnum.BOOLEAN:\n          validators.push(ValidateUtil.isValidBoolean(argValue));\n          break;\n        // case DataTypeEnum.FUNCTION:\n        //   validators.push(ValidateUtil.isValidFunction(argValue));\n        //   break;\n        case DataTypeEnum.OBJECT:\n          validators.push(ValidateUtil.isValidObject(argValue));\n          break;\n        case DataTypeEnum.STRING_NULL_UNDEFINED_ARRAY:\n          let value =\n            ValidateUtil.isValidString(argValue) ||\n            DataTypeUtil.isUndefined(argValue) ||\n            DataTypeUtil.isNull(argValue) ||\n            DataTypeUtil.isArray(argValue);\n          validators.push(value);\n          break;\n        // case DataTypeEnum.NUMBER_STRING:\n        //   value = ValidateUtil.isValidNumber(argValue) || ValidateUtil.isValidString(argValue);\n        //   validators.push(value);\n        //   break;\n      }\n    }\n\n    isValid = validators.every(val => val);\n\n    return isValid;\n  }\n};\n\nmodule.exports = ValidateUtil;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst FunctionUtil = {\n  cloneObject: obj => {\n    if (!obj) {\n      return obj;\n    }\n\n    let clonedObj = JSON.parse(JSON.stringify(obj));\n\n    return clonedObj;\n  },\n  getRandomNumber: () => {\n    return Math.random();\n  },\n  getCurrentUnixTimestamp: () => {\n    return Math.ceil(+new Date() / 1000);\n  },\n  getCurrentUnixTimestampInMillis: () => {\n    return +new Date();\n  },\n  matchWithRegex: (string, regex) => {\n    try {\n      return string.match(new RegExp(regex));\n    } catch (err) {\n      const logging = require('../services/logging');\n      const FileNameEnum = require('../enums/FileNameEnum');\n\n      const logger = logging.getLogger();\n      const { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\n      const file = FileNameEnum.FunctionUtil;\n\n      logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.REGEX_CREATION_FAILED, {\n          file\n        })\n      );\n      return null;\n    }\n  },\n  getCurrentTime() {\n    return new Date().toISOString();\n  },\n  convertObjectKeysToString(properties, excludedProperties) {\n    let queryParams = '';\n    excludedProperties = excludedProperties || [];\n\n    for (let prop in properties) {\n      if (properties.hasOwnProperty(prop)) {\n        if (excludedProperties.indexOf(prop) === -1) {\n          queryParams += prop + '=' + properties[prop] + '&';\n        }\n      }\n    }\n\n    return queryParams;\n  },\n  objectValues(obj) {\n    let values = [];\n\n    for (const prop in obj) {\n      values.push(obj[prop]);\n    }\n    return values;\n  }\n};\n\nmodule.exports = FunctionUtil;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst ApiEnum = {\n  LAUNCH: 'launch',\n  ACTIVATE: 'activate',\n  GET_VARIATION_NAME: 'getVariation',\n  TRACK: 'track',\n  IS_FEATURE_ENABLED: 'isFeatureEnabled',\n  GET_FEATURE_VARIABLE_VALUE: 'getFeatureVariableValue',\n  PUSH: 'push'\n};\n\nmodule.exports = ApiEnum;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst ValidateUtil = require('./ValidateUtil');\nconst Constants = require('../constants');\n\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst GoalTypeEnum = require('../enums/GoalTypeEnum');\nconst CampaignTypeEnum = require('../enums/CampaignTypeEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\nconst logger = logging.getLogger();\n\nlet CampaignUtil = {\n  /**\n   * Returns the bucket size of variation.\n   *\n   * @param {Number/Float} - weight of variation\n   *\n   * @return {Number} bucket start range of Variation\n   */\n  _getVariationBucketRange: variationWeight => {\n    if (!variationWeight || variationWeight === 0) {\n      return 0;\n    }\n\n    const startRange = Math.ceil(variationWeight * 100);\n\n    return Math.min(startRange, Constants.MAX_TRAFFIC_VALUE);\n  },\n\n  /**\n   * Get the campaign on the basis of campaign id\n   *\n   * @param {Object} settingsFile\n   * @param {Number} campaignId\n   *\n   * @returns {Object} campaign object\n   */\n  getCampaignBasedOnId: (settingsFile, campaignId) => {\n    let campaign;\n\n    for (let i = 0; i < settingsFile.campaigns.length; i++) {\n      if (parseInt(settingsFile.campaigns[i].id, 10) === parseInt(campaignId, 10)) {\n        campaign = settingsFile.campaigns[i];\n\n        break;\n      }\n    }\n\n    return campaign;\n  },\n  /**\n   * It extracts the weights from all the variations inside the campaign\n      and scales them so that the total sum of eligible variations' weights become 100%\n\n      1. variations\n   */\n  scaleVariationWeights: variations => {\n    const totalWeight = variations.reduce((acc, variation) => {\n      return acc + variation.weight;\n    }, 0);\n    if (!totalWeight) {\n      const weight = 100 / variations.length;\n      variations.forEach(variation => (variation.weight = weight));\n    } else {\n      variations.forEach(variation => (variation.weight = (variation.weight / totalWeight) * 100));\n    }\n  },\n\n  getCampaign: (settingsFile, campaignKey) => {\n    let campaign;\n\n    for (let i = 0; i < settingsFile.campaigns.length; i++) {\n      if (settingsFile.campaigns[i].key === campaignKey) {\n        campaign = settingsFile.campaigns[i];\n\n        break;\n      }\n    }\n\n    return campaign;\n  },\n  /**\n   * Gets campaigns for corresponding campaignKeys\n   *\n   * @param {Object} settingsFile\n   * @param {Array} campaignKeys\n   *\n   * @return {Array} Campaigns\n   */\n  getCampaignsForKeys: (settingsFile, campaignKeys) => {\n    const campaigns = [];\n    campaignKeys.forEach(key => {\n      let campaign = CampaignUtil.getCampaign(settingsFile, key);\n      if (campaign) {\n        campaigns.push(campaign);\n      } else {\n        campaigns.push({\n          key\n        });\n      }\n    });\n    return campaigns;\n  },\n  /**\n   * Gets campaigns which have the goalIdentifier present\n   *\n   * @param {settingsFile}\n   * @param {String} goalIdentifier\n   * @param {String} goalTypeToTrack type of goal to track\n   *\n   * @return {Array} Campaigns\n   */\n  getCampaignsForGoal: (settingsFile, goalIdentifier, goalTypeToTrack) => {\n    let campaigns = [];\n    settingsFile.campaigns.forEach(campaign => {\n      const goal = CampaignUtil.getCampaignGoal(settingsFile, campaign.key, goalIdentifier);\n      if (goal && (goalTypeToTrack === GoalTypeEnum.ALL || goal.type === goalTypeToTrack)) {\n        campaigns.push(campaign);\n      }\n    });\n    if (!campaigns.length) {\n      logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.NO_CAMPAIGN_FOUND, {\n          file: FileNameEnum.CampaignUtil,\n          goalIdentifier\n        })\n      );\n    }\n    return campaigns;\n  },\n  getCampaignStatus: (settingsFile, campaignKey) => {\n    let campaign = CampaignUtil.getCampaign(settingsFile, campaignKey);\n\n    if (!campaign || !campaign.status) {\n      // log error\n      return '';\n    }\n\n    return campaign.status.toLowerCase();\n  },\n\n  isCampaignRunning: (settingsFile, campaignKey) => {\n    return CampaignUtil.getCampaignStatus(settingsFile, campaignKey) === 'running';\n  },\n  /**\n   * Validates the campaign\n   *\n   * @param {Campaign} campaign the campaign to be validated\n   *\n   * @return {Boolean} true is campaign is valid\n   */\n  validateCampaign: campaign => {\n    return ValidateUtil.isValidValue(campaign) && campaign.variations && Object.keys(campaign.variations).length > 0;\n  },\n\n  /**\n   * Assigns the buckets to the Variations of the campaign\n   * depending on the traffic allocation\n   *\n   * @param {Campaign} campaign whose Variations are to be allocated\n   */\n  setVariationAllocation: campaign => {\n    const numberOfVariations = campaign.variations.length;\n    let stepFactor = 0;\n\n    for (let i = 0, currentAllocation = 0; i < numberOfVariations; i++) {\n      let variation = campaign.variations[i];\n\n      stepFactor = CampaignUtil.assignRangeValues(variation, currentAllocation);\n      currentAllocation += stepFactor;\n\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.VARIATION_RANGE_ALLOCATION, {\n          file: FileNameEnum.CampaignUtil,\n          campaignKey: campaign.key,\n          variationName: variation.name,\n          variationWeight: variation.weight,\n          start: variation.startVariationAllocation,\n          end: variation.endVariationAllocation\n        })\n      );\n    }\n  },\n\n  /**\n   * Assign range allocation to the campaigns in the list to decide which campaign to choose out of the Mutually Exclusive group\n   *\n   * @param {Array} campaigns\n   */\n  setCampaignAllocation: campaigns => {\n    let stepFactor = 0;\n\n    for (let i = 0, currentAllocation = 0; i < campaigns.length; i++) {\n      let campaign = campaigns[i];\n\n      stepFactor = CampaignUtil.assignRangeValues(campaign, currentAllocation);\n      currentAllocation += stepFactor;\n    }\n  },\n\n  assignRangeValues: (variation, currentAllocation) => {\n    let stepFactor;\n    stepFactor = CampaignUtil._getVariationBucketRange(variation.weight);\n\n    if (stepFactor) {\n      variation.startVariationAllocation = currentAllocation + 1;\n      variation.endVariationAllocation = currentAllocation + stepFactor;\n    } else {\n      variation.startVariationAllocation = -1;\n      variation.endVariationAllocation = -1;\n    }\n    return stepFactor;\n  },\n  getCampaignGoal: (settingsFile, campaignKey, goalIdentifier) => {\n    let desiredCampaignGoal = null;\n\n    if (!settingsFile || !campaignKey || !goalIdentifier) {\n      return desiredCampaignGoal;\n    }\n\n    let campaign = CampaignUtil.getCampaign(settingsFile, campaignKey);\n\n    if (!campaign) {\n      return desiredCampaignGoal;\n    }\n\n    for (let i = 0; i < campaign.goals.length; i++) {\n      let goal = campaign.goals[i];\n\n      if (goal.identifier === goalIdentifier) {\n        desiredCampaignGoal = goal;\n        break;\n      }\n    }\n\n    return desiredCampaignGoal;\n  },\n  getCampaignVariation: (settingsFile, campaignKey, variationName) => {\n    let desiredVariation = null;\n\n    if (!settingsFile || !campaignKey || !variationName) {\n      return desiredVariation;\n    }\n\n    let campaign = CampaignUtil.getCampaign(settingsFile, campaignKey);\n\n    if (!campaign) {\n      return desiredVariation;\n    }\n\n    for (let i = 0; i < campaign.variations.length; i++) {\n      let variation = campaign.variations[i];\n\n      if (variation.name === variationName) {\n        desiredVariation = variation;\n\n        break;\n      }\n    }\n\n    return desiredVariation;\n  },\n  getControlForCampaign: campaign => {\n    let control = {};\n\n    if (!campaign || !campaign.variations) {\n      return control;\n    }\n\n    for (let i = 0; i < campaign.variations.length; i++) {\n      if (campaign.variations[i].id === 1) {\n        control = campaign.variations[i];\n        break;\n      }\n    }\n\n    return control;\n  },\n  isFeatureTestCampaign: campaign => {\n    if (campaign && campaign.type === CampaignTypeEnum.FEATURE_TEST) {\n      return true;\n    }\n\n    return false;\n  },\n  isFeatureRolloutCampaign: campaign => {\n    if (campaign && campaign.type === CampaignTypeEnum.FEATURE_ROLLOUT) {\n      return true;\n    }\n\n    return false;\n  },\n  isAbCampaign: campaign => {\n    if (campaign && campaign.type === CampaignTypeEnum.AB) {\n      return true;\n    }\n\n    return false;\n  },\n\n  /**\n   * Check if the campaign is a part of mutually exclusive group\n   *\n   * @param {Object} settingsFile\n   * @param {Number} campaignId\n   *\n   * @returns {Number} group id of the campaign.\n   */\n  isPartOfGroup: (settingsFile, campaignId) => {\n    if (settingsFile.campaignGroups && Object.prototype.hasOwnProperty.call(settingsFile.campaignGroups, campaignId)) {\n      return {\n        groupId: settingsFile.campaignGroups[campaignId],\n        groupName: settingsFile.groups[settingsFile.campaignGroups[campaignId]].name\n      };\n    }\n    return {};\n  },\n\n  /**\n   * Get the list of campaigns on the basis of their id\n   *\n   * @param {Object} settingsFile\n   * @param {Number} groupId\n   *\n   * @returns {Array} list of campaigns\n   */\n  getGroupCampaigns: (settingsFile, groupId) => {\n    const campaigns = [];\n    if (Object.prototype.hasOwnProperty.call(settingsFile.groups, groupId)) {\n      settingsFile.groups[groupId].campaigns.forEach(campaignId => {\n        let campaign = CampaignUtil.getCampaignBasedOnId(settingsFile, campaignId);\n        if (campaign) {\n          campaigns.push(campaign);\n        }\n      });\n    }\n    return campaigns;\n  },\n\n  /**\n   * Decide the Seed for murmurhash to bucket user.\n   * @param {string} userId\n   * @param {object} campaign\n   * @param {number} groupId\n   *\n   * @returns {string} Seed value\n   */\n  getBucketingSeed: (userId, campaign, groupId) => {\n    if (groupId) {\n      return `${groupId}_${userId}`;\n    }\n\n    if (campaign && campaign.isBucketingSeedEnabled) {\n      return `${campaign.id}_${userId}`;\n    } else {\n      return userId;\n    }\n  }\n};\n\nmodule.exports = CampaignUtil;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst VariationDecider = require('../core/VariationDecider');\nconst BucketingService = require('../core/BucketingService');\n\nconst CampaignUtil = require('./CampaignUtil');\nconst DataTypeUtil = require('./DataTypeUtil');\nconst FunctionUtil = require('./FunctionUtil');\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst StatusEnum = require('../enums/StatusEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\nconst logger = logging.getLogger();\nconst SegmentEvaluator = require('../core/SegmentEvaluator');\nconst HooksManager = require('../services/HooksManager');\nconst HooksEnum = require('../enums/HooksEnum');\nconst UuidUtil = require('./UuidUtil');\nconst Constants = require('../constants');\nconst CampaignTypeEnum = require('../enums/CampaignTypeEnum');\nconst ApiEnum = require('../enums/ApiEnum');\n\nconst file = FileNameEnum.DecisionUtil;\n\nconst SegmentationTypeEnum = {\n  WHITELISTING: 'whitelisting',\n  PRE_SEGMENTATION: 'pre-segmentation'\n};\n\nlet DecisionUtil = {\n  // PUBLIC METHODS\n  /**\n   *  1. Checks if there is a variation stored in userStorage, returns it\n   *  2. If Whitelisting is applicable, evaluate it, if any eligible variation is found, store it in User Storage service and return, otherwise skip it.\n   *  3. Check if the campaign is part of mutually exclusive group, if yes, get the winner campaign using campaign traffic normalization.\n   *  4. If Pre-segmentation is applied and passes then go further otherwise return early and no further processing\n   *  5. If no user storage value, no whitelisted variation and pre-segmentation evaluates to true, get variation using hashing logic if campaign traffic passes for that userId\n   *\n   *\n   *  @param {Object} config\n   *  @param {Object} settingsFile\n   *  @param {Object} campaign\n   *  @param {Object} campaignKey\n   *  @param {String} userId\n   *  @param {Object} customVariables\n   *  @param {Object} variationTargetingVariables\n   *\n   *  @return {Object|null} - Object if a variation is assigned, otherwise null\n   */\n  getVariation: (\n    config,\n    settingsFile,\n    campaign,\n    campaignKey,\n    userId,\n    customVariables,\n    variationTargetingVariables = {},\n    userStorageData = {},\n    metaData,\n    isTrackUserAPI,\n    newGoalIdentifier,\n    api = ''\n  ) => {\n    let vwoUserId = UuidUtil.generateFor(userId, settingsFile.accountId);\n    let decision = {\n      // campaign info\n      campaignId: campaign.id,\n      campaignKey,\n      campaignType: campaign.type,\n      campaignName: campaign.name,\n      // campaign segmentation conditions\n      customVariables,\n      // event name\n      event: HooksEnum.DECISION_TYPES.CAMPAIGN_DECISION,\n      // goal tracked in case of track API\n      goalIdentifier: newGoalIdentifier,\n      // campaign whitelisting flag\n      isForcedVariationEnabled: campaign.isForcedVariationEnabled,\n      sdkVersion: Constants.SDK_VERSION,\n      // API name which triggered the event\n      source: api,\n      // Passed in API\n      userId,\n      // Campaign Whitelisting conditions\n      variationTargetingVariables,\n      // VWO generated UUID based on passed UserId and Account ID\n      vwoUserId\n    };\n\n    // check if the campaign is a part of group\n    const { groupId, groupName } = CampaignUtil.isPartOfGroup(settingsFile, campaign.id);\n\n    if (groupId) {\n      // append groupId and groupName, if campaign is a part of group\n      decision['groupId'] = groupId;\n      decision['groupName'] = groupName;\n    }\n\n    variationTargetingVariables = Object.assign({}, variationTargetingVariables, {\n      _vwoUserId: campaign.isUserListEnabled ? vwoUserId : userId\n    });\n\n    // check if tbe campaign satisfies the whitelisting before checking for the group\n    const whitelistedVariation = DecisionUtil._checkForWhitelisting(\n      campaign,\n      campaignKey,\n      userId,\n      variationTargetingVariables,\n      decision\n    );\n    if (whitelistedVariation) {\n      return whitelistedVariation;\n    }\n\n    // check if the campaign is present in the storage before checking for the group\n    const storedVariation = DecisionUtil._checkForUserStorage(\n      config,\n      settingsFile,\n      campaign,\n      campaignKey,\n      userId,\n      userStorageData,\n      isTrackUserAPI,\n      decision\n    );\n    if (storedVariation) {\n      return storedVariation;\n    }\n\n    // check if the called campaign satisfies the pre-segmentatin before further proccessing.\n    if (\n      !(\n        DecisionUtil._checkForPreSegmentation(campaign, campaignKey, userId, customVariables, decision) &&\n        BucketingService.isUserPartOfCampaign(userId, campaign, true)\n      )\n    ) {\n      return {};\n    }\n\n    if (groupId) {\n      // mutually exclusive group exists\n\n      // get the list of the all the campaigns in a group\n      const campaignList = CampaignUtil.getGroupCampaigns(settingsFile, groupId);\n\n      if (campaignList.length === 0) {\n        // return if no campaigns are active in a group\n        return {};\n      }\n\n      // checking other campaigns for whitelisting and user storage.\n      let isWhitelistedOrStoredVariation = DecisionUtil._checkForStorageAndWhitelisting(\n        config,\n        settingsFile,\n        groupName,\n        campaignList,\n        campaign,\n        userId,\n        userStorageData,\n        variationTargetingVariables,\n        isTrackUserAPI\n      );\n\n      if (isWhitelistedOrStoredVariation) {\n        // other campaigns satisfy the whitelisting or storage, therfore returning\n        logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CALLED_CAMPAIGN_NOT_WINNER, {\n            userId,\n            groupName,\n            file,\n            campaignKey: campaignKey\n          })\n        );\n        return {};\n      }\n\n      // none of the group campaigns satisfy whitelisting or user storage\n      // check each campaign for pre-segmentation and traffic allocation.\n      let inEligibleCampaignKeys = '';\n      let eligibleCampaignKeys = '';\n      const { eligibleCampaigns, inEligibleCampaigns } = DecisionUtil.getEligbleCampaigns(\n        campaignList,\n        userId,\n        customVariables\n      );\n\n      inEligibleCampaigns.forEach(campaign => {\n        inEligibleCampaignKeys = inEligibleCampaignKeys + campaign.key + ',';\n      });\n      eligibleCampaigns.forEach(campaign => {\n        eligibleCampaignKeys = eligibleCampaignKeys + campaign.key + ',';\n      });\n\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.GOT_ELIGIBLE_CAMPAIGNS, {\n          userId,\n          groupName,\n          file,\n          eligibleCampaignKeys: eligibleCampaignKeys.slice(0, -1),\n          inEligibleText:\n            inEligibleCampaignKeys === '' ? 'no campaigns' : `campaigns: ${inEligibleCampaignKeys.slice(0, -1)}`\n        })\n      );\n\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.GOT_ELIGIBLE_CAMPAIGNS, {\n          userId,\n          groupName,\n          file,\n          noOfEligibleCampaigns: eligibleCampaigns.length,\n          noOfGroupCampaigns: inEligibleCampaigns.length + eligibleCampaigns.length\n        })\n      );\n\n      if (eligibleCampaigns.length === 1) {\n        // if the called campaign is the only winner.\n        return DecisionUtil.evaluateTrafficAndGetVariation(\n          config,\n          eligibleCampaigns[0],\n          eligibleCampaigns[0].key,\n          userId,\n          metaData,\n          newGoalIdentifier,\n          decision\n        );\n      } else {\n        // normalize the eligible campaigns and decide winner\n        return DecisionUtil._normalizeAndFindWinningCampaign(\n          config,\n          campaign,\n          eligibleCampaigns,\n          userId,\n          groupName,\n          groupId,\n          metaData,\n          newGoalIdentifier,\n          decision\n        );\n      }\n    } else {\n      // campaign is not a part of mutually exclusive group\n      // check if the user is eligible to become part of the campaign and assign variation.\n      return DecisionUtil.evaluateTrafficAndGetVariation(\n        config,\n        campaign,\n        campaignKey,\n        userId,\n        metaData,\n        newGoalIdentifier,\n        decision\n      );\n    }\n  },\n  // PRIVATE METHODS\n\n  _evaluateWhitelisting: (campaign, campaignKey, userId, variationTargetingVariables, disableLogs = false) => {\n    let whitelistedVariation;\n    let status;\n    const targetedVariations = [];\n    campaign.variations.forEach(variation => {\n      if (DataTypeUtil.isObject(variation.segments) && !Object.keys(variation.segments).length) {\n        logger.log(\n          LogLevelEnum.DEBUG,\n          LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.SEGMENTATION_SKIPPED, {\n            campaignKey,\n            userId,\n            file,\n            variation: campaign.type === CampaignTypeEnum.FEATURE_ROLLOUT ? '' : `, for ${variation.name}`\n          }),\n          disableLogs\n        );\n        return;\n      }\n      if (\n        DataTypeUtil.isObject(variation.segments) &&\n        SegmentEvaluator(variation.segments, variationTargetingVariables, campaignKey, userId, variation.name)\n      ) {\n        status = StatusEnum.PASSED;\n        targetedVariations.push(FunctionUtil.cloneObject(variation));\n      } else {\n        status = StatusEnum.FAILED;\n      }\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.SEGMENTATION_STATUS, {\n          campaignKey,\n          userId,\n          customVariables: JSON.stringify(variationTargetingVariables),\n          file,\n          status,\n          segmentationType: SegmentationTypeEnum.WHITELISTING,\n          variation:\n            campaign.type === CampaignTypeEnum.FEATURE_ROLLOUT && status === StatusEnum.PASSED\n              ? 'and becomes part of the rollout'\n              : `for ${variation.name}`\n        }),\n        disableLogs\n      );\n    });\n\n    if (targetedVariations.length > 1) {\n      CampaignUtil.scaleVariationWeights(targetedVariations);\n      for (let i = 0, currentAllocation = 0, stepFactor = 0; i < targetedVariations.length; i++) {\n        stepFactor = CampaignUtil.assignRangeValues(targetedVariations[i], currentAllocation);\n        currentAllocation += stepFactor;\n      }\n      whitelistedVariation = BucketingService._getVariation(\n        targetedVariations,\n        BucketingService.calculateBucketValue(CampaignUtil.getBucketingSeed(userId, campaign))\n      );\n    } else {\n      whitelistedVariation = targetedVariations[0];\n    }\n\n    if (whitelistedVariation) {\n      return {\n        variation: whitelistedVariation,\n        variationName: whitelistedVariation.name,\n        variationId: whitelistedVariation.id\n      };\n    }\n  },\n  /**\n   * If userStorageService is provided and variation was stored, get the stored variation\n   *\n   * @param {Object} config\n   * @param {Object} settingsFile - cloned settingsFile\n   * @param {String} campaignKey\n   * @param {String} userId\n   *\n   * @return {Object|null} - if found then variation and goalIdentifier settings object otherwise null\n   */\n  _getStoredVariationAndGoalIdentifiers: function(\n    config,\n    settingsFile,\n    campaignKey,\n    userId,\n    userStorageData,\n    disableLogs = false\n  ) {\n    let userData = DecisionUtil._getStoredUserData(config, userId, campaignKey, userStorageData, disableLogs);\n    let { variationName, goalIdentifier } = userData;\n\n    if (userData && userData.campaignKey && variationName) {\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.GETTING_STORED_VARIATION, {\n          file,\n          campaignKey,\n          userId,\n          variationName\n        }),\n        disableLogs\n      );\n\n      return {\n        storedVariation: CampaignUtil.getCampaignVariation(settingsFile, campaignKey, variationName),\n        goalIdentifier\n      };\n    }\n\n    // Log if stored variation is not found even after implementing UserStorageService\n    logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.NO_STORED_VARIATION, {\n        file,\n        campaignKey,\n        userId\n      }),\n      disableLogs\n    );\n\n    return null;\n  },\n  /**\n   * If userStorageService is provided and variation was stored, get the stored variation\n   *\n   * @param {Object} config\n   * @param {Object} settingsFile - cloned settingsFile\n   * @param {String} campaignKey\n   * @param {String} userId\n   *\n   * @return {Object|null} - if found then variation settings object otherwise null\n   */\n  _getStoredVariation: function(config, settingsFile, campaignKey, userId, userStorageData) {\n    const data = DecisionUtil._getStoredVariationAndGoalIdentifiers(\n      config,\n      settingsFile,\n      campaignKey,\n      userId,\n      userStorageData\n    );\n    if (data && data.storedVariation) {\n      return data.storedVariation;\n    }\n    return null;\n  },\n  /**\n   * Get the User Variation mapping by calling get method of UserStorageService being provided\n   *\n   * @param {Object} config\n   * @param {String} UserID\n   * @param {String} campaignKey\n   *\n   * @return {Object} - User Campaign Mapping\n   */\n  _getStoredUserData: function(config, userId, campaignKey, userStorageData, disableLogs) {\n    let userStorageMap = {\n      userId: userId,\n      variationName: null,\n      campaignKey: campaignKey,\n      goalIdentifier: null\n    };\n\n    if (!config.userStorageService) {\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.NO_USER_STORAGE_SERVICE_GET, {\n          file\n        }),\n        disableLogs\n      );\n      return userStorageMap;\n    }\n\n    try {\n      let data = config.userStorageService.get(userId, campaignKey) || {};\n\n      // if data found\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.GETTING_DATA_USER_STORAGE_SERVICE, {\n          file,\n          userId\n        }),\n        disableLogs\n      );\n\n      return Object.assign({}, data, userStorageData);\n    } catch (err) {\n      // if no data found\n      logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.GET_USER_STORAGE_SERVICE_FAILED, {\n          file,\n          userId\n        }),\n        disableLogs\n      );\n    }\n  },\n\n  /**\n   * If UserStorageService is provided and variation was stored, save the assigned variation\n   *\n   * @param {Object} campaign\n   * @param {String} variationName\n   * @param {String} userId\n   *\n   * @return {Boolean} - true if found otherwise false\n   */\n  _saveUserData: function(config, campaign, variationName, userId, metaData, goalIdentifier) {\n    let isSaved = false;\n\n    if (!config.userStorageService) {\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.NO_USER_STORAGE_SERVICE_SET, {\n          file\n        })\n      );\n      return isSaved;\n    }\n\n    try {\n      const properties = {\n        userId: userId,\n        variationName,\n        campaignKey: campaign.key\n      };\n\n      if (!DataTypeUtil.isUndefined(goalIdentifier)) {\n        properties.goalIdentifier = goalIdentifier;\n      }\n\n      if (!DataTypeUtil.isUndefined(metaData)) {\n        properties.metaData = metaData;\n      }\n\n      config.userStorageService.set(properties);\n\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.SETTING_DATA_USER_STORAGE_SERVICE, {\n          file,\n          userId\n        })\n      );\n\n      isSaved = true;\n    } catch (ex) {\n      logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.SET_USER_STORAGE_SERVICE_FAILED, {\n          file,\n          userId\n        })\n      );\n\n      isSaved = false;\n    }\n\n    return isSaved;\n  },\n\n  /**\n   * Evaluate the campaign for whitelisting and store\n   * This method would be run only for MEG campaigns\n   *\n   * @param {Object} config\n   * @param {Object} settingsFile\n   * @param {Array} campaignList\n   * @param {Object} calledCampaign\n   * @param {String} userId\n   * @param {Object} userStorageData\n   * @param {Object} variationTargetingVariables\n   * @param {Boolean} isTrackUserAPI\n   *\n   * @returns {Boolean} - true, if whitelisting/storage is satisfied for any campaign\n   */\n  _checkForStorageAndWhitelisting(\n    config,\n    settingsFile,\n    groupName,\n    campaignList,\n    calledCampaign,\n    userId,\n    userStorageData,\n    variationTargetingVariables,\n    isTrackUserAPI\n  ) {\n    let otherCampaignWinner = false;\n    campaignList.some(groupCampaign => {\n      if (groupCampaign.id === calledCampaign.id) {\n        return;\n      }\n      // create a local copy of the campaigns\n      // groupCampaign = FunctionUtil.cloneObject(groupCampaign);\n      // checking other campaigns for whitelisting or user storage.\n      const whitelistedVariation = DecisionUtil._checkForWhitelisting(\n        groupCampaign,\n        groupCampaign.key,\n        userId,\n        variationTargetingVariables\n      );\n      if (whitelistedVariation) {\n        // other campaign satisfy the whitelisting\n        otherCampaignWinner = true;\n        logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.OTHER_CAMPAIGN_SATISFIES_WHITELISTING_STORAGE, {\n            file,\n            campaignKey: groupCampaign.key,\n            groupName,\n            userId,\n            type: 'whitelisting'\n          })\n        );\n        return true;\n      }\n      const storedVariation = DecisionUtil._checkForUserStorage(\n        config,\n        settingsFile,\n        groupCampaign,\n        groupCampaign.key,\n        userId,\n        userStorageData,\n        isTrackUserAPI\n      );\n      if (storedVariation && DataTypeUtil.isObject(storedVariation) && Object.keys(storedVariation).length > 0) {\n        // other campaign sastisfy the user storage\n        otherCampaignWinner = true;\n        logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.OTHER_CAMPAIGN_SATISFIES_WHITELISTING_STORAGE, {\n            file,\n            campaignKey: groupCampaign.key,\n            groupName,\n            userId,\n            type: 'user storage'\n          })\n        );\n        return true;\n      }\n    });\n    return otherCampaignWinner;\n  },\n\n  /**\n   * Evaluate a campaign for pre-segmentation.\n   *\n   * @param {Object} campaign\n   * @param {String} campaignKey\n   * @param {String} userId\n   * @param {Object} customVariables\n   * @param {Object} decision\n   *\n   * @returns {Boolean} true, if the pre-segmentation is satisfied.\n   */\n  _checkForPreSegmentation: (campaign, campaignKey, userId, customVariables, decision) => {\n    let status;\n    if (DataTypeUtil.isObject(campaign.segments) && !Object.keys(campaign.segments).length) {\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.SEGMENTATION_SKIPPED, {\n          campaignKey,\n          userId,\n          file\n        }),\n        !decision\n      );\n      return true;\n    } else {\n      const preSegmentationResult = SegmentEvaluator(\n        campaign.segments,\n        customVariables,\n        campaignKey,\n        userId,\n        !decision\n      );\n      if (!preSegmentationResult) {\n        status = StatusEnum.FAILED;\n      } else {\n        status = StatusEnum.PASSED;\n      }\n\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.SEGMENTATION_STATUS, {\n          campaignKey,\n          userId,\n          customVariables: JSON.stringify(customVariables || {}),\n          file,\n          status,\n          segmentationType: SegmentationTypeEnum.PRE_SEGMENTATION,\n          variation: ''\n        }),\n        !decision\n      );\n\n      if (status === StatusEnum.FAILED) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  },\n\n  /**\n   * Check if user is eligible for the camapign based on traffic percentage and assign variation.\n   * @param {Object} config\n   * @param {Object} campaign\n   * @param {String} campaignKey\n   * @param {String} userId\n   * @param {Object} metaData\n   * @param {String} newGoalIdentifier\n   * @param {Object} decision\n   * @returns {Object} variation assigned to the user\n   */\n  evaluateTrafficAndGetVariation(config, campaign, campaignKey, userId, metaData, newGoalIdentifier, decision) {\n    let variation, variationName, variationId;\n    // Use our core's VariationDecider utility to get the deterministic variation assigned to the userId for that campaign\n    ({ variation, variationName, variationId } = VariationDecider.getVariationAllotted(userId, campaign));\n\n    // Check if variation-name has been assigned to the userId. If not, return no variation\n    if (variationName) {\n      // If userStorageService is provided, look into it for the saved variation for the campaign and userId\n      DecisionUtil._saveUserData(config, campaign, variationName, userId, metaData, newGoalIdentifier);\n\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.VARIATION_ALLOCATED, {\n          file,\n          campaignKey,\n          userId,\n          variationName\n        })\n      );\n    } else {\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.NO_VARIATION_ALLOCATED, {\n          file,\n          campaignKey,\n          userId\n        })\n      );\n    }\n\n    // Executing the callback when SDK makes the decision\n    HooksManager.execute(\n      Object.assign(\n        {\n          fromUserStorageService: false,\n          isUserWhitelisted: false\n        },\n        campaign.type === CampaignTypeEnum.FEATURE_ROLLOUT\n          ? {\n              isFeatureEnabled: !!variationName\n            }\n          : {\n              variationName,\n              variationId\n            },\n        decision\n      )\n    );\n\n    return {\n      variation: variation && variation.variation,\n      variationName,\n      variationId\n    };\n  },\n\n  /**\n   * Evaluate a campaign for whitelisting\n   *\n   * @param {Object} campaign\n   * @param {String} campaignKey\n   * @param {String} userId\n   * @param {Object} variationTargetingVariables\n   * @param {Object} decision\n   *\n   * @returns {Object} whitelisted variation\n   */\n  _checkForWhitelisting: (campaign, campaignKey, userId, variationTargetingVariables, decision) => {\n    let status;\n    let variationName, variationId;\n    if (campaign.isForcedVariationEnabled) {\n      let whitelistingResult = DecisionUtil._evaluateWhitelisting(\n        campaign,\n        campaignKey,\n        userId,\n        variationTargetingVariables,\n        !decision\n      );\n      let variationString;\n      if (whitelistingResult) {\n        status = StatusEnum.PASSED;\n        variationString = whitelistingResult.variationName;\n      } else {\n        status = StatusEnum.FAILED;\n        variationString = '';\n      }\n\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.SEGMENTATION_STATUS, {\n          campaignKey,\n          userId,\n          customVariables: JSON.stringify(variationTargetingVariables),\n          file,\n          status,\n          segmentationType: SegmentationTypeEnum.WHITELISTING,\n          variation: campaign.type === CampaignTypeEnum.FEATURE_ROLLOUT ? '' : `for variation: ${variationString}`\n        }),\n        !decision\n      );\n\n      if (whitelistingResult) {\n        variationName = whitelistingResult.variationName;\n        variationId = whitelistingResult.variationId;\n        // Executing the callback when SDK has made a decision in case of whitelisting\n        if (decision) {\n          HooksManager.execute(\n            Object.assign(\n              {\n                fromUserStorageService: false,\n                isUserWhitelisted: !!variationName\n              },\n              campaign.type === CampaignTypeEnum.FEATURE_ROLLOUT\n                ? {\n                    isFeatureEnabled: !!variationName\n                  }\n                : {\n                    variationName,\n                    variationId\n                  },\n              decision\n            )\n          );\n        }\n        return whitelistingResult;\n      }\n    } else {\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.WHITELISTING_SKIPPED, {\n          campaignKey,\n          userId,\n          file\n        }),\n        !decision\n      );\n    }\n  },\n\n  /**\n   * Check if the variation is present in the user storage\n   *\n   * @param {Object} config\n   * @param {Object} settingsFile\n   * @param {Object} campaign\n   * @param {String} campaignKey\n   * @param {String} userId\n   * @param {Object} userStorageData\n   * @param {Boolean} isTrackUserAPI\n   * @param {Object} decision\n   *\n   * @returns {Object} stored variaition\n   */\n  _checkForUserStorage: (\n    config,\n    settingsFile,\n    campaign,\n    campaignKey,\n    userId,\n    userStorageData,\n    isTrackUserAPI,\n    decision\n  ) => {\n    let variationName, variationId;\n    let storedVariation, goalIdentifier;\n    // If userStorageService is used, get the variation from the stored data\n    ({ storedVariation, goalIdentifier } =\n      DecisionUtil._getStoredVariationAndGoalIdentifiers(\n        config,\n        settingsFile,\n        campaign.key,\n        userId,\n        userStorageData,\n        !decision\n      ) || {});\n\n    // If stored variation is found, simply return the same\n    if (storedVariation) {\n      variationName = storedVariation.name;\n      variationId = storedVariation.id;\n\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.GOT_STORED_VARIATION, {\n          file,\n          campaignKey,\n          userId,\n          variationName: storedVariation.name\n        }),\n        !decision\n      );\n\n      // Executing the callback when SDK gets the decision from user storage service\n      if (decision) {\n        HooksManager.execute(\n          Object.assign(\n            {\n              fromUserStorageService: !!variationName,\n              isUserWhitelisted: false\n            },\n            campaign.type === CampaignTypeEnum.FEATURE_ROLLOUT\n              ? {\n                  isFeatureEnabled: !!variationName\n                }\n              : {\n                  variationName,\n                  variationId\n                },\n            decision\n          )\n        );\n      }\n\n      return {\n        variation: storedVariation,\n        variationName: storedVariation.name,\n        variationId: storedVariation.id,\n        storedGoalIdentifier: goalIdentifier,\n        isStoredVariation: true\n      };\n    } else if (\n      !DataTypeUtil.isUndefined(config.userStorageService) &&\n      !isTrackUserAPI &&\n      DataTypeUtil.isUndefined(storedVariation)\n    ) {\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.CAMPAIGN_NOT_ACTIVATED, {\n          file,\n          campaignKey,\n          userId,\n          api: config.apiName\n        }),\n        !decision\n      );\n\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CAMPAIGN_NOT_ACTIVATED, {\n          file,\n          campaignKey,\n          userId,\n          reason: config.apiName === ApiEnum.TRACK ? 'track it' : 'get the decision/value'\n        }),\n        !decision\n      );\n      return {};\n    }\n  },\n\n  /**\n   * Evaluate the list of campaigns for pre-segmentation and campaign traffic allocation and assign variation to the user.\n   * This method will be used for MEG campaigns\n   *\n   * @param {Object} config\n   * @param {Array} campaignList\n   * @param {String} userId\n   * @param {Object} customVariables\n   * @param {Object} metaData\n   * @param {String} newGoalIdentifier\n   *\n   * @returns {Array} list of campaigns which satisfies the conditions.\n   */\n  getEligbleCampaigns(campaignList, userId, customVariables) {\n    let eligibleCampaigns = [];\n    let inEligibleCampaigns = [];\n\n    campaignList.forEach(groupCampaign => {\n      const isPartOfCampaign =\n        DecisionUtil._checkForPreSegmentation(groupCampaign, groupCampaign.key, userId, customVariables) &&\n        BucketingService.isUserPartOfCampaign(userId, groupCampaign, true);\n      if (isPartOfCampaign) {\n        groupCampaign = FunctionUtil.cloneObject(groupCampaign);\n        // campaign satisfies the pre-segmentation\n        eligibleCampaigns.push(groupCampaign);\n      } else {\n        inEligibleCampaigns.push(groupCampaign);\n      }\n    });\n\n    return {\n      eligibleCampaigns,\n      inEligibleCampaigns\n    };\n  },\n\n  /**\n   * Equally distribute the traffic of campaigns and assign a winner campaign by murmur hash.\n   *\n   * @param {Object} config\n   * @param {Object} calledCampaign\n   * @param {Array} shortlistedCampaigns\n   * @param {String} userId\n   * @param {Object} metaData\n   * @param {String} newGoalIdentifier\n   * @param {Object} decision\n   *\n   * @returns {Object} variation of the winner campaign\n   */\n  _normalizeAndFindWinningCampaign(\n    config,\n    calledCampaign,\n    shortlistedCampaigns,\n    userId,\n    groupName,\n    groupId,\n    metaData,\n    newGoalIdentifier,\n    decision\n  ) {\n    // normalise the weights of all the shortlisted campaigns\n    shortlistedCampaigns.forEach(campaign => {\n      campaign.weight = Math.floor(100 / shortlistedCampaigns.length);\n    });\n\n    // re-distribute the traffic for each camapign\n    CampaignUtil.setCampaignAllocation(shortlistedCampaigns);\n\n    let winnerCampaign = BucketingService._getVariation(\n      shortlistedCampaigns,\n      BucketingService.calculateBucketValue(CampaignUtil.getBucketingSeed(userId, undefined, groupId))\n    );\n\n    logger.log(\n      LogLevelEnum.INFO,\n      LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.GOT_WINNER_CAMPAIGN, {\n        userId,\n        groupName,\n        file,\n        campaignKey: winnerCampaign.key\n      })\n    );\n\n    if (winnerCampaign.id === calledCampaign.id) {\n      // if called campaign is the winner campaign, get the variation for the campaign\n      return DecisionUtil.evaluateTrafficAndGetVariation(\n        config,\n        winnerCampaign,\n        winnerCampaign.key,\n        userId,\n        metaData,\n        newGoalIdentifier,\n        decision\n      );\n    } else {\n      // if winning campaign not the called camapaign, return\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CALLED_CAMPAIGN_NOT_WINNER, {\n          userId,\n          groupName,\n          file,\n          campaignKey: calledCampaign.key\n        })\n      );\n      return {};\n    }\n  }\n};\n\nmodule.exports = DecisionUtil;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst GoalTypeEnum = {\n  REVENUE: 'REVENUE_TRACKING',\n  CUSTOM: 'CUSTOM_GOAL',\n  ALL: 'ALL'\n};\n\nmodule.exports = GoalTypeEnum;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst ObjectUtil = {\n  areObjectKeys: (obj = {}) => {\n    return Object.keys(obj).length;\n  },\n  getKeyValue: obj => {\n    if (!ObjectUtil.areObjectKeys(obj)) {\n      return;\n    }\n    let key = Object.keys(obj)[0];\n    let value = obj[key];\n    return {\n      key,\n      value\n    };\n  },\n  objectValues: obj => {\n    return Object.keys(obj).map(key => obj[key]);\n  }\n};\n\nmodule.exports = ObjectUtil;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst Constants = require('../constants');\nconst UrlEnum = require('../enums/UrlEnum');\nconst GoalTypeEnum = require('../enums/GoalTypeEnum');\n\nconst UuidUtil = require('./UuidUtil');\nconst ValidateUtil = require('./ValidateUtil');\nconst FunctionUtil = require('./FunctionUtil');\n\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst DataTypeUtil = require('./DataTypeUtil');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\nconst logger = logging.getLogger();\n\n/**\n * Return primary properties required for every network call to VWO server\n * @param {Object} configObj\n * @param {String} userId\n *\n * @returns primary properties\n */\nfunction getPrimaryProperties(configObj, userId) {\n  return {\n    sId: FunctionUtil.getCurrentUnixTimestamp(),\n    u: UuidUtil.generateFor(userId, configObj.accountId)\n  };\n}\n\n/**\n * Return base properties required for every network call to VWO server\n * @param {Object} configObj\n * @param {String} userId\n *\n * @returns base properties\n */\nfunction getBaseProperties(configObj, userId) {\n  const { accountId } = configObj;\n\n  return Object.assign({}, getPrimaryProperties(configObj, userId), ImpressionUtil.getReportingProperties(configObj), {\n    account_id: accountId,\n    random: FunctionUtil.getRandomNumber(),\n    ap: Constants.PLATFORM\n  });\n}\n\nlet ImpressionUtil = {\n  /**\n   * Build properties for the impression event\n   *\n   * @param {String} userId the unique ID assigned to a user\n   * @param {String} tagKey the tag name\n   * @param {String} tagValue the tag value\n   */\n  buildEventForPushing(configObj, tagKey, tagValue, userId) {\n    const properties = Object.assign({}, getBaseProperties(configObj, userId));\n    properties.url = Constants.HTTPS_PROTOCOL + UrlEnum.BASE_URL + UrlEnum.PUSH;\n    properties.tags = JSON.stringify({\n      u: {\n        [encodeURIComponent(tagKey)]: encodeURIComponent(tagValue)\n      }\n    });\n    logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.IMPRESSION_FOR_PUSH, {\n        file: FileNameEnum.ImpressionUtil,\n        properties: this._getStringifiedLogProperties(properties)\n      })\n    );\n\n    return properties;\n  },\n  /**\n   * Build properties for the bulk impression event\n   *\n   * @param {String} userId the unique ID assigned to a user\n   * @param {String} tagKey the tag name\n   * @param {String} tagValue the tag value\n   */\n  buildBatchEventForPushing(configObj, tagKey, tagValue, userId) {\n    if (typeof process.env !== 'undefined') {\n      const properties = Object.assign({}, getPrimaryProperties(configObj, userId));\n      properties.eT = 3;\n      properties.t = encodeURIComponent(\n        JSON.stringify({\n          u: {\n            [tagKey]: tagValue\n          }\n        })\n      );\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.IMPRESSION_FOR_PUSH, {\n          file: FileNameEnum.ImpressionUtil,\n          properties: JSON.stringify(properties)\n        })\n      );\n\n      return properties;\n    }\n  },\n  /**\n   * Build properties for the impression event\n   *\n   * @param {String} userId the unique ID assigned to a user\n   * @param {String} campaignKey, the Campaign ID\n   * @param {Number} variationId, the Variation ID\n   *\n   * @return null if campaign ID or variation ID is invalid\n   */\n  buildEventForTrackingUser(configObj, campaignKey, variationId, userId, usageStats) {\n    let properties = Object.assign(\n      {\n        experiment_id: campaignKey,\n        combination: variationId\n      },\n      getBaseProperties(configObj, userId),\n      usageStats\n    );\n    properties.ed = JSON.stringify({ p: 'server' });\n    properties.url = Constants.HTTPS_PROTOCOL + UrlEnum.BASE_URL + UrlEnum.TRACK_USER;\n\n    logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.IMPRESSION_FOR_TRACK_USER, {\n        file: FileNameEnum.ImpressionUtil,\n        properties: this._getStringifiedLogProperties(properties)\n      })\n    );\n\n    return properties;\n  },\n  /**\n   * Build properties for the bulk impression event\n   *\n   * @param {String} userId the unique ID assigned to a user\n   * @param {String} campaignKey, the Campaign ID\n   * @param {Number} variationId, the Variation ID\n   *\n   * @return null if campaign ID or variation ID is invalid\n   */\n  buildBatchEventForTrackingUser(configObj, campaignKey, variationId, userId) {\n    if (typeof process.env !== 'undefined') {\n      let properties = Object.assign(\n        {\n          e: campaignKey,\n          c: variationId\n        },\n        getPrimaryProperties(configObj, userId)\n      );\n      properties.eT = 1;\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.IMPRESSION_FOR_TRACK_USER, {\n          file: FileNameEnum.ImpressionUtil,\n          properties: JSON.stringify(properties)\n        })\n      );\n\n      return properties;\n    }\n  },\n  /**\n   * Build properties for the impression event\n   *\n   * @param {String} userId the unique ID assigned to a user\n   * @param {String} campaignKey, the Campaign ID\n   * @param {Number} variationId, the Variation ID\n   * @param {String} goalId, the Goal ID\n   * @param {String} revenue, the revenue generated on conversion\n   *\n   * @return null if campaign ID or variation ID is invalid\n   */\n  buildEventForTrackingGoal(configObj, campaignKey, variationId, userId, goal = {}, revenue = null) {\n    const goalId = goal.id;\n\n    let properties = Object.assign(\n      {\n        experiment_id: campaignKey,\n        combination: variationId\n      },\n      getBaseProperties(configObj, userId)\n    );\n\n    properties.url = Constants.HTTPS_PROTOCOL + UrlEnum.BASE_URL + UrlEnum.TRACK_GOAL;\n\n    properties['goal_id'] = goalId;\n    if (goal.type === GoalTypeEnum.REVENUE && ValidateUtil.isValidValue(revenue)) {\n      properties['r'] = revenue;\n    }\n\n    logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.IMPRESSION_FOR_TRACK_GOAL, {\n        file: FileNameEnum.ImpressionUtil,\n        properties: this._getStringifiedLogProperties(properties)\n      })\n    );\n\n    return properties;\n  },\n  /**\n   * Build properties for the bulk impression event\n   *\n   * @param {String} userId the unique ID assigned to a user\n   * @param {String} campaignKey, the Campaign ID\n   * @param {Number} variationId, the Variation ID\n   * @param {String} goalId, the Goal ID\n   * @param {String} revenue, the revenue generated on conversion\n   *\n   * @return null if campaign ID or variation ID is invalid\n   */\n  buildBatchEventForTrackingGoal(configObj, campaignKey, variationId, userId, goal = {}, revenue = null) {\n    if (typeof process.env !== 'undefined') {\n      let properties = Object.assign(\n        {\n          e: campaignKey,\n          c: variationId\n        },\n        getPrimaryProperties(configObj, userId)\n      );\n      properties.eT = 2;\n\n      properties.g = goal.id;\n      if (goal.type === GoalTypeEnum.REVENUE && ValidateUtil.isValidValue(revenue)) {\n        properties.r = revenue;\n      }\n\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.IMPRESSION_FOR_TRACK_GOAL, {\n          file: FileNameEnum.ImpressionUtil,\n          properties: JSON.stringify(properties)\n        })\n      );\n\n      return properties;\n    }\n  },\n\n  /**\n   * Return an object containing properties required for segmenting reports\n   * @param {Object} configObj\n   * @returns reporting properties\n   */\n  getReportingProperties(configObj) {\n    const { sdkKey } = configObj;\n\n    return {\n      [Constants.SDK_QUERY_PARAM]: Constants.SDK_NAME,\n      [Constants.SDK_VERSION_QUERY_PARAM]: Constants.SDK_VERSION,\n      env: sdkKey\n    };\n  },\n\n  /**\n   * Builds generic properties for different tracking calls required by VWO servers.\n   * @param {Object} configObj\n   * @param {String} eventName\n   * @returns properties\n   */\n  getEventsBaseProperties(config, eventName, usageStats = {}) {\n    const { sdkKey } = config;\n\n    let properties = Object.assign(\n      {\n        en: eventName,\n        a: config.accountId,\n        env: sdkKey,\n        eTime: FunctionUtil.getCurrentUnixTimestampInMillis(),\n        random: FunctionUtil.getRandomNumber(),\n        p: 'FS'\n      },\n      usageStats\n    );\n\n    properties.url = Constants.HTTPS_PROTOCOL + UrlEnum.BASE_URL + UrlEnum.EVENTS;\n    return properties;\n  },\n\n  /**\n   * Builds generic payload required by all the different tracking calls.\n   * @param {Object} configObj\n   * @param {String} userId\n   * @param {String} eventName\n   * @param {Object} usageStats\n   * @returns properties\n   */\n  getEventBasePayload(configObj, userId, eventName) {\n    const uuid = UuidUtil.generateFor(userId, configObj.accountId);\n    const { sdkKey } = configObj;\n\n    let props = {\n      sdkName: Constants.SDK_NAME,\n      sdkVersion: Constants.SDK_VERSION,\n      $visitor: {\n        props: {\n          vwo_fs_environment: sdkKey\n        }\n      }\n    };\n\n    // if (usageStats) {\n    //   props = Object.assign({}, props, usageStats);\n    // }\n\n    let properties = {\n      d: {\n        msgId: `${uuid}-${FunctionUtil.getCurrentUnixTimestamp()}`,\n        visId: uuid,\n        sessionId: FunctionUtil.getCurrentUnixTimestamp(),\n        event: {\n          props: props,\n          name: eventName,\n          time: FunctionUtil.getCurrentUnixTimestampInMillis()\n        },\n        visitor: {\n          props: {\n            vwo_fs_environment: sdkKey\n          }\n        }\n      }\n    };\n\n    return properties;\n  },\n\n  /**\n   * Builds payload to track the visitor.\n   * @param {Object} configObj\n   * @param {String} userId\n   * @param {String} eventName\n   * @param {String} campaignId\n   * @param {Number} variationId\n   * @returns track-user payload\n   */\n  getTrackUserPayloadData(configObj, userId, eventName, campaignId, variationId) {\n    const properties = this.getEventBasePayload(configObj, userId, eventName);\n\n    properties.d.event.props.id = campaignId;\n    properties.d.event.props.variation = variationId;\n\n    // this is currently required by data-layer team, we can make changes on DACDN and remove it from here\n    properties.d.event.props.isFirst = 1;\n\n    logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.IMPRESSION_FOR_EVENT_ARCH_TRACK_USER, {\n        file: FileNameEnum.ImpressionUtil,\n        a: configObj.accountId,\n        u: userId,\n        c: campaignId\n      })\n    );\n\n    return properties;\n  },\n\n  /**\n   * Builds payload to track the Goal.\n   * @param {Object} configObj\n   * @param {String} userId\n   * @param {String} eventName\n   * @param {Object} metricMap\n   * @param {String} revenueValue\n   * @returns track-goal payload\n   */\n  getTrackGoalPayloadData(configObj, userId, eventName, metricMap, revenueValue, revenuePropList) {\n    const properties = this.getEventBasePayload(configObj, userId, eventName);\n\n    let metric = {};\n    Object.keys(metricMap).forEach(function(key) {\n      metric[`id_${key}`] = [`g_${metricMap[key].goal.id}`];\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.IMPRESSION_FOR_EVENT_ARCH_TRACK_GOAL, {\n          file: FileNameEnum.ImpressionUtil,\n          goalName: eventName,\n          a: configObj.accountId,\n          u: userId,\n          c: key\n        })\n      );\n    });\n\n    properties.d.event.props.vwoMeta = {\n      metric: metric\n    };\n\n    if (revenuePropList && revenueValue && revenuePropList.size > 0) {\n      revenuePropList.forEach(revenueProp => {\n        properties.d.event.props.vwoMeta[revenueProp] = revenueValue;\n      });\n    }\n\n    properties.d.event.props.isCustomEvent = true;\n    return properties;\n  },\n\n  /**\n   * Builds payload to appply post segmentation on VWO campaign reports.\n   * @param {Object} configObj\n   * @param {String} userId\n   * @param {String} eventName\n   * @param {Object} customDimensionMap\n   * @returns push payload\n   */\n  getPushPayloadData(configObj, userId, eventName, customDimensionMap) {\n    const properties = this.getEventBasePayload(configObj, userId, eventName);\n\n    properties.d.event.props.isCustomEvent = true;\n\n    Object.keys(customDimensionMap).forEach(function(key) {\n      const tagValue = DataTypeUtil.isString(customDimensionMap[key])\n        ? customDimensionMap[key]\n        : JSON.stringify(customDimensionMap[key]);\n      properties.d.event.props.$visitor.props[key] = tagValue;\n      properties.d.visitor.props[key] = tagValue;\n    });\n\n    logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.IMPRESSION_FOR_EVENT_ARCH_PUSH, {\n        file: FileNameEnum.ImpressionUtil,\n        a: configObj.accountId,\n        u: userId,\n        property: JSON.stringify(customDimensionMap)\n      })\n    );\n\n    return properties;\n  },\n\n  /**\n   * Remove the sensitive keys from the properties to te displayed in the log.\n   * @param {Object} properties\n   * @returns properties without sensitive keys\n   */\n  _getStringifiedLogProperties(properties) {\n    const logProperties = Object.assign({}, properties);\n    delete logProperties.env;\n    return JSON.stringify(logProperties);\n  }\n};\n\nmodule.exports = ImpressionUtil;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst EventEnum = {\n  VWO_VARIATION_SHOWN: 'vwo_variationShown',\n  VWO_SYNC_VISITOR_PROP: 'vwo_syncVisitorProp'\n};\n\nmodule.exports = EventEnum;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst Hasher = require('murmurhash');\n\nconst Constants = require('../constants');\nconst ValidateUtil = require('../utils/ValidateUtil');\n\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst CampaignUtil = require('../utils/CampaignUtil');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\nconst logger = logging.getLogger();\n\nlet BucketingService = {\n  /**\n   * Generates Bucket Value of the User by hashing the User ID by murmurHash\n   * and scaling it down.\n   *\n   * @param {Number} hashValue the hashValue generated after hashing\n   * @param {Number} maxValue the value up-to which hashValue needs to be scaled\n   * @param {Number} multiplier multiplier in case the traffic allocation is less than 100\n   *\n   * @return {Number} bucket Value of the User\n   */\n  _generateBucketValue: (hashValue, maxValue, multiplier = 1) => {\n    const ratio = hashValue / Math.pow(2, 32);\n    const multipliedValue = (maxValue * ratio + 1) * multiplier;\n    const value = Math.floor(multipliedValue);\n\n    return value;\n  },\n\n  /**\n   * Returns the Variation by checking the Start and End Bucket Allocations of each Variation\n   *\n   * @param {Object} campaign which contains the variations\n   * @param {Number} bucketValue the bucket Value of the user\n   *\n   * @return {Object|null} variation data allotted to the user or null if not\n   */\n  _getVariation: (variations, bucketValue) => {\n    for (let i = 0; i < Object.keys(variations).length; i++) {\n      let variation = variations[i];\n\n      if (bucketValue >= variation.startVariationAllocation && bucketValue <= variation.endVariationAllocation) {\n        return variation;\n      }\n    }\n\n    return null;\n  },\n\n  /**\n   * Validates the User ID and generates Bucket Value of the User by hashing the userId by murmurHash and scaling it down.\n   *\n   * @param {String} userId the unique ID assigned to User\n   *\n   * @return {Number} the bucket Value allotted to User (between 1 to $this->$MAX_TRAFFIC_PERCENT)\n   */\n  _getBucketValueForUser: (seed, userId, disableLog) => {\n    let hashValue = Hasher.v3(seed, Constants.SEED_VALUE);\n    let bucketValue = BucketingService._generateBucketValue(hashValue, Constants.MAX_TRAFFIC_PERCENT);\n\n    logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.USER_HASH_BUCKET_VALUE, {\n        file: FileNameEnum.BucketingService,\n        hashValue,\n        bucketValue,\n        userId\n      }),\n      disableLog\n    );\n\n    return bucketValue;\n  },\n\n  /**\n   * Calculate if this user should become part of the campaign or not\n   *\n   * @param {String} userId the unique ID assigned to a user\n   * @param {Object} campaign fot getting the value of traffic allotted to the campaign\n   *\n   * @return {Boolean} if User is a part of Campaign or not\n   */\n  isUserPartOfCampaign: (userId, campaign, disableLog = false) => {\n    if (!ValidateUtil.isValidValue(userId) || !campaign) {\n      return false;\n    }\n\n    let trafficAllocation = campaign.percentTraffic;\n    let valueAssignedToUser = BucketingService._getBucketValueForUser(\n      CampaignUtil.getBucketingSeed(userId, campaign),\n      userId,\n      disableLog\n    );\n    let isUserPart = valueAssignedToUser !== 0 && valueAssignedToUser <= trafficAllocation;\n\n    logger.log(\n      LogLevelEnum.INFO,\n      LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.USER_ELIGIBILITY_FOR_CAMPAIGN, {\n        file: FileNameEnum.BucketingService,\n        userId,\n        isUserPart\n      }),\n      disableLog\n    );\n\n    return isUserPart;\n  },\n\n  /**\n   * Validates the User ID and generates Variation into which the User is bucketed in.\n   *\n   * @param {String} userId the unique ID assigned to User\n   * @param {Object} campaign the Campaign of which User is a part of\n   *\n   * @return {Object|null} variation data into which user is bucketed in or null if not\n   */\n  bucketUserToVariation: (userId, campaign) => {\n    let multiplier;\n    if (!ValidateUtil.isValidValue(userId)) {\n      logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.INVALID_USER_ID, {\n          file: FileNameEnum.BucketingService,\n          userId,\n          method: 'bucketUserToVariation'\n        })\n      );\n\n      return null;\n    }\n\n    if (!campaign) {\n      return null;\n    }\n    if (campaign.percentTraffic) {\n      multiplier = Constants.MAX_TRAFFIC_VALUE / campaign.percentTraffic / 100;\n    }\n    const hashValue = BucketingService._generateHashValue(\n      campaign.isBucketingSeedEnabled ? `${campaign.id}_${userId}` : userId\n    );\n    const bucketValue = BucketingService._generateBucketValue(hashValue, Constants.MAX_TRAFFIC_VALUE, multiplier);\n\n    logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.VARIATION_HASH_BUCKET_VALUE, {\n        file: FileNameEnum.BucketingService,\n        userId,\n        campaignKey: campaign.key,\n        percentTraffic: campaign.percentTraffic,\n        bucketValue,\n        hashValue\n      })\n    );\n    return BucketingService._getVariation(campaign.variations, bucketValue);\n  },\n  calculateBucketValue: (seed, multiplier = 1) => {\n    const hashValue = BucketingService._generateHashValue(seed);\n    return BucketingService._generateBucketValue(hashValue, Constants.MAX_TRAFFIC_VALUE, multiplier);\n  },\n  _generateHashValue: userId => {\n    return Hasher.v3(userId, Constants.SEED_VALUE);\n  }\n};\n\nmodule.exports = BucketingService;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst AnsiColorEnum = require('./AnsiColorEnum');\n\nconst LogNumberLevel = {\n  _0: 'NOTSET',\n  _1: 'DEBUG',\n  _2: 'INFO',\n  _3: 'WARN',\n  _4: 'ERROR'\n};\n\nconst LogLevelEnum = {\n  NOTSET: 0,\n  DEBUG: 1,\n  INFO: 2,\n  WARN: 3,\n  ERROR: 4\n};\n\nconst LogLevelColorInfoEnum = {\n  [LogLevelEnum.NOTSET]: `${AnsiColorEnum.BOLD}${AnsiColorEnum.WHITE}[NOTSET]:${AnsiColorEnum.RESET}`,\n  [LogLevelEnum.DEBUG]: `${AnsiColorEnum.BOLD}${AnsiColorEnum.LIGHTBLUE}[DEBUG]: ${AnsiColorEnum.RESET}`,\n  [LogLevelEnum.INFO]: `${AnsiColorEnum.BOLD}${AnsiColorEnum.CYAN}[INFO]:  ${AnsiColorEnum.RESET}`,\n  [LogLevelEnum.WARN]: `${AnsiColorEnum.BOLD}${AnsiColorEnum.YELLOW}[WARN]:  ${AnsiColorEnum.RESET}`,\n  [LogLevelEnum.ERROR]: `${AnsiColorEnum.BOLD}${AnsiColorEnum.RED}[ERROR]: ${AnsiColorEnum.RESET}`\n};\n\nconst LogLevelInfoEnum = {\n  [LogLevelEnum.NOTSET]: `[NOTSET]:`,\n  [LogLevelEnum.DEBUG]: `[DEBUG]: `,\n  [LogLevelEnum.INFO]: `[INFO]:  `,\n  [LogLevelEnum.WARN]: `[WARN]:  `,\n  [LogLevelEnum.ERROR]: `[ERROR]: `\n};\n\nmodule.exports = {\n  LogLevelEnum,\n  LogNumberLevel,\n  LogLevelInfoEnum,\n  LogLevelColorInfoEnum\n};\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst CampaignTypeEnum = {\n  FEATURE_TEST: 'FEATURE_TEST',\n  FEATURE_ROLLOUT: 'FEATURE_ROLLOUT',\n  AB: 'VISUAL_AB'\n};\n\nmodule.exports = CampaignTypeEnum;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst SegmentOperandTypes = require('./SegmentOperandTypesEnum');\nconst SegmentOperatorTypes = require('./SegmentOperatorTypesEnum');\nconst SegmentOperandValueTypeRegexes = require('./SegmentOperandValueTypeRegexesEnum');\nconst SegmentOperandValues = require('./SegmentOperandValuesEnum');\n\nconst SegmentEnum = {\n  SegmentOperandTypes,\n  SegmentOperatorTypes,\n  SegmentOperandValueTypeRegexes,\n  SegmentOperandValues\n};\n\nmodule.exports = SegmentEnum;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DataTypeUtil = require('../utils/DataTypeUtil');\n\n/**\n * Hooks Manager is responsible for triggering callbacks useful to the end-user based on certain lifecycle events.\n * Possible use with integrations when the user intends to send an event when a visitor is part of the experiment.\n */\nconst HooksManager = {\n  /**\n   * Initializes with configuration from VWO Object.\n   * @param {Object} config\n   */\n  init(config = {}) {\n    this.callback = config.integrations && config.integrations.callback;\n  },\n  /**\n   * Executes the callback\n   * @param {Object} properties Properties from the callback\n   */\n  execute(properties) {\n    if (DataTypeUtil.isFunction(this.callback)) {\n      this.callback(properties);\n    }\n  }\n};\n\nmodule.exports = HooksManager;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst uuidv5 = require('uuid/v5');\nconst Constants = require('../constants');\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\nconst logger = logging.getLogger();\n\nconst VWO_NAMESPACE = uuidv5(Constants.SEED_URL, uuidv5.URL);\n\nconst UuidUtil = {\n  generateFor: (userId, accountId) => {\n    userId = `${userId}`; // type-cast\n    const hash = `${accountId}`;\n    const userIdNamespace = UuidUtil.generate(hash, VWO_NAMESPACE);\n    const uuidForUserIdAccountId = UuidUtil.generate(userId, userIdNamespace);\n\n    let desiredUuid = uuidForUserIdAccountId.replace(/-/gi, '').toUpperCase();\n\n    logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.UUID_FOR_USER, {\n        file: FileNameEnum.UuidUtil,\n        userId,\n        accountId,\n        desiredUuid\n      })\n    );\n\n    return desiredUuid;\n  },\n  generate: (name, namespace) => {\n    if (!name || !namespace) {\n      return;\n    }\n\n    return uuidv5(name, namespace);\n  }\n};\n\nmodule.exports = UuidUtil;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst UrlEnum = {\n  BASE_URL: 'dev.visualwebsiteoptimizer.com',\n  SETTINGS_URL: '/server-side/settings',\n  WEBHOOK_SETTINGS_URL: '/server-side/pull',\n  TRACK_USER: '/server-side/track-user',\n  TRACK_GOAL: '/server-side/track-goal',\n  PUSH: '/server-side/push',\n  BATCH_EVENTS: '/server-side/batch-events',\n  EVENTS: '/events/t'\n};\n\nmodule.exports = UrlEnum;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst { getCurrentTime } = require('./FunctionUtil');\nconst { isObject, isFunction } = require('./DataTypeUtil');\n\nconst XhrUtil = {\n  _getStoredSettings: function(userStorageService) {\n    let isStoredData = false;\n    let parsedSettings;\n\n    if (userStorageService && isObject(userStorageService) && isFunction(userStorageService.getSettings)) {\n      try {\n        const settings = userStorageService.getSettings();\n        parsedSettings = JSON.parse(settings);\n\n        if (parsedSettings && isObject(parsedSettings) && Object.keys(parsedSettings).length > 3) {\n          const info = `VWO-SDK - [INFO]: ${getCurrentTime()} VWO settings found in Storage Service.`;\n\n          console.info(info);\n\n          isStoredData = true;\n        } else if (parsedSettings) {\n          const error = `VWO-SDK - [ERROR]: ${getCurrentTime()} VWO settings found in Storage Service is not valid.`;\n\n          console.error(error);\n        } else {\n          const warning = `VWO-SDK - [WARNING]: ${getCurrentTime()} VWO settings is empty in Storage Service.`;\n\n          console.warn(warning);\n        }\n      } catch (err) {\n        const error = `VWO-SDK - [ERROR]: ${getCurrentTime()} VWO settings found in Storage Service is not valid. ${err}`;\n\n        console.error(error);\n        isStoredData = false;\n      }\n    }\n\n    return {\n      isStoredData,\n      parsedSettings\n    };\n  },\n  send: function({ method, url, payload, userStorageService } = {}) {\n    if (!url || !method) {\n      return;\n    }\n\n    return new Promise((resolve, reject) => {\n      const { isStoredData, parsedSettings } = XhrUtil._getStoredSettings(userStorageService);\n\n      if (isStoredData) {\n        resolve(parsedSettings);\n      } else {\n        let xhr = new XMLHttpRequest();\n        this.xhrHandler(xhr, method, url, payload, userStorageService, resolve, reject);\n      }\n    });\n  },\n\n  xhrHandler: function(xhr, method, url, payload, userStorageService, resolve, reject) {\n    if (method === 'GET') {\n      xhr.onload = () => {\n        this.xhrOnLoad(xhr, userStorageService, resolve);\n      };\n      xhr.onerror = () => {\n        this.xhrOnError(xhr, reject);\n      };\n\n      xhr.open(method, url);\n      xhr.send();\n    } else if (method === 'POST') {\n      xhr.onload = () => {\n        resolve();\n      };\n      xhr.onerror = () => {\n        reject('Something went wrong');\n      };\n\n      xhr.open(method, url, true);\n      xhr.send(JSON.stringify(payload));\n    }\n  },\n\n  xhrOnLoad: function(xhr, userStorageService, resolve) {\n    try {\n      let parsedXhrResponse = JSON.parse(xhr.response);\n\n      if (userStorageService && isObject(userStorageService) && isFunction(userStorageService.setSettings)) {\n        userStorageService.setSettings(xhr.response);\n      }\n\n      resolve(parsedXhrResponse);\n    } catch (err) {\n      console.error(err);\n    }\n  },\n\n  xhrOnError: function(xhr, reject) {\n    let error = `VWO-SDK - [ERROR]: ${getCurrentTime()} Request failed for fetching account settings. Got Status Code: ${\n      xhr.status\n    }`;\n\n    console.error(error);\n    reject(error);\n  }\n};\n\nmodule.exports = XhrUtil;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst Constants = require('../constants');\nconst UrlEnum = require('../enums/UrlEnum');\nconst { getRandomNumber, getCurrentTime } = require('./FunctionUtil');\n\nlet SettingsFileUtil = {\n  get: (accountId, sdkKey, userStorageService, config = {}) => {\n    if (!accountId || !sdkKey) {\n      console.error('AccountId and sdkKey are required for fetching account settings. Aborting!');\n      return;\n    }\n\n    let protocol = 'https';\n    let port;\n    let hostname = UrlEnum.BASE_URL;\n    let path = UrlEnum.SETTINGS_URL;\n\n    if (config.isViaWebhook) {\n      path = UrlEnum.WEBHOOK_SETTINGS_URL;\n    }\n\n    path +=\n      `?a=${accountId}&` +\n      `i=${sdkKey}&` +\n      `r=${getRandomNumber()}&` +\n      `platform=${Constants.PLATFORM}&` +\n      `${Constants.SDK_QUERY_PARAM}=${Constants.SDK_NAME}&` +\n      `${Constants.SDK_VERSION_QUERY_PARAM}=${Constants.SDK_VERSION}`;\n\n    if (config.hostname && config.path) {\n      protocol = config.protocol;\n      port = config.port;\n      hostname = config.hostname || hostname;\n      path = config.path || path;\n    }\n\n    if (typeof process.env === 'undefined') {\n      return require('./XhrUtil').send({\n        method: 'GET',\n        url: `${protocol}://${hostname}${path}`,\n        userStorageService\n      });\n    } else {\n      const http = require('http');\n      const https = require('https');\n\n      return new Promise((resolve, reject) => {\n        const options = {\n          hostname,\n          path,\n          agent: false\n        };\n\n        if (port) {\n          options.port = port;\n        }\n\n        (protocol === 'https' ? https : http).get(options, res => {\n          SettingsFileUtil.handleHttpRequest(res, resolve, reject);\n        });\n      });\n    }\n  },\n\n  handleHttpRequest: (res, resolve, reject) => {\n    const { statusCode } = res;\n    const contentType = res.headers['content-type'];\n\n    let error;\n    let rawData = '';\n\n    if (!/^application\\/json/.test(contentType)) {\n      error = `Invalid content-type.\\nExpected application/json but received ${contentType}`;\n    }\n\n    if (error) {\n      console.error(error.message);\n      // Consume response data to free up memory\n      res.resume();\n      reject(error);\n\n      return;\n    }\n\n    res.setEncoding('utf8');\n\n    res.on('data', chunk => {\n      rawData += chunk;\n    });\n\n    res.on('end', () => {\n      SettingsFileUtil.handleHttpResponse(statusCode, rawData, resolve, reject);\n    });\n  },\n\n  handleHttpResponse: (statusCode, rawData, resolve, reject) => {\n    try {\n      const parsedData = JSON.parse(rawData);\n\n      if (statusCode !== 200) {\n        let error = `VWO-SDK - [ERROR]: ${getCurrentTime()} Request failed for fetching account settings. Got Status Code: ${statusCode} and message: ${rawData}`;\n        console.error(error);\n        reject(error);\n\n        return;\n      }\n      resolve(parsedData);\n    } catch (err) {\n      console.error(\n        `VWO-SDK - [ERROR]: ${getCurrentTime()} Request failed for fetching account settings - ${err.message}`\n      );\n      reject(err);\n    }\n  }\n};\n\nmodule.exports = SettingsFileUtil;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst VWO = require('./VWO');\n\nconst DataTypeUtil = require('./utils/DataTypeUtil');\nconst FunctionUtil = require('./utils/FunctionUtil');\nconst { objectValues } = require('./utils/ObjectUtil');\nconst SettingsFileUtil = require('./utils/SettingsFileUtil');\nconst GoalTypeEnum = require('./enums/GoalTypeEnum');\nconst { MAX_EVENTS_PER_REQUEST } = require('./constants');\n\nconst logging = require('./services/logging');\nconst FileNameEnum = require('./enums/FileNameEnum');\nconst file = FileNameEnum.INDEX;\nconst { setLogHandler, setLogLevel, LogLevelEnum, LogNumberLevel, LogMessageEnum, LogMessageUtil } = logging;\n\nconst logger = logging.getLogger();\n\n// By default, all ERRORS should be logged\nlogging.setLogLevel(LogLevelEnum.ERROR);\n\nfunction logError(log) {\n  logger.log(LogLevelEnum.ERROR, log);\n\n  throw new Error(logger.log(LogLevelEnum.ERROR, log));\n}\n\nmodule.exports = {\n  logging,\n  setLogger: setLogHandler,\n  setLogLevel,\n  getSettingsFile: SettingsFileUtil.get,\n  GoalTypeEnum,\n  /**\n   * Initializes the SDK and parses the settingsfile\n   *\n   * @param {Object} config configuration for the SDK\n   */\n  launch: function(sdkConfig) {\n    let config = {};\n    try {\n      // validating config schema\n      FunctionUtil.cloneObject(sdkConfig);\n      if (\n        !DataTypeUtil.isUndefined(sdkConfig.shouldTrackReturningUser) &&\n        !DataTypeUtil.isBoolean(sdkConfig.shouldTrackReturningUser)\n      ) {\n        throw new Error('shouldTrackReturningUser should be boolean');\n      }\n      if (\n        !DataTypeUtil.isUndefined(sdkConfig.isDevelopmentMode) &&\n        !DataTypeUtil.isBoolean(sdkConfig.isDevelopmentMode)\n      ) {\n        throw new Error('isDevelopmentMode should be boolean');\n      }\n      if (sdkConfig.goalTypeToTrack && !objectValues(GoalTypeEnum).includes(sdkConfig.goalTypeToTrack)) {\n        throw new Error('goalTypeToTrack should be certain strings');\n      }\n      if (\n        sdkConfig.logging &&\n        sdkConfig.logging.level &&\n        !objectValues(LogLevelEnum).includes(sdkConfig.logging.level)\n      ) {\n        throw new Error('log level should be certain values');\n      }\n\n      if (sdkConfig.pollingInterval && !DataTypeUtil.isNumber(sdkConfig.pollingInterval)) {\n        const log = LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.POLLING_INTERVAL_INVALID, {\n          file: file\n        });\n\n        logError(log);\n      }\n\n      if (sdkConfig.pollingInterval && DataTypeUtil.isUndefined(sdkConfig.sdkKey)) {\n        const log = LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.SDK_KEY_NOT_PROVIVED, {\n          file: file\n        });\n\n        logError(log);\n      }\n\n      if (sdkConfig.pollingInterval && !DataTypeUtil.isString(sdkConfig.sdkKey)) {\n        const log = LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.SDK_KEY_NOT_STRING, {\n          file: file\n        });\n\n        logError(log);\n      }\n\n      if (!DataTypeUtil.isUndefined(sdkConfig.batchEvents) && !DataTypeUtil.isObject(sdkConfig.batchEvents)) {\n        const log = LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.EVENT_BATCHING_NOT_OBJECT, {\n          file: file\n        });\n\n        logError(log);\n      }\n\n      if (DataTypeUtil.isObject(sdkConfig.batchEvents) && typeof process.env === 'undefined') {\n        sdkConfig.batchEvents = null;\n      }\n\n      if (typeof process.env !== 'undefined') {\n        if (\n          DataTypeUtil.isObject(sdkConfig.batchEvents) &&\n          (!(\n            (DataTypeUtil.isNumber(sdkConfig.batchEvents.eventsPerRequest) &&\n              sdkConfig.batchEvents.eventsPerRequest > 0 &&\n              sdkConfig.batchEvents.eventsPerRequest <= MAX_EVENTS_PER_REQUEST) ||\n            (DataTypeUtil.isNumber(sdkConfig.batchEvents.requestTimeInterval) &&\n              sdkConfig.batchEvents.requestTimeInterval >= 1)\n          ) ||\n            (sdkConfig.batchEvents.flushCallback && !DataTypeUtil.isFunction(sdkConfig.batchEvents.flushCallback)))\n        ) {\n          throw new Error('Invalid batchEvents config');\n        }\n      }\n\n      config = sdkConfig;\n    } catch (err) {\n      logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.SDK_CONFIG_CORRUPTED, {\n          file: file\n        })\n      );\n\n      config = {};\n    }\n\n    // If DEV mode, set colorful logs to true\n    if (config.isDevelopmentMode) {\n      logging.setLogColorMode(true);\n    }\n\n    // If logging is enabled, use the logger and logLevel defined by the client\n    if (config.logging && DataTypeUtil.isObject(config.logging)) {\n      if (config.logging.haveColoredLogs !== undefined) {\n        logging.setLogColorMode(config.logging.haveColoredLogs);\n      }\n\n      if (\n        config.logging.logger &&\n        DataTypeUtil.isObject(config.logging.logger) &&\n        DataTypeUtil.isFunction(config.logging.logger.log)\n      ) {\n        logging.setLogHandler(config.logging.logger);\n        logging.setLogLevel(logging.LogLevelEnum.NOTSET);\n\n        logger.log(\n          LogLevelEnum.DEBUG,\n          LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.CUSTOM_LOGGER_USED, {\n            file: file\n          })\n        );\n      } else if (config.logging.logger) {\n        logger.log(\n          LogLevelEnum.ERROR,\n          LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.CUSTOM_LOGGER_MISCONFIGURED, {\n            file: file\n          })\n        );\n      }\n\n      if (config.logging.level !== undefined) {\n        logging.setLogLevel(config.logging.level);\n        logger.log(\n          LogLevelEnum.DEBUG,\n          LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.LOG_LEVEL_SET, {\n            file: file,\n            level: LogNumberLevel['_' + config.logging.level]\n          })\n        );\n      }\n    }\n\n    // DEBUG log for knowing whether it's DEV mode\n    if (config.isDevelopmentMode) {\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.SET_DEVELOPMENT_MODE, {\n          file: file\n        })\n      );\n    }\n\n    // Set logger on config Obkect, to be required later\n    config.logger = (config.logging && config.logging.logger) || logger;\n\n    // Create an instance of VWO class which exposes API methods\n    return new VWO(config);\n  }\n};\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst api = require('./api');\n\nconst EventQueue = require('./services/EventQueue');\nconst SettingsFileService = require('./services/SettingsFileManager');\nconst FunctionUtil = require('./utils/FunctionUtil');\n\nlet BatchEventsDispatcher;\nlet customEventUtil;\nlet BatchEventsQueue;\n\nif (typeof process.env !== 'undefined') {\n  BatchEventsQueue = require('./services/BatchEventsQueue');\n  BatchEventsDispatcher = require('./utils/BatchEventsDispatcher').dispatch;\n  customEventUtil = require('./utils/CustomEventUtil');\n}\n\nconst DataTypeUtil = require('./utils/DataTypeUtil');\nconst logging = require('./services/logging');\nconst FileNameEnum = require('./enums/FileNameEnum');\nconst HooksManager = require('./services/HooksManager');\nconst UsageStats = require('./services/UsageStats');\nconst ApiEnum = require('./enums/ApiEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\n\nconst file = FileNameEnum.VWO;\n\nclass VWO {\n  // Setting various services on the instance to be accessible by its member functions\n  constructor(config = {}) {\n    this.getVariation = this.getVariationName; // to be backward compatible\n    this.userStorageService = config.userStorageService;\n    this.logger = config.logger;\n    this.returnPromiseFor = config.returnPromiseFor;\n    this.optOut = false;\n\n    // Initialize Hooks manager so that callbacks can be invoked\n    HooksManager.init(config);\n    let settingsFileManager = new SettingsFileService(config);\n\n    // Validate the config file i.e. check if required fields contain appropriate data\n    if (!settingsFileManager.isSettingsFileValid()) {\n      this.logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.INVALID_SETTINGS_FILE, {\n          file\n        })\n      );\n\n      return;\n    }\n\n    this.logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.VALID_CONFIGURATION, {\n        file\n      })\n    );\n\n    settingsFileManager.checkAndPoll(); // Checks if pollingInterval is passed then starts polling settingsFile\n\n    // Setup event quque for sending impressions to VWO server\n    this.eventQueue = new EventQueue();\n    this.SettingsFileManager = settingsFileManager;\n\n    this.usageStats = new UsageStats();\n    if (!settingsFileManager.getConfig().isDevelopmentMode) {\n      this.usageStats.collectUsageStats(settingsFileManager.getConfig());\n    }\n\n    if (typeof process.env !== 'undefined') {\n      if (config.batchEvents) {\n        const accountId = settingsFileManager.getSettingsFile().accountId;\n        const sdkKey = settingsFileManager.getSettingsFile().sdkKey;\n\n        this.batchEventsQueue = new BatchEventsQueue(\n          Object.assign(\n            {},\n            config.batchEvents,\n            { isDevelopmentMode: config.isDevelopmentMode },\n            {\n              accountId,\n              dispatcher: (events, callback) =>\n                BatchEventsDispatcher(\n                  {\n                    ev: events\n                  },\n                  callback,\n                  Object.assign(\n                    {},\n                    {\n                      a: accountId\n                    },\n                    this.usageStats.getUsageStats()\n                  ),\n                  sdkKey\n                )\n            }\n          )\n        );\n\n        this.batchEventsQueue.flushAndClearTimer.bind(this.batchEventsQueue);\n      }\n    }\n\n    // Process settingsFile for various things. For eg: assign bucket range to variation, etc.\n    this.SettingsFileManager.processSettingsFile();\n\n    this.logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.SDK_INITIALIZED, {\n        file\n      })\n    );\n  }\n\n  // PUBLIC METHODS\n  /**\n   * This API method: Gets the variation assigned for the user for the campaign and send the metrics to VWO server\n   *\n   * @param {String} campaignKey       unique campaign key specified in VWO app\n   * @param {String} userId            ID assigned to a user\n   * @param {Object} options           optional params - customVariables, variationTargetingVariables\n   *\n   * @return {String|null}             If variation is assigned then variation-name otherwise null in case of user not becoming part\n   */\n  activate(campaignKey, userId, options = {}) {\n    try {\n      let self = this;\n\n      // Check if returnPromiseFor is provided. If yes, return a promise instead of value\n      // i.e. wait till the network call is not successful\n      if (self.returnPromiseFor && (self.returnPromiseFor.activate || self.returnPromiseFor.all)) {\n        self.logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CONFIG_RETURN_PROMISE, {\n            file,\n            method: ApiEnum.ACTIVATE\n          })\n        );\n        return new Promise(resolve => {\n          if (this.optOut) {\n            this.logger.log(\n              LogLevelEnum.INFO,\n              LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n                file,\n                api: ApiEnum.ACTIVATE\n              })\n            );\n            resolve(null);\n          } else {\n            let variationName;\n            options.responseCallback = (_error, _response) => {\n              resolve(variationName);\n            };\n            variationName = api.activate(self, campaignKey, userId, options);\n\n            // If we get null from the API i.e. no tracking call was sent\n            // In this case, respponseCallback will not be fired and hence we have to manually resolve the promise\n            if (!variationName) {\n              resolve(variationName);\n            } else if (DataTypeUtil.isObject(variationName)) {\n              resolve(variationName.variationName);\n            }\n          }\n        });\n      }\n\n      if (this.optOut) {\n        this.logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n            file,\n            api: ApiEnum.ACTIVATE\n          })\n        );\n        return null;\n      }\n\n      const apiResponse = api.activate(self, campaignKey, userId, options);\n\n      if (DataTypeUtil.isObject(apiResponse)) {\n        return apiResponse.variationName;\n      }\n\n      return apiResponse;\n    } catch (err) {\n      this.logger.log(LogLevelEnum.ERROR, err.message);\n      return null;\n    }\n  }\n\n  /**\n   * This API method: Gets the variation assigned for the user for the campaign\n   *\n   * @param {String} campaignKey       unique campaign key specified in VWO app\n   * @param {String} userId            ID assigned to a user\n   * @param {Object} options           optional params - customVariables, variationTargetingVariables\n   *\n   * @return {String|null}             If variation is assigned then variation-name otherwise null in case of user not becoming part\n   */\n  getVariationName(campaignKey, userId, options = {}) {\n    try {\n      let self = this;\n\n      // Check if returnPromiseFor is provided. If yes, return a promise instead of value\n      if (self.returnPromiseFor && (self.returnPromiseFor.getVariationName || self.returnPromiseFor.all)) {\n        self.logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CONFIG_RETURN_PROMISE, {\n            file,\n            method: ApiEnum.GET_VARIATION_NAME\n          })\n        );\n        return new Promise(resolve => {\n          if (this.optOut) {\n            this.logger.log(\n              LogLevelEnum.INFO,\n              LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n                file,\n                api: ApiEnum.GET_VARIATION_NAME\n              })\n            );\n            resolve(null);\n          } else {\n            // since this API does not send any async call, we can simply resolve the returned value\n            resolve(api.getVariation(self, campaignKey, userId, options));\n          }\n        });\n      }\n\n      if (this.optOut) {\n        this.logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n            file,\n            api: ApiEnum.GET_VARIATION_NAME\n          })\n        );\n        return null;\n      }\n\n      return api.getVariation(self, campaignKey, userId, options);\n    } catch (err) {\n      this.logger.log(LogLevelEnum.ERROR, err.message);\n      return null;\n    }\n  }\n\n  /**\n   * This API method: Marks the conversion of the campaign for a particular goal\n   *\n   * @param {String/Array<string>/null/undefined} campaignSpecifier campaign keys to track           unique campaignSpecifier\n   * @param {String} userId                ID assigned to a user\n   * @param {String} goalIdentifier         unique campaign's goal identifier\n   * @param {Object} options               optional params - customVariables, variationTargetingVariables, revenueValue\n   */\n  track(campaignSpecifier, userId, goalIdentifier, options = {}) {\n    try {\n      let self = this;\n\n      // Check if returnPromiseFor is provided. If yes, return a promise instead of value\n      // i.e. wait till the network call is not successful\n      if (self.returnPromiseFor && (self.returnPromiseFor.track || self.returnPromiseFor.all)) {\n        self.logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CONFIG_RETURN_PROMISE, {\n            file,\n            method: ApiEnum.TRACK\n          })\n        );\n        return new Promise(resolve => {\n          if (this.optOut) {\n            this.logger.log(\n              LogLevelEnum.INFO,\n              LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n                file,\n                api: ApiEnum.TRACK\n              })\n            );\n            resolve(null);\n          } else {\n            let trackResponse;\n            let counter = 0;\n            options.responseCallback = (_error, _response) => {\n              counter += 1;\n              // In case of global goals, when all campaigns are tracked, then only resolve\n              if (counter === FunctionUtil.objectValues(trackResponse).filter(Boolean).length) {\n                resolve(trackResponse);\n              }\n            };\n            trackResponse = api.track(self, campaignSpecifier, userId, goalIdentifier, options);\n            // If we get null/false from the API i.e. no tracking call was sent\n            // In this case, respponseCallback will not be fired and hence we have to manually resolve the promise\n            // Or, in case of global goals, if none campaign got success, manually resolve\n            if (!trackResponse || !FunctionUtil.objectValues(trackResponse).some(Boolean)) {\n              resolve(trackResponse);\n            } else if (trackResponse && trackResponse.isDevelopmentMode) {\n              delete trackResponse.isDevelopmentMode;\n              resolve(trackResponse);\n            }\n          }\n        });\n      }\n\n      if (this.optOut) {\n        this.logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n            file,\n            api: ApiEnum.TRACK\n          })\n        );\n        return null;\n      }\n\n      return api.track(self, campaignSpecifier, userId, goalIdentifier, options);\n    } catch (err) {\n      this.logger.log(LogLevelEnum.ERROR, err.message);\n      return null;\n    }\n  }\n\n  /**\n   * This API method checks: Whether a feature is enabled or not for the given user\n   *\n   * @param {String} campaignKey       Unique key for a campaign\n   * @param {String} userId            Unique identifier for the user\n   * @param {Object} options           optional params - customVariables, variationTargetingVariables\n   *\n   * @return {Boolean}                 true if feature enabled, false otherwise\n   */\n  isFeatureEnabled(campaignKey, userId, options = {}) {\n    try {\n      let self = this;\n\n      // Check if returnPromiseFor is provided. If yes, return a promise instead of value\n      // i.e. wait till the network call is not successful\n      if (self.returnPromiseFor && (self.returnPromiseFor.isFeatureEnabled || self.returnPromiseFor.all)) {\n        self.logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CONFIG_RETURN_PROMISE, {\n            file,\n            method: ApiEnum.IS_FEATURE_ENABLED\n          })\n        );\n        return new Promise(resolve => {\n          if (this.optOut) {\n            this.logger.log(\n              LogLevelEnum.INFO,\n              LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n                file,\n                api: ApiEnum.IS_FEATURE_ENABLED\n              })\n            );\n            resolve(false);\n          } else {\n            let isFeatureEnabledApiResponse;\n            options.responseCallback = (_error, _response) => {\n              resolve(!!isFeatureEnabledApiResponse);\n            };\n            isFeatureEnabledApiResponse = api.isFeatureEnabled(self, campaignKey, userId, options);\n            // If we get null from the API i.e. no tracking call was sent\n            // In this case, respponseCallback will not be fired and hence we have to manually resolve the promise\n            if (DataTypeUtil.isNull(isFeatureEnabledApiResponse)) {\n              resolve(false);\n            } else if (DataTypeUtil.isObject(isFeatureEnabledApiResponse)) {\n              resolve(!!isFeatureEnabledApiResponse.isFeatureEnabled);\n            }\n          }\n        });\n      }\n\n      if (this.optOut) {\n        this.logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n            file,\n            api: ApiEnum.IS_FEATURE_ENABLED\n          })\n        );\n        return false;\n      }\n\n      const apiResponse = api.isFeatureEnabled(self, campaignKey, userId, options);\n\n      if (DataTypeUtil.isObject(apiResponse)) {\n        return !!apiResponse.isFeatureEnabled;\n      }\n\n      return !!apiResponse;\n    } catch (err) {\n      this.logger.log(LogLevelEnum.ERROR, err.message);\n      return false;\n    }\n  }\n\n  /**\n   * This API method: Return the variable for that variation(if Feature Test),\n   *    otherwise the default values being set in Feature\n   *\n   * @param {String} campaignKey   Unique key for a campaign\n   * @param {String} variableKey   Unique key for a feature's variable\n   * @param {String} userId        Unique identifier for the user\n   * @param {Object} options           optional params - customVariables, variationTargetingVariables\n   *\n   * @return {string|number|double|boolean|null} Variable value as is set in the VWO app i.e.\n   *                                             maintaining the data-type,\n   *                                             null if anything fails like campaign / variable not found\n   */\n  getFeatureVariableValue(campaignKey, variableKey, userId, options = {}) {\n    try {\n      let self = this;\n\n      // Check if returnPromiseFor is provided. If yes, return a promise instead of value\n      if (self.returnPromiseFor && (self.returnPromiseFor.getFeatureVariableValue || self.returnPromiseFor.all)) {\n        self.logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CONFIG_RETURN_PROMISE, {\n            file,\n            method: ApiEnum.GET_FEATURE_VARIABLE_VALUE\n          })\n        );\n        return new Promise(resolve => {\n          if (this.optOut) {\n            this.logger.log(\n              LogLevelEnum.INFO,\n              LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n                file,\n                api: ApiEnum.GET_FEATURE_VARIABLE_VALUE\n              })\n            );\n            resolve(null);\n          } else {\n            // since this API does not send any async call, we can simply resolve the returned value\n            resolve(api.getFeatureVariableValue(self, campaignKey, variableKey, userId, options));\n          }\n        });\n      }\n\n      if (this.optOut) {\n        this.logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n            file,\n            api: ApiEnum.GET_FEATURE_VARIABLE_VALUE\n          })\n        );\n        return null;\n      }\n\n      return api.getFeatureVariableValue(self, campaignKey, variableKey, userId, options);\n    } catch (err) {\n      this.logger.log(LogLevelEnum.ERROR, err.message);\n      return null;\n    }\n  }\n\n  /**\n   * This API method: Pushes the key-value tag pair for a particular user\n   *\n   * @param {String} tagKey                    tag key\n   * @param {String} tagValue                  tag Value\n   * @param {String} userId                    ID assigned to a user\n   *\n   * @return {Boolean}                    true if request is pushed to eventQueue, false if params are invalid or settings file is unavailable\n   */\n  push(tagKey, tagValue, userId) {\n    try {\n      let self = this;\n      let customDimensionMap;\n\n      if (arguments.length === 2) {\n        // Argument reshuffling.\n        customDimensionMap = tagKey;\n        userId = tagValue;\n\n        tagKey = ' ';\n        tagValue = ' ';\n      } else if (arguments.length === 3) {\n        customDimensionMap = {};\n      } else {\n        this.logger.log(\n          LogLevelEnum.ERROR,\n          LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.PUSH_INVALID_PARAMS, {\n            file,\n            method: ApiEnum.PUSH\n          })\n        );\n        return false;\n      }\n\n      // Check if returnPromiseFor is provided. If yes, return a promise instead of value\n      // i.e. wait till the network call is not successful\n      if (self.returnPromiseFor && (self.returnPromiseFor.push || self.returnPromiseFor.all)) {\n        self.logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CONFIG_RETURN_PROMISE, {\n            file,\n            method: ApiEnum.PUSH\n          })\n        );\n        return new Promise(resolve => {\n          if (this.optOut) {\n            this.logger.log(\n              LogLevelEnum.INFO,\n              LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n                file,\n                api: ApiEnum.PUSH\n              })\n            );\n            resolve(null);\n          } else {\n            let apiResponse;\n            let counter = 0;\n\n            const options = {\n              responseCallback: (_error, _response) => {\n                counter += 1;\n                // In case of multiple custom dimensions, when all are tracked, then only resolve\n                if (counter === FunctionUtil.objectValues(apiResponse).filter(Boolean).length) {\n                  resolve(apiResponse);\n                }\n              }\n            };\n            apiResponse = api.push(self, tagKey, tagValue, userId, customDimensionMap, options);\n            // If we get false from the API i.e. no tracking call was sent\n            // In this case, respponseCallback will not be fired and hence we have to manually resolve the promise\n            if (!apiResponse) {\n              resolve(false);\n            } else if (apiResponse && apiResponse.isDevelopmentMode) {\n              delete apiResponse.isDevelopmentMode;\n              resolve(apiResponse);\n            }\n          }\n        });\n      }\n\n      if (this.optOut) {\n        this.logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n            file,\n            api: ApiEnum.PUSH\n          })\n        );\n        return null;\n      }\n\n      return api.push(self, tagKey, tagValue, userId, customDimensionMap);\n    } catch (err) {\n      this.logger.log(LogLevelEnum.ERROR, err.message);\n      return false;\n    }\n  }\n\n  setOptOut() {\n    this.logger.log(\n      LogLevelEnum.INFO,\n      LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.OPT_OUT_API_CALLED, {\n        file\n      })\n    );\n\n    if (this.returnPromiseFor && (this.returnPromiseFor.optOut || this.returnPromiseFor.all)) {\n      return new Promise(resolve => {\n        this._destroyInstanceVariables();\n        if (this.batchEventsQueue) {\n          this.flushEvents().then(() => {\n            this.batchEventsQueue = undefined;\n            resolve(true);\n          });\n        } else {\n          resolve(true);\n        }\n      });\n    }\n\n    if (this.batchEventsQueue) {\n      this.flushEvents().then(() => {\n        this.batchEventsQueue = undefined;\n      });\n    }\n\n    this._destroyInstanceVariables();\n\n    return true;\n  }\n  /**\n   * Manually flush impression events to VWO which are queued in batch queue as per batchEvents config\n   */\n  flushEvents() {\n    if (typeof process.env !== 'undefined') {\n      return new Promise((resolve, _reject) => {\n        if (this.optOut) {\n          this.logger.log(\n            LogLevelEnum.INFO,\n            LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n              file,\n              api: 'flushEvents'\n            })\n          );\n          resolve({\n            status: false,\n            message: 'opted out'\n          });\n        } else {\n          const accountId = this.SettingsFileManager.getSettingsFile().accountId;\n\n          if (this.batchEventsQueue) {\n            customEventUtil.getInstance().once('batchCallCompleteion', (status, message) => {\n              if (status) {\n                resolve({\n                  status: true,\n                  message: message || 'Batch call sent to VWO'\n                });\n              } else {\n                resolve({\n                  status: false,\n                  message: message || 'Batch call could not be processed'\n                });\n              }\n            });\n\n            this.batchEventsQueue.flushAndClearTimer();\n\n            return;\n          }\n\n          this.logger.log(\n            LogLevelEnum.ERROR,\n            LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.NO_BATCH_QUEUE, {\n              file,\n              accountId\n            })\n          );\n\n          resolve({\n            status: false,\n            message: 'No batchEvents config present in launch API'\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   * Fetch latest settings-file and update so that vwoClientInstance could use latest settings\n   * Helpful especially when using webhooks\n   *\n   * @param {Number} accountId\n   * @param {String} sdkKey\n   *\n   * @return {Promise}\n   */\n  getAndUpdateSettingsFile(accountId, sdkKey) {\n    if (this.optOut) {\n      this.logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n          file,\n          api: 'getAndUpdateSettingsFile'\n        })\n      );\n      return new Promise(resolve => {\n        resolve(null);\n      });\n    }\n    return this.SettingsFileManager.getAndUpdateSettingsFile(accountId, sdkKey);\n  }\n\n  _destroyInstanceVariables() {\n    this.userStorageService = undefined;\n    this.SettingsFileManager = undefined;\n    this.usageStats = undefined;\n    this.eventQueue = undefined;\n    this.optOut = true;\n  }\n}\n\nmodule.exports = VWO;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst activate = require('./activate');\nconst getVariation = require('./getVariation');\nconst track = require('./track');\nconst isFeatureEnabled = require('./isFeatureEnabled');\nconst getFeatureVariableValue = require('./getFeatureVariableValue');\nconst push = require('./push');\n\nmodule.exports = {\n  activate,\n  getVariation,\n  track,\n  isFeatureEnabled,\n  getFeatureVariableValue,\n  push\n};\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst Constants = require('../constants');\nconst ApiEnum = require('../enums/ApiEnum');\n\nconst DecisionUtil = require('../utils/DecisionUtil');\nconst CampaignUtil = require('../utils/CampaignUtil');\nconst ImpressionUtil = require('../utils/ImpressionUtil');\nconst ValidateUtil = require('../utils/ValidateUtil');\nconst DataTypeUtil = require('../utils/DataTypeUtil');\n\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst EventEnum = require('../enums/EventEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\n\nconst file = FileNameEnum.Activate;\n\n/**\n * This API method: Gets the variation assigned for the user for the campaign and send the metrics to VWO server\n *\n * 1. Validates the arguments being passed\n * 2. Checks if user is eligible to get bucketed into the campaign,\n * 3. Assigns the determinitic variation to the user(based on userId), if user becomes part of campaign\n *    If userStorageService is used, it will look into it for the variation and if found, no further processing is done\n * 4. Sends an impression call to VWO server to track user\n *\n * @param {Object} vwoInstance       VWO instance which has logger, settingsFile etc.\n * @param {String} campaignKey       unique campaign key specified in VWO app\n * @param {String} userId            ID assigned to a user\n * @param {Object} options           Optional params\n *\n * @return {String|null}             If variation is assigned then variation-name otherwise null in case of user not becoming part\n */\nfunction activate(vwoInstance, campaignKey, userId, options = {}) {\n  const api = ApiEnum.ACTIVATE;\n  let areParamsValid = false;\n  if (DataTypeUtil.isObject(options)) {\n    var {\n      customVariables,\n      variationTargetingVariables,\n      userStorageData,\n      shouldTrackReturningUser,\n      metaData,\n      responseCallback\n    } = options;\n    // Check if arguments have valid data-type\n    if (\n      ValidateUtil.areValidParamsForAPIMethod({\n        method: ApiEnum.ACTIVATE,\n        campaignKey,\n        userId,\n        customVariables,\n        variationTargetingVariables,\n        userStorageData,\n        shouldTrackReturningUser,\n        metaData,\n        responseCallback\n      })\n    ) {\n      areParamsValid = true;\n    }\n  }\n\n  if (areParamsValid === false) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.ACTIVATE_API_MISSING_PARAMS, {\n        file\n      })\n    );\n    return null;\n  }\n\n  // Get the cached configuration\n  let config = vwoInstance.SettingsFileManager.getConfig();\n  let settingsFile = vwoInstance.SettingsFileManager.getSettingsFile(api);\n\n  // If no settings are found, simply return no variation\n  if (!settingsFile) {\n    return null;\n  }\n\n  shouldTrackReturningUser = shouldTrackReturningUser || config.shouldTrackReturningUser || false;\n\n  // Get the campaign settings based on campaignKey from the settings\n  let campaign = CampaignUtil.getCampaign(settingsFile, campaignKey);\n\n  // If matching campaign is not found with campaignKey or if found but is in not RUNNING state, simply return no variation\n  if (!campaign || campaign.status !== Constants.STATUS_RUNNING) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.CAMPAIGN_NOT_RUNNING, {\n        file,\n        campaignKey,\n        api\n      })\n    );\n\n    return null;\n  }\n\n  if (!CampaignUtil.isAbCampaign(campaign)) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.INVALID_API, {\n        file,\n        campaignKey,\n        campaignType: campaign.type,\n        userId,\n        api\n      })\n    );\n\n    return null;\n  }\n\n  // Once the matching RUNNING campaign is found, assign the deterministic variation to the userId provided\n  const { variationId, variationName, isStoredVariation } = DecisionUtil.getVariation(\n    config,\n    settingsFile,\n    campaign,\n    campaignKey,\n    userId,\n    customVariables,\n    variationTargetingVariables,\n    userStorageData,\n    metaData,\n    true,\n    undefined,\n    api\n  );\n\n  // Check if variation-name has been assigned to the userId. If not, return no variation\n  if (!ValidateUtil.isValidValue(variationName)) {\n    vwoInstance.logger.log(\n      LogLevelEnum.INFO,\n      LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.INVALID_VARIATION_KEY, {\n        file,\n        userId,\n        campaignKey: campaignKey\n      })\n    );\n    return null;\n  }\n\n  // check if variation found from storage. return it without sending a call to VWO server\n  if (isStoredVariation && !shouldTrackReturningUser) {\n    vwoInstance.logger.log(\n      LogLevelEnum.INFO,\n      LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.USER_ALREADY_TRACKED, {\n        file,\n        userId,\n        campaignKey,\n        api\n      })\n    );\n    return { variationName };\n  }\n\n  // Variation found...let VWO server knows about it to show report stats\n  if (config.batchEvents) {\n    let properties = ImpressionUtil.buildBatchEventForTrackingUser(settingsFile, campaign.id, variationId, userId);\n    vwoInstance.batchEventsQueue.enqueue(properties);\n  } else if (settingsFile.isEventArchEnabled) {\n    let properties = ImpressionUtil.getEventsBaseProperties(\n      settingsFile,\n      EventEnum.VWO_VARIATION_SHOWN,\n      vwoInstance.usageStats.getUsageStats()\n    );\n    let payload = ImpressionUtil.getTrackUserPayloadData(\n      settingsFile,\n      userId,\n      EventEnum.VWO_VARIATION_SHOWN,\n      campaign.id,\n      variationId\n    );\n    vwoInstance.eventQueue.process(config, properties, vwoInstance, { payload, responseCallback });\n  } else {\n    let properties = ImpressionUtil.buildEventForTrackingUser(\n      settingsFile,\n      campaign.id,\n      variationId,\n      userId,\n      vwoInstance.usageStats.getUsageStats()\n    );\n    vwoInstance.eventQueue.process(config, properties, vwoInstance, { responseCallback });\n  }\n\n  if (config.isDevelopmentMode) {\n    return { variationName };\n  }\n\n  return variationName;\n}\n\nmodule.exports = activate;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst ValidateUtil = require('../utils/ValidateUtil');\n\nconst Bucketer = require('./BucketingService');\n\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\nconst logger = logging.getLogger();\n\nconst VariationDecider = {\n  /**\n   * Returns the Variation Allotted to User\n   *\n   * @param {String} userId the unique ID assigned to User\n   * @param {Object} campaign\n   *\n   * @return {Object} Variation object allotted to User\n   */\n  getVariationAllotted: (userId, campaign) => {\n    let response = {\n      variation: null,\n      variationId: null,\n      variationName: null\n    };\n\n    if (!ValidateUtil.isValidValue(userId)) {\n      logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.INVALID_USER_ID, {\n          file: FileNameEnum.BucketingService,\n          userId,\n          method: 'getVariationAllotted'\n        })\n      );\n\n      return response;\n    }\n\n    if (Bucketer.isUserPartOfCampaign(userId, campaign)) {\n      let variation = VariationDecider.getVariationOfCampaignForUser(userId, campaign) || {};\n\n      response.variation = variation;\n      response.variationId = variation.id;\n      response.variationName = variation.name;\n\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.GOT_VARIATION_FOR_USER, {\n          file: FileNameEnum.VariationDecider,\n          variationName: variation.name,\n          userId,\n          campaignKey: campaign.key,\n          method: 'getVariationAllotted'\n        })\n      );\n    } else {\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.USER_NOT_PART_OF_CAMPAIGN, {\n          file: FileNameEnum.VariationDecider,\n          userId,\n          campaignKey: campaign.key,\n          method: 'getVariationAllotted'\n        })\n      );\n    }\n\n    return response;\n  },\n\n  /**\n   * Assigns random variation ID to a particular user depending on the PercentTraffic.\n   * Makes user a part of campaign if user's included in Traffic.\n   *\n   * @param {String} userId the unique ID assigned to a user\n   * @param {Object} campaign the Campaign of which user is to be made a part of\n   *\n   * @return {Object|null} Variation allotted to User\n   */\n  getVariationOfCampaignForUser: (userId, campaign) => {\n    if (!ValidateUtil.isValidValue(userId) || !campaign) {\n      return null;\n    }\n\n    let variation = Bucketer.bucketUserToVariation(userId, campaign);\n\n    if (variation && variation.name) {\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.GOT_VARIATION_FOR_USER, {\n          file: FileNameEnum.VariationDecider,\n          variationName: variation.name,\n          userId,\n          campaignKey: campaign.key\n        })\n      );\n      return {\n        variation,\n        name: variation.name,\n        id: variation.id\n      };\n    }\n\n    logger.log(\n      LogLevelEnum.INFO,\n      LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.USER_GOT_NO_VARIATION, {\n        file: FileNameEnum.VariationDecider,\n        userId,\n        campaignKey: campaign.key\n      })\n    );\n\n    return null;\n  }\n};\n\nmodule.exports = VariationDecider;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DataTypeEnum = {\n  NUMBER: 'number',\n  STRING: 'string',\n  // FUNCTION: 'function',\n  BOOLEAN: 'boolean',\n  OBJECT: 'object'\n};\n\nmodule.exports = DataTypeEnum;\n","(function(){\n  var _global = this;\n\n  /**\n   * JS Implementation of MurmurHash2\n   *\n   * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n   * @see http://github.com/garycourt/murmurhash-js\n   * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n   * @see http://sites.google.com/site/murmurhash/\n   *\n   * @param {string} str ASCII only\n   * @param {number} seed Positive integer only\n   * @return {number} 32-bit positive integer hash\n   */\n  function MurmurHashV2(str, seed) {\n    var\n      l = str.length,\n      h = seed ^ l,\n      i = 0,\n      k;\n\n    while (l >= 4) {\n      k =\n        ((str.charCodeAt(i) & 0xff)) |\n        ((str.charCodeAt(++i) & 0xff) << 8) |\n        ((str.charCodeAt(++i) & 0xff) << 16) |\n        ((str.charCodeAt(++i) & 0xff) << 24);\n\n      k = (((k & 0xffff) * 0x5bd1e995) + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n      k ^= k >>> 24;\n      k = (((k & 0xffff) * 0x5bd1e995) + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n\n    h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16)) ^ k;\n\n      l -= 4;\n      ++i;\n    }\n\n    switch (l) {\n    case 3: h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n    case 2: h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n    case 1: h ^= (str.charCodeAt(i) & 0xff);\n            h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n    }\n\n    h ^= h >>> 13;\n    h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n    h ^= h >>> 15;\n\n    return h >>> 0;\n  };\n\n  /**\n   * JS Implementation of MurmurHash3 (r136) (as of May 20, 2011)\n   *\n   * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n   * @see http://github.com/garycourt/murmurhash-js\n   * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n   * @see http://sites.google.com/site/murmurhash/\n   *\n   * @param {string} key ASCII only\n   * @param {number} seed Positive integer only\n   * @return {number} 32-bit positive integer hash\n   */\n  function MurmurHashV3(key, seed) {\n    var remainder, bytes, h1, h1b, c1, c1b, c2, c2b, k1, i;\n\n    remainder = key.length & 3; // key.length % 4\n    bytes = key.length - remainder;\n    h1 = seed;\n    c1 = 0xcc9e2d51;\n    c2 = 0x1b873593;\n    i = 0;\n\n    while (i < bytes) {\n        k1 =\n          ((key.charCodeAt(i) & 0xff)) |\n          ((key.charCodeAt(++i) & 0xff) << 8) |\n          ((key.charCodeAt(++i) & 0xff) << 16) |\n          ((key.charCodeAt(++i) & 0xff) << 24);\n      ++i;\n\n      k1 = ((((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16))) & 0xffffffff;\n      k1 = (k1 << 15) | (k1 >>> 17);\n      k1 = ((((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16))) & 0xffffffff;\n\n      h1 ^= k1;\n          h1 = (h1 << 13) | (h1 >>> 19);\n      h1b = ((((h1 & 0xffff) * 5) + ((((h1 >>> 16) * 5) & 0xffff) << 16))) & 0xffffffff;\n      h1 = (((h1b & 0xffff) + 0x6b64) + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16));\n    }\n\n    k1 = 0;\n\n    switch (remainder) {\n      case 3: k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\n      case 2: k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\n      case 1: k1 ^= (key.charCodeAt(i) & 0xff);\n\n      k1 = (((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n      k1 = (k1 << 15) | (k1 >>> 17);\n      k1 = (((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n      h1 ^= k1;\n    }\n\n    h1 ^= key.length;\n\n    h1 ^= h1 >>> 16;\n    h1 = (((h1 & 0xffff) * 0x85ebca6b) + ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;\n    h1 ^= h1 >>> 13;\n    h1 = ((((h1 & 0xffff) * 0xc2b2ae35) + ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16))) & 0xffffffff;\n    h1 ^= h1 >>> 16;\n\n    return h1 >>> 0;\n  }\n\n  var murmur = MurmurHashV3;\n  murmur.v2 = MurmurHashV2;\n  murmur.v3 = MurmurHashV3;\n\n  if (typeof(module) != 'undefined') {\n    module.exports = murmur;\n  } else {\n    var _previousRoot = _global.murmur;\n    murmur.noConflict = function() {\n      _global.murmur = _previousRoot;\n      return murmur;\n    }\n    _global.murmur = murmur;\n  }\n}());\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Took reference from: \"loglevel\" - https://github.com/pimterry/loglevel\n *\n * Name: loglevel\n * Published Name: loglevel\n * URL: https://github.com/pimterry/loglevel\n * Description: Minimal lightweight logging for JavaScript, adding reliable log level methods to wrap any available console.log methods\n * Author: Tim Perry (https://github.com/pimterry)\n * LICENSE: MIT License\n * Local Modifications: This library is not used as a dependency. Source code was referenced and is modified as per requirements.\n *\n */\nconst { LogLevelEnum, LogNumberLevel } = require('../../enums/LogLevelEnum');\nconst LogMessageEnum = require('../../enums/LogMessageEnum');\nconst LogMessageUtil = require('../../utils/LogMessageUtil');\n\nconst ConsoleLogManager = require('./ConsoleLogManager');\n\nlet globalLogLevel = LogLevelEnum.NOTSET;\nlet isColoredLogEnabled = false;\nlet globalLogHandler = new ConsoleLogManager();\n\nclass LogManager {\n  constructor(name) {\n    this.name = name;\n    this.isColoredLogEnabled = isColoredLogEnabled;\n  }\n\n  _customLog(level, message) {\n    if (level < globalLogLevel) {\n      return;\n    }\n\n    globalLogHandler.log(level, message);\n  }\n\n  log(level, message, disableLogs = false) {\n    if (disableLogs) {\n      return;\n    }\n    try {\n      this._customLog(level, message);\n    } catch (err) {\n      console.error('VWO: Could not log.', err);\n    }\n  }\n\n  info(message) {\n    this._customLog(LogLevelEnum.INFO, message);\n  }\n  debug(message) {\n    this._customLog(LogLevelEnum.DEBUG, message);\n  }\n  warn(message) {\n    this._customLog(LogLevelEnum.WARN, message);\n  }\n  error(message) {\n    this._customLog(LogLevelEnum.ERROR, message);\n  }\n}\n\nfunction getLogger(name) {\n  return new LogManager(name);\n}\n\nfunction setLogHandler(logger) {\n  globalLogHandler = logger;\n}\n\nfunction setLogLevel(level) {\n  if (level === undefined) {\n    globalLogLevel = LogLevelEnum.ERROR;\n  } else {\n    globalLogLevel = level;\n  }\n}\n\nfunction getLogLevel() {\n  return globalLogLevel;\n}\n\nfunction setLogColorMode(value) {\n  isColoredLogEnabled = value;\n  globalLogHandler.isColoredLogEnabled = isColoredLogEnabled;\n}\n\nfunction getLogColorMode() {\n  return isColoredLogEnabled;\n}\n\nmodule.exports = {\n  LogLevelEnum,\n  LogNumberLevel,\n  LogMessageUtil,\n  LogMessageEnum,\n  getLogger,\n  setLogHandler,\n  setLogLevel,\n  getLogLevel,\n  LogManager,\n  setLogColorMode,\n  getLogColorMode,\n  globalLogHandler\n};\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst AnsiColorEnum = {\n  BOLD: '\\x1b[1m',\n  CYAN: '\\x1b[36m',\n  GREEN: '\\x1b[32m',\n  LIGHTBLUE: '\\x1b[94m',\n  RED: '\\x1b[31m',\n  RESET: '\\x1b[0m',\n  WHITE: '\\x1b[30m',\n  YELLOW: '\\x1b[33m'\n};\n\nmodule.exports = AnsiColorEnum;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule.exports = {\n  DEBUG_MESSAGES: {\n    CUSTOM_LOGGER_USED: '({file}): Custom logger used',\n    GETTING_STORED_VARIATION:\n      '({file}): Got stored variation for User ID:{userId} of Campaign:{campaignKey} as Variation:{variationName}, found in UserStorageService',\n    GOT_FROM_CACHE: '({file}): Got data from cache for the finalKey:{finalKey}',\n    GOT_VARIATION_FOR_USER:\n      '({file}): User ID:{userId} for Campaign:{campaignKey} got variationName:{variationName} inside method:{method}',\n    IMPRESSION_FOR_PUSH: '({file}): impression built for pushing - {properties}',\n    IMPRESSION_FOR_TRACK_GOAL: '({file}): impression built for track-goal - {properties}',\n    IMPRESSION_FOR_TRACK_USER: '({file}): impression built for track-user - {properties}',\n    IMPRESSION_FOR_EVENT_ARCH_TRACK_USER:\n      '({file}): impression built for vwo_variationShown event for account ID:{a}, user ID:{u}, and campaign ID:{c}',\n    IMPRESSION_FOR_EVENT_ARCH_TRACK_GOAL:\n      '({file}): impression built for {goalName} event for accountId:{a}, user ID:{u}, and campaign ID:{c}',\n    IMPRESSION_FOR_EVENT_ARCH_PUSH:\n      '({file}): impression built for visitor property:{property} for accountId:{a} and user ID:{u}',\n    LOG_LEVEL_SET: '({file}): Log level set to {level}',\n    NO_STORED_VARIATION:\n      '({file}): No stored variation for User ID:{userId} for Campaign:{campaignKey} found in UserStorageService',\n    NO_USER_STORAGE_SERVICE_GET: '({file}): No UserStorageService to get stored data',\n    NO_USER_STORAGE_SERVICE_SET: '({file}): No UserStorageService to set data',\n    // REMOVE_FROM_CACHE: '({file}): Removed data from cache for the finalKey:{finalKey}',\n    RESET_CACHE: '({file}): Cache Reset on VWO instantiation',\n    SDK_INITIALIZED: '({file}): SDK properly initialzed',\n    SEGMENTATION_SKIPPED:\n      '({file}): For userId:{userId} of Campaign:{campaignKey}, segment was missing, hence skipping segmentation{variation}',\n    SEGMENTATION_STATUS:\n      '({file}): For userId:{userId} of Campaign:{campaignKey} with variables:{customVariables} {status} {segmentationType} {variation}',\n    SET_DEVELOPMENT_MODE: '({file}): DEVELOPMENT mode is ON',\n    SET_IN_CACHE: '({file}): Set data in cache for the finalKey:{finalKey}',\n    SETTINGS_FILE_PROCESSED: '({file}): Settings file processed',\n    USER_HASH_BUCKET_VALUE: '({file}): User ID:{userId} having hash:{hashValue} got bucketValue:{bucketValue}',\n    USER_NOT_PART_OF_Campaign:\n      '({file}): userId:{userId} for Campaign:{campaignKey} did not become part of campaign, method:{method}',\n    UUID_FOR_USER: '({file}): Uuid generated for User ID:{userId} and accountId:{accountId} is {desiredUuid}',\n    VALID_CONFIGURATION: '({file}): SDK configuration and account settings are valid',\n    VARIATION_HASH_BUCKET_VALUE:\n      '({file}): User ID:{userId} for Campaign:{campaignKey} having percent traffic:{percentTraffic} got hash-value:{hashValue} and bucket value:{bucketValue}',\n    WHITELISTING_SKIPPED: '({file}): For userId:{userId} of Campaign:{campaignKey}, whitelisting was skipped',\n    STARTED_POLLING: '({file}): Polling of settings-file is registered with a periodic interval of {pollingInterval}ms',\n    BATCH_EVENT_LIMIT_EXCEEDED:\n      '({file}): Impression event - {endPoint} failed due to exceeding payload size. Parameter eventsPerRequest in batchEvents config in launch API has value:{eventsPerRequest} for accountId:{accountId}. Please read the official documentation for knowing the size limits',\n    BULK_NOT_PROCESSED:\n      \"({file}): Batch events couldn't be received by VWO. Calling Flush Callback with error and data\",\n    BEFORE_FLUSHING:\n      '({file}): Flushing events queue {manually} having {length} events for account:{accountId}. {timer}',\n    FLUSH_EVENTS: '{{file}}: Manually flushing events for account:{accountId} having {queueLength} events',\n    CAMPAIGN_NOT_ACTIVATED:\n      '({file}): Campaign:{campaignKey} for User ID:{userId} is not yet activated for API:{api}. Use activate API to activate A/B test or isFeatureEnabled API to activate Feature Test.',\n    GOT_ELIGIBLE_CAMPAIGNS:\n      '({file}): Campaigns: {eligibleCampaignKeys} are eligible, {inEligibleText} are ineligible from the Group:{groupName} for the User Id:{userId}'\n  },\n  ERROR_MESSAGES: {\n    API_HAS_CORRUPTED_SETTINGS_FILE:\n      '({file}): \"{api}\" API has corrupted settings-file. Please check or reach out to VWO support',\n    ACTIVATE_API_MISSING_PARAMS:\n      '({file}): \"activate\" API got bad parameters. It expects campaignKey(String) as first, userId(String) as second and options(optional Object) as third argument',\n    CAMPAIGN_NOT_RUNNING:\n      '({file}): API used:{api} - Campaign:{campaignKey} is not RUNNING. Please verify from VWO App',\n    GET_FEATURE_VARIABLE_MISSING_PARAMS: `({file}): \"getFeatureVariableValue\" API got bad parameters. It expects campaignKey(String) as first, variableKey(String) as second, userId(String) as third, and options(optional Object) as fourth argument`,\n    GET_VARIATION_API_MISSING_PARAMS:\n      '({file}): \"getVariation\" API got bad parameters. It expects campaignKey(String) as first, userId(String) as second and options(optional Object) as third argument',\n    IMPRESSION_FAILED: '({file}): Impression event could not be sent to VWO - {endPoint}. Reason: {err}',\n    INVALID_API:\n      '({file}): {api} API is not valid for Campaign:{campaignKey} of type:{campaignType} for User ID:{userId}',\n    INVALID_SETTINGS_FILE: '({file}): Settings-file fetched is not proper',\n    IS_FEATURE_ENABLED_API_MISSING_PARAMS:\n      '({file}): \"isFeatureEnabled\" API got bad parameters. It expects Campaign(String) as first, userId(String) as second and options(optional Object) as third argument',\n    GET_USER_STORAGE_SERVICE_FAILED: '({file}): Getting data from UserStorageService failed for User ID:{userId}',\n    SDK_CONFIG_CORRUPTED: '({file}): config passed to launch API is not a valid JSON object',\n    PUSH_INVALID_PARAMS:\n      '({file}): \"{method}\" API got bad parameters. It expects tagKey(String) as first, tagValue(String) as second and userId(String) as third argument',\n    PUSH_INVALID_PARAMS_CD_MAP:\n      '({file}): \"{method}\" API got bad parameters. It expects customDimensionMap(String, String) as first and userId(String) as second argument',\n    REGEX_CREATION_FAILED: '({file}): Regex cound not be processed',\n    SET_USER_STORAGE_SERVICE_FAILED: '({file}): Saving data into UserStorageService failed for User ID:{userId}',\n    SEGMENTATION_ERROR:\n      '({file}): Error while segmenting the user:{userId} of Campaign:{campaignKey}{variation} with customVariables:{customVariables}. Error message: {err}',\n    SETTINGS_FILE_CORRUPTED: '({file}): Settings file is corrupted. Please contact VWO Support for help',\n    TAG_KEY_LENGTH_EXCEEDED: '({file}): Length of tagKey:{tagKey} for userID:{userId} can not be greater than 255',\n    TAG_VALUE_LENGTH_EXCEEDED:\n      '({file}): Length of value:{tagValue} of tagKey:{tagKey} for userID:{userId} can not be greater than 255',\n    TRACK_API_GOAL_NOT_FOUND:\n      '({file}): Goal:{goalIdentifier} not found for Campaign:{campaignKey} and userId:{userId}',\n    TRACK_API_MISSING_PARAMS:\n      '({file}): \"track\" API got bad parameters. It expects campaignKey(String or Array of strings or null or undefined) as first, userId(String) as second, goalIdentifier(String/Number) as third and options(optional Object) as fourth argument',\n    TRACK_API_REVENUE_NOT_PASSED_FOR_REVENUE_GOAL:\n      '({file}): Revenue value should be passed for revenue goal:{goalIdentifier} for Campaign:{campaignKey} and userId:{userId}',\n    UNABLE_TO_CAST_VALUE: `({file}): Unable to cast value:{variableValue} to type:{variableType}, returning null`,\n    VARIABLE_NOT_FOUND: `({file}): Variable:{variableKey} for User ID:{userId} is not found in settings-file. Returning null`,\n    NO_CAMPAIGN_FOUND: `({file}): No campaign found for goalIdentifier:{goalIdentifier}. Please verify from VWO app.`,\n    POLLING_FAILED: '({file}): Failed fetching of Settings-file via polling for the accountId:{accountId}',\n    POLLING_INTERVAL_INVALID: '({file}): pollingParameter provided is not of type number',\n    SDK_KEY_NOT_PROVIVED: '({file}): sdkKey is required along with pollingInterval to poll the settings-file',\n    SDK_KEY_NOT_STRING: '({file}): sdkKey provided is not of type string',\n    INVALID_USER_ID: '({file}): Invalid userId:{userId} passed to {method} of this file',\n    EVENT_BATCHING_NOT_OBJECT: '({file}): Batch events settings are not of type object',\n    NO_BATCH_QUEUE:\n      '{{file}}: No batch queue present for account:{accountId} when calling flushEvents API. Check batchEvents config in launch API'\n  },\n  INFO_MESSAGES: {\n    FEATURE_ENABLED_FOR_USER: `({file}): Campaign:{campaignKey} for user ID:{userId} is enabled`,\n    FEATURE_NOT_ENABLED_FOR_USER: `({file}): Campaign:{campaignKey} for user ID:{userId} is not enabled`,\n    IMPRESSION_SUCCESS:\n      '({file}): Impression event - {endPoint} was successfully received by VWO having main keys: accountId:{accountId}, {mainKeys}',\n    IMPRESSION_SUCCESS_FOR_EVENT_ARCH:\n      '({file}): Impression for {event} - {endPoint} was successfully received by VWO for account ID:{a}',\n    INVALID_VARIATION_KEY: '({file}): Variation was not assigned to User ID:{userId} for Campaign:{campaignKey}',\n    GETTING_DATA_USER_STORAGE_SERVICE: '({file}): Getting data from UserStorageService for User ID:{userId} successful',\n    SETTING_DATA_USER_STORAGE_SERVICE: '({file}): Setting data into UserStorageService for User ID:{userId} successful',\n    SEGMENTATION_STATUS:\n      '({file}): UserId:{userId} of Campaign:{campaignKey} with variables:{customVariables} {status} {segmentationType} {variation}',\n    USER_GOT_NO_VARIATION: '({file}): User ID:{userId} for Campaign:{campaignKey} did not allot any variation',\n    USER_RECEIVED_VARIABLE_VALUE: `({file}): Value for variable:{variableKey} of feature flag:{campaignKey} is:{variableValue} for user:{userId}`,\n    VARIABLE_NOT_USED_RETURN_DEFAULT_VARIABLE_VALUE: `({file}): Variable:{variableKey} is not used in variation:{variationName}. Returning default value`,\n    VARIATION_ALLOCATED: '({file}): User ID:{userId} of Campaign:{campaignKey} got variation:{variationName}',\n    NO_VARIATION_ALLOCATED: '({file}): User ID:{userId} of Campaign:{campaignKey} did not get any variation',\n    VARIATION_RANGE_ALLOCATION:\n      '({file}): Campaign:{campaignKey} having variation:{variationName} with weight:{variationWeight} got range as: ( {start} - {end} ))',\n    GOAL_ALREADY_TRACKED:\n      '({file}): Goal:{goalIdentifier} of Campaign:{campaignKey} for User ID:{userId} has already been tracked earlier. Skipping now',\n    USER_ALREADY_TRACKED:\n      '({file}): User ID:{userId} for Campaign:{campaignKey} has already been tracked earlier for \"{api}\" API. Skipping now',\n    POLLING_SUCCESS: '({file}): Settings-file fetched successfully via polling for the accountId:{accountId}',\n    SETTINGS_FILE_UPDATED:\n      '({file}): vwo-sdk instance is updated with the latest settings-file for the accountId:{accountId}',\n    USER_ELIGIBILITY_FOR_CAMPAIGN: '({file}): Is User ID:{userId} part of campaign? {isUserPart}',\n    GOT_VARIATION_FOR_USER:\n      '({file}): userId:{userId} for campaign:{campaignTestKey} got variationName:{variationName}',\n    BULK_IMPRESSION_SUCCESS:\n      '({file}): Impression event - {endPoint} was successfully received by VWO having accountId:{a}',\n    AFTER_FLUSHING: '({file}): Events queue having {length} events has been flushed {manually}',\n    SETTINGS_NOT_UPDATED: '{{file}}: Settings-file fetched are same as earlier fetched settings',\n    GOT_STORED_VARIATION:\n      '({file}): Got stored variation for User ID:{userId} of Campaign:{campaignKey} as Variation:{variationName}, found in UserStorageService',\n    CAMPAIGN_NOT_ACTIVATED: '({file}): Activate the campaign:{campaignKey} for User ID:{userId} to {reason}.',\n    GOT_WINNER_CAMPAIGN:\n      '({file}): Campaign:{campaignKey} is selected from the mutually exclusive group:{groupName} for the User ID:{userId}.',\n    GOT_ELIGIBLE_CAMPAIGNS:\n      '({file}): Got {noOfEligibleCampaigns} eligible winners out of {noOfGroupCampaigns} campaigns from the Group:{groupName} and for User ID:{userId}',\n    CALLED_CAMPAIGN_NOT_WINNER:\n      '({file}): Campaign:{campaignKey} does not qualify from the mutually exclusive group:{groupName} for User ID:{userId}',\n    OTHER_CAMPAIGN_SATISFIES_WHITELISTING_STORAGE:\n      '({file}): Campaign:{campaignKey} of Group:{groupName} satisfies {type} for User ID:{userId}',\n    OPT_OUT_API_CALLED:\n      '({file}): You have opted out for not tracking i.e. all API calls will stop functioning and will simply early return',\n    API_NOT_ENABLED:\n      '({file}): {api} API is disabled as you opted out for tracking. Reinitialize the SDK to enable the normal functioning of all APIs.',\n    DEV_MODE_ON: '({file}): isDevelopmentMode is set to true. No tracking call is made to VWO server.',\n    CONFIG_RETURN_PROMISE: '({file}): {method} API returns a promise as returnPromiseFor is set to true for this API'\n  },\n  WARNING_MESSAGES: {}\n};\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DataTypeUtil = require('./DataTypeUtil');\n\nconst nargs = /\\{([0-9a-zA-Z_]+)\\}/g;\n\nlet LogMessageUtil = {\n  /**\n   * Took reference from: string-template\n   *\n   * Name: string-template\n   * Published Name: string-template\n   * URL: https://github.com/Matt-Esch/string-template\n   * Description: A lightweight string replace engine for text-based templates\n   * Author: Matt-Esch (https://github.com/Matt-Esch)\n   * License: MIT License\n   * Local Modifications: This library is not used as a dependency.\n   *       Source code was referenced and is modified as per requirements.\n   */\n  build: (template, data) => {\n    try {\n      return template.replace(nargs, (match, key, index) => {\n        let result;\n        let isKey;\n\n        if (template[index - 1] === '{' && template[index + match.length] === '}') {\n          return key;\n        } else {\n          isKey = data.hasOwnProperty(key);\n\n          if (isKey) {\n            let value = data[key];\n\n            if (DataTypeUtil.isFunction(value)) {\n              value = data[key]();\n            }\n            result = value;\n          } else {\n            result = null;\n          }\n          if (result === null || result === undefined) {\n            return '';\n          }\n\n          return result;\n        }\n      });\n    } catch (err) {\n      return template;\n    }\n  }\n};\n\nmodule.exports = LogMessageUtil;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst { getCurrentTime } = require('../../utils/FunctionUtil');\nconst { LogLevelEnum, LogLevelInfoEnum, LogLevelColorInfoEnum } = require('../../enums/LogLevelEnum');\n\nclass ConsoleLogManager {\n  constructor() {\n    this.logLevel = LogLevelEnum.NOTSET;\n    this.prefix = `VWO-SDK`;\n    this.isColoredLogEnabled = false;\n  }\n\n  log(level, message) {\n    if (!this.shouldLog(level)) {\n      return;\n    }\n\n    let logMessage;\n    if (this.isColoredLogEnabled) {\n      logMessage = `${this.prefix} - ${LogLevelColorInfoEnum[level]} ${getCurrentTime()} ${message}`;\n    } else {\n      logMessage = `${this.prefix} - ${LogLevelInfoEnum[level]} ${getCurrentTime()} ${message}`;\n    }\n\n    this.consoleLog(level, [logMessage]);\n  }\n\n  shouldLog(targetLogLevel) {\n    return targetLogLevel >= this.logLevel;\n  }\n\n  setLogLevel(level) {\n    if (level === undefined) {\n      this.logLevel = LogLevelEnum.ERROR;\n    } else {\n      this.logLevel = level;\n    }\n  }\n\n  consoleLog(level, logArguments) {\n    switch (level) {\n      case LogLevelEnum.INFO:\n        console.info.apply(console, logArguments);\n        break;\n      case LogLevelEnum.WARN:\n        console.warn.apply(console, logArguments);\n        break;\n      case LogLevelEnum.ERROR:\n        console.error.apply(console, logArguments);\n        break;\n      default:\n        console.log.apply(console, logArguments);\n        break;\n    }\n  }\n}\n\nmodule.exports = ConsoleLogManager;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule.exports = {\n  PASSED: 'passed',\n  FAILED: 'failed'\n};\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst SegmentEnum = require('../enums/segment');\nconst { getKeyValue } = require('../utils/ObjectUtil');\nconst { operandCustomVariablesParser, operandUserParser } = require('../utils/SegmentUtil');\nconst logging = require('../services/logging');\nconst DataTypeUtil = require('../utils/DataTypeUtil');\nconst FileNameEnum = require('../enums/FileNameEnum');\n\nconst { AND, OR, NOT } = SegmentEnum.SegmentOperatorTypes;\nconst { CUSTOM_VARIABLE, USER } = SegmentEnum.SegmentOperandTypes;\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\nconst file = FileNameEnum.SegmentEvaluator;\n\nconst logger = logging.getLogger();\n\nmodule.exports = SegmentEvaluator;\n/**\n * This method: A parser which recursively evaluates the expression tree represented by dsl\n *\n * @param {Object} dsl                     The segments defined in the campaing\n * @param {Object} customVariables         Key/value pair of custom_attributs properties\n *\n * @return {Boolean}                       true if user is to be made part of campaign, else false\n */\nfunction evaluator(dsl, customVariables) {\n  let { key, value } = getKeyValue(dsl);\n  let operator = key;\n  let subDsl = value;\n  if (operator === NOT) {\n    return !evaluator(subDsl, customVariables);\n  } else if (operator === AND) {\n    let list = [];\n    for (let i = 0; i < subDsl.length; i++) {\n      list.push(evaluator(subDsl[i], customVariables));\n    }\n\n    return list.every(val => val);\n  } else if (operator === OR) {\n    let list = [];\n    for (let i = 0; i < subDsl.length; i++) {\n      list.push(evaluator(subDsl[i], customVariables));\n    }\n\n    return list.some(val => val);\n  } else if (operator === CUSTOM_VARIABLE) {\n    return operandCustomVariablesParser(subDsl, customVariables);\n  } else if (operator === USER) {\n    return operandUserParser(subDsl, customVariables);\n  }\n}\n\nfunction SegmentEvaluator(dsl, customVariables = {}, campaignKey, userId, variation = '', disableLogs = false) {\n  try {\n    if (DataTypeUtil.isObject(dsl) && !Object.keys(dsl).length) {\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.SEGMENTATION_SKIPPED, {\n          campaignKey,\n          userId,\n          file\n        }),\n        disableLogs\n      );\n      return true;\n    }\n    if (DataTypeUtil.isObject(dsl) && Object.keys(dsl).length) {\n      return evaluator(dsl, customVariables);\n    }\n    return true;\n  } catch (err) {\n    logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.SEGMENTATION_ERROR, {\n        campaignKey,\n        userId,\n        customVariables: JSON.stringify(customVariables),\n        file,\n        err,\n        variation\n      }),\n      disableLogs\n    );\n    return false;\n  }\n}\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule.exports = {\n  CUSTOM_VARIABLE: 'custom_variable',\n  USER: 'user'\n};\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule.exports = {\n  AND: 'and',\n  NOT: 'not',\n  OR: 'or'\n};\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule.exports = {\n  LOWER: /^lower/,\n  LOWER_MATCH: /^lower\\((.*)\\)/,\n  WILDCARD: /^wildcard/,\n  WILDCARD_MATCH: /^wildcard\\((.*)\\)/,\n  REGEX: /^regex/,\n  REGEX_MATCH: /^regex\\((.*)\\)/,\n  STARTING_STAR: /^\\*/,\n  ENDING_STAR: /\\*$/\n};\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule.exports = {\n  LOWER_VALUE: 1,\n  STARTING_ENDING_STAR_VALUE: 2,\n  STARTING_STAR_VALUE: 3,\n  ENDING_STAR_VALUE: 4,\n  REGEX_VALUE: 5,\n  EQUAL_VALUE: 6\n};\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DataTypeUtil = require('../utils/DataTypeUtil');\nconst { matchWithRegex } = require('../utils/FunctionUtil');\nconst { getKeyValue } = require('../utils/ObjectUtil');\nconst SegmentEnum = require('../enums/segment');\n\nconst {\n  LOWER_MATCH,\n  WILDCARD_MATCH,\n  REGEX_MATCH,\n  STARTING_STAR,\n  ENDING_STAR\n} = SegmentEnum.SegmentOperandValueTypeRegexes;\n\nconst {\n  LOWER_VALUE,\n  STARTING_ENDING_STAR_VALUE,\n  STARTING_STAR_VALUE,\n  ENDING_STAR_VALUE,\n  REGEX_VALUE,\n  EQUAL_VALUE\n} = SegmentEnum.SegmentOperandValues;\n\nfunction extractOperandValue(operand, regex) {\n  return matchWithRegex(operand, regex) && matchWithRegex(operand, regex)[1];\n}\n\nfunction processValues(operandValue, tagValue) {\n  // this is atomic, either both will be processed or none\n  let processedOperandValue = parseFloat(operandValue, 10);\n  let processedTagValue = parseFloat(tagValue, 10);\n  if (!processedOperandValue || !processedTagValue) {\n    return {\n      operandValue: operandValue,\n      tagValue: tagValue\n    };\n  }\n  // now we have surity that both are numbers\n  // now we can convert them independently to int type if they\n  // are int rather than floats\n  if (processedOperandValue === Math.floor(processedOperandValue)) {\n    processedOperandValue = parseInt(processedOperandValue, 10);\n  }\n  if (processedTagValue === Math.floor(processedTagValue)) {\n    processedTagValue = parseInt(processedTagValue, 10);\n  }\n  // convert it back to string and return\n  return {\n    operandValue: processedOperandValue.toString(),\n    tagValue: processedTagValue.toString()\n  };\n}\n\nfunction preProcessTagValue(tagValue) {\n  if (tagValue === undefined) {\n    tagValue = '';\n  }\n  if (DataTypeUtil.isBoolean(tagValue)) {\n    if (tagValue) {\n      tagValue = true;\n    } else {\n      tagValue = false;\n    }\n  }\n  if (tagValue !== null) {\n    tagValue = tagValue.toString();\n  }\n  return tagValue;\n}\n\nfunction preProcessOperandValue(operand) {\n  let operandType;\n  let operandValue;\n  let startingStar;\n  let endingStar;\n  // Pre process operand value\n  if (matchWithRegex(operand, LOWER_MATCH)) {\n    operandType = LOWER_VALUE;\n    operandValue = extractOperandValue(operand, LOWER_MATCH);\n  } else if (matchWithRegex(operand, WILDCARD_MATCH)) {\n    operandValue = extractOperandValue(operand, WILDCARD_MATCH);\n    startingStar = matchWithRegex(operandValue, STARTING_STAR);\n    endingStar = matchWithRegex(operandValue, ENDING_STAR);\n    // In case of wildcard, the operand type is further divided into contains, startswith and endswith\n    if (startingStar && endingStar) {\n      operandType = STARTING_ENDING_STAR_VALUE;\n    } else if (startingStar) {\n      operandType = STARTING_STAR_VALUE;\n    } else if (endingStar) {\n      operandType = ENDING_STAR_VALUE;\n    }\n    operandValue = operandValue.replace(STARTING_STAR, '').replace(ENDING_STAR, '');\n  } else if (matchWithRegex(operand, REGEX_MATCH)) {\n    operandType = REGEX_VALUE;\n    operandValue = extractOperandValue(operand, REGEX_MATCH);\n  } else {\n    operandType = EQUAL_VALUE;\n    operandValue = operand;\n  }\n  return {\n    operandType,\n    operandValue\n  };\n}\n\nfunction operandCustomVariablesParser(operand, customVariables) {\n  // Extract custom_variable_key and custom_variable_value from operand\n  let { key, value } = getKeyValue(operand);\n  let operandKey = key;\n  operand = value;\n  if (!customVariables.hasOwnProperty(key)) {\n    // For handling \".*\" regex case when key is not present in customVariables and matches regex is used.\n    return false;\n  }\n  let tagValue = customVariables[operandKey];\n  // Pre process tag value\n  tagValue = preProcessTagValue(tagValue);\n  let { operandType, operandValue } = preProcessOperandValue(operand);\n  // Process both operand and tag values\n  let processedValues = processValues(operandValue, tagValue);\n  tagValue = processedValues.tagValue;\n  return extractResult(operandType, processedValues.operandValue, tagValue);\n}\n\nfunction operandUserParser(operand, customVariables) {\n  const users = operand.split(',');\n  for (let i = 0; i < users.length; i++) {\n    if (users[i].trim() === customVariables._vwoUserId) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction extractResult(operandType, operandValue, tagValue) {\n  let result;\n\n  switch (operandType) {\n    case LOWER_VALUE:\n      if (tagValue !== null) {\n        result = operandValue.toLowerCase() === tagValue.toLowerCase();\n      }\n      break;\n    case STARTING_ENDING_STAR_VALUE:\n      if (tagValue !== null) {\n        result = tagValue.indexOf(operandValue) > -1;\n      }\n      break;\n    case STARTING_STAR_VALUE:\n      if (tagValue !== null) {\n        result = tagValue.endsWith(operandValue);\n      }\n      break;\n    case ENDING_STAR_VALUE:\n      if (tagValue !== null) {\n        result = tagValue.startsWith(operandValue);\n      }\n      break;\n    case REGEX_VALUE:\n      try {\n        let pattern = new RegExp(operandValue, 'g');\n        result = !!pattern.test(tagValue);\n      } catch (err) {\n        result = false;\n      }\n      break;\n    default:\n      result = tagValue === operandValue;\n  }\n\n  return result;\n}\n\nmodule.exports = {\n  extractOperandValue,\n  processValues,\n  preProcessTagValue,\n  preProcessOperandValue,\n  operandCustomVariablesParser,\n  operandUserParser\n};\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst HooksEnum = {\n  DECISION_TYPES: {\n    CAMPAIGN_DECISION: 'CAMPAIGN_DECISION'\n  }\n};\n\nmodule.exports = HooksEnum;\n","var v35 = require('./lib/v35.js');\nvar sha1 = require('./lib/sha1');\nmodule.exports = v35('v5', 0x50, sha1);\n","var bytesToUuid = require('./bytesToUuid');\n\nfunction uuidToBytes(uuid) {\n  // Note: We assume we're being passed a valid uuid string\n  var bytes = [];\n  uuid.replace(/[a-fA-F0-9]{2}/g, function(hex) {\n    bytes.push(parseInt(hex, 16));\n  });\n\n  return bytes;\n}\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n  var bytes = new Array(str.length);\n  for (var i = 0; i < str.length; i++) {\n    bytes[i] = str.charCodeAt(i);\n  }\n  return bytes;\n}\n\nmodule.exports = function(name, version, hashfunc) {\n  var generateUUID = function(value, namespace, buf, offset) {\n    var off = buf && offset || 0;\n\n    if (typeof(value) == 'string') value = stringToBytes(value);\n    if (typeof(namespace) == 'string') namespace = uuidToBytes(namespace);\n\n    if (!Array.isArray(value)) throw TypeError('value must be an array of bytes');\n    if (!Array.isArray(namespace) || namespace.length !== 16) throw TypeError('namespace must be uuid string or an Array of 16 byte values');\n\n    // Per 4.3\n    var bytes = hashfunc(namespace.concat(value));\n    bytes[6] = (bytes[6] & 0x0f) | version;\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n\n    if (buf) {\n      for (var idx = 0; idx < 16; ++idx) {\n        buf[off+idx] = bytes[idx];\n      }\n    }\n\n    return buf || bytesToUuid(bytes);\n  };\n\n  // Function#name is not settable on some platforms (#270)\n  try {\n    generateUUID.name = name;\n  } catch (err) {\n  }\n\n  // Pre-defined namespaces, per Appendix C\n  generateUUID.DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\n  generateUUID.URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\n\n  return generateUUID;\n};\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\n'use strict';\n\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0: return (x & y) ^ (~x & z);\n    case 1: return x ^ y ^ z;\n    case 2: return (x & y) ^ (x & z) ^ (y & z);\n    case 3: return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return (x << n) | (x>>> (32 - n));\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof(bytes) == 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n    bytes = new Array(msg.length);\n    for (var i = 0; i < msg.length; i++) bytes[i] = msg.charCodeAt(i);\n  }\n\n  bytes.push(0x80);\n\n  var l = bytes.length/4 + 2;\n  var N = Math.ceil(l/16);\n  var M = new Array(N);\n\n  for (var i=0; i<N; i++) {\n    M[i] = new Array(16);\n    for (var j=0; j<16; j++) {\n      M[i][j] =\n        bytes[i * 64 + j * 4] << 24 |\n        bytes[i * 64 + j * 4 + 1] << 16 |\n        bytes[i * 64 + j * 4 + 2] << 8 |\n        bytes[i * 64 + j * 4 + 3];\n    }\n  }\n\n  M[N - 1][14] = ((bytes.length - 1) * 8) /\n    Math.pow(2, 32); M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = ((bytes.length - 1) * 8) & 0xffffffff;\n\n  for (var i=0; i<N; i++) {\n    var W = new Array(80);\n\n    for (var t=0; t<16; t++) W[t] = M[i][t];\n    for (var t=16; t<80; t++) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var t=0; t<80; t++) {\n      var s = Math.floor(t/20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = (H[0] + a) >>> 0;\n    H[1] = (H[1] + b) >>> 0;\n    H[2] = (H[2] + c) >>> 0;\n    H[3] = (H[3] + d) >>> 0;\n    H[4] = (H[4] + e) >>> 0;\n  }\n\n  return [\n    H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff,\n    H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff,\n    H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff,\n    H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff,\n    H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff\n  ];\n}\n\nmodule.exports = sha1;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst Constants = require('../constants');\nconst ApiEnum = require('../enums/ApiEnum');\n\nconst DecisionUtil = require('../utils/DecisionUtil');\nconst CampaignUtil = require('../utils/CampaignUtil');\nconst ValidateUtil = require('../utils/ValidateUtil');\nconst DataTypeUtil = require('../utils/DataTypeUtil');\n\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\n\nconst file = FileNameEnum.GetVariation;\n\n/**\n * This API method: Gets the variation assigned for the user for the campaign\n *\n * 1. Validates the arguments being passed\n * 2. Checks if user is eligible to get bucketed into the campaign,\n * 3. Assigns the determinitic variation to the user(based on userId), if user becomes part of campaign\n *    If userStorageService is used, it will look into it for the variation and if found, no further processing is done\n *\n * @param {Object} vwoInstance       VWO instance which has logger, settingsFile etc.\n * @param {String} campaignKey       unique campaign key specified in VWO app\n * @param {String} userId            ID assigned to a user\n * @param {Object} options           Optional params\n *\n * @return {String|null}             If variation is assigned then variation-name otherwise null in case of user not becoming part\n */\nfunction getVariation(vwoInstance, campaignKey, userId, options = {}) {\n  const api = ApiEnum.GET_VARIATION_NAME;\n  let areParamsValid = false;\n  if (DataTypeUtil.isObject(options)) {\n    var { customVariables, variationTargetingVariables, userStorageData, metaData } = options;\n    // Check if arguments have valid data-type\n    if (\n      ValidateUtil.areValidParamsForAPIMethod({\n        method: ApiEnum.GET_VARIATION_NAME,\n        campaignKey,\n        userId,\n        customVariables,\n        variationTargetingVariables,\n        userStorageData,\n        metaData\n      })\n    ) {\n      areParamsValid = true;\n    }\n  }\n\n  if (areParamsValid === false) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.GET_VARIATION_API_MISSING_PARAMS, {\n        file\n      })\n    );\n    return null;\n  }\n\n  // Get the cached configuration\n  let config = vwoInstance.SettingsFileManager.getConfig();\n  let settingsFile = vwoInstance.SettingsFileManager.getSettingsFile(api);\n  config.apiName = api;\n\n  // If no settings are found, simply return no variation\n  if (!settingsFile) {\n    return null;\n  }\n\n  // Get the campaign settings based on campaignKey from the settings\n  let campaign = CampaignUtil.getCampaign(settingsFile, campaignKey);\n\n  // If matching campaign is not found with campaignKey or if found but is in not RUNNING state, simply return no variation\n  if (!campaign || campaign.status !== Constants.STATUS_RUNNING) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.CAMPAIGN_NOT_RUNNING, {\n        file,\n        campaignKey: campaignKey,\n        api\n      })\n    );\n\n    return null;\n  }\n\n  if (CampaignUtil.isFeatureRolloutCampaign(campaign)) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.INVALID_API, {\n        file,\n        campaignKey,\n        campaignType: campaign.type,\n        userId,\n        api\n      })\n    );\n\n    return null;\n  }\n\n  const { variationName } = DecisionUtil.getVariation(\n    config,\n    settingsFile,\n    campaign,\n    campaignKey,\n    userId,\n    customVariables,\n    variationTargetingVariables,\n    userStorageData,\n    metaData,\n    false,\n    undefined,\n    api\n  );\n  if (!variationName) {\n    return null;\n  }\n\n  return variationName;\n}\n\nmodule.exports = getVariation;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst Constants = require('../constants');\nconst GoalTypeEnum = require('../enums/GoalTypeEnum');\nconst ApiEnum = require('../enums/ApiEnum');\n\nconst DecisionUtil = require('../utils/DecisionUtil');\nconst CampaignUtil = require('../utils/CampaignUtil');\nconst { objectValues } = require('../utils/ObjectUtil');\nconst ImpressionUtil = require('../utils/ImpressionUtil');\nconst ValidateUtil = require('../utils/ValidateUtil');\nconst DataTypeUtil = require('../utils/DataTypeUtil');\n\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\n\nconst file = FileNameEnum.Track;\nconst GOAL_TYPE_TO_TRACK_DEFAULT = GoalTypeEnum.ALL;\nconst GOAL_IDENTIFIER_SEPERATOR = '_vwo_';\nconst api = ApiEnum.TRACK;\n\n/**\n * This API method: Marks the conversion of the campaign for a particular goal\n *\n * 1. validates the arguments being passed\n * 2. Checks if user is eligible to get bucketed into the campaign,\n * 3. Gets the assigned determinitic variation to the user(based on userId), if user becomes part of campaign\n * 4. Sends an impression call to VWO server to track goal data\n *\n * @param {Object} vwoInstance               VWO instance which has logger, settingsFile etc.\n * @param {Number} campaignKey               unique campaign test key\n * @param {String} userId                    ID assigned to a user\n * @param {String} goalIdentifier             unique campaign's goal identifier\n * @param {Object} options                   Optional params\n */\nfunction track(vwoInstance, campaignKey, userId, goalIdentifier, options = {}) {\n  let areParamsValid = false;\n  if (DataTypeUtil.isObject(options)) {\n    var {\n      revenueValue,\n      customVariables,\n      variationTargetingVariables,\n      userStorageData,\n      goalTypeToTrack,\n      shouldTrackReturningUser,\n      metaData,\n      responseCallback\n    } = options;\n    // Check if arguments have valid data-type\n    if (\n      ValidateUtil.areValidParamsForAPIMethod({\n        method: ApiEnum.TRACK,\n        campaignKey,\n        userId,\n        goalIdentifier,\n        customVariables,\n        variationTargetingVariables,\n        userStorageData,\n        goalTypeToTrack,\n        shouldTrackReturningUser,\n        metaData,\n        responseCallback\n      }) &&\n      (!goalTypeToTrack || (goalTypeToTrack && objectValues(GoalTypeEnum).includes(goalTypeToTrack)))\n    ) {\n      areParamsValid = true;\n    }\n  }\n\n  if (areParamsValid === false) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.TRACK_API_MISSING_PARAMS, {\n        file\n      })\n    );\n    return null;\n  }\n\n  // Get the cached configuration\n  let config = vwoInstance.SettingsFileManager.getConfig();\n  let settingsFile = vwoInstance.SettingsFileManager.getSettingsFile(api);\n  config.apiName = api;\n  let revenuePropList = new Set();\n\n  // If no settings are found, simply do not track goal and return false\n  if (!settingsFile) {\n    return null;\n  }\n\n  let campaigns = [];\n  goalTypeToTrack = goalTypeToTrack || config.goalTypeToTrack || GOAL_TYPE_TO_TRACK_DEFAULT; // priority order - options > launchConfig > default\n  if (DataTypeUtil.isUndefined(shouldTrackReturningUser)) {\n    // if shouldTrackReturningUser is not given in options\n    if (DataTypeUtil.isBoolean(config.shouldTrackReturningUser)) {\n      // if shouldTrackReturningUser is given in config at launch\n      shouldTrackReturningUser = config.shouldTrackReturningUser;\n    } else {\n      shouldTrackReturningUser = false;\n    }\n  }\n  if (!DataTypeUtil.isString(campaignKey)) {\n    if (DataTypeUtil.isArray(campaignKey)) {\n      campaigns = CampaignUtil.getCampaignsForKeys(settingsFile, campaignKey);\n    } else {\n      campaigns = CampaignUtil.getCampaignsForGoal(settingsFile, goalIdentifier, goalTypeToTrack);\n    }\n  } else {\n    // Get the campaign settings based on campaignKey from the settings\n    let campaign = CampaignUtil.getCampaign(settingsFile, campaignKey);\n    campaigns.push(campaign || { key: campaignKey });\n  }\n  const result = {};\n  let metricMap = {};\n  campaigns.forEach(\n    campaign =>\n      (result[campaign.key] = trackCampaignGoal(\n        vwoInstance,\n        campaign,\n        campaign.key,\n        userId,\n        settingsFile,\n        goalIdentifier,\n        revenueValue,\n        config,\n        customVariables,\n        variationTargetingVariables,\n        userStorageData,\n        goalTypeToTrack,\n        shouldTrackReturningUser,\n        metaData,\n        metricMap,\n        revenuePropList,\n        responseCallback\n      ))\n  );\n  if (!Object.keys(result).length) {\n    return null;\n  }\n\n  if (settingsFile.isEventArchEnabled && Object.keys(metricMap).length > 0) {\n    let properties = ImpressionUtil.getEventsBaseProperties(settingsFile, goalIdentifier);\n    let payload = ImpressionUtil.getTrackGoalPayloadData(\n      settingsFile,\n      userId,\n      goalIdentifier,\n      metricMap,\n      revenueValue,\n      revenuePropList\n    );\n    vwoInstance.eventQueue.process(config, properties, vwoInstance, { payload, responseCallback });\n    Object.keys(metricMap).forEach(function(key) {\n      DecisionUtil._saveUserData(\n        config,\n        metricMap[key].campaign,\n        metricMap[key].variationName,\n        metricMap[key].userId,\n        metricMap[key].metaData,\n        goalIdentifier\n      );\n    });\n  }\n\n  if (config.isDevelopmentMode) {\n    return Object.assign({}, result, { isDevelopmentMode: config.isDevelopmentMode });\n  }\n\n  return result;\n}\n\nfunction trackCampaignGoal(\n  vwoInstance,\n  campaign,\n  campaignKey,\n  userId,\n  settingsFile,\n  goalIdentifier,\n  revenueValue,\n  config,\n  customVariables,\n  variationTargetingVariables,\n  userStorageData,\n  goalTypeToTrack,\n  shouldTrackReturningUser,\n  metaData,\n  metricMap,\n  revenuePropList,\n  responseCallback\n) {\n  // If matching campaign is not found with campaignKey or if found but is in not RUNNING state, simply return no variation\n  if (!campaign || campaign.status !== Constants.STATUS_RUNNING) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.CAMPAIGN_NOT_RUNNING, {\n        file,\n        campaignKey: campaignKey,\n        api\n      })\n    );\n\n    return false;\n  }\n\n  if (CampaignUtil.isFeatureRolloutCampaign(campaign)) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.INVALID_API, {\n        file,\n        campaignKey,\n        campaignType: campaign.type,\n        userId,\n        api\n      })\n    );\n\n    return false;\n  }\n\n  let campaignId = campaign.id;\n\n  // Get the campaign goal settings based on goalIdentifier\n  let goal = CampaignUtil.getCampaignGoal(settingsFile, campaign.key, goalIdentifier);\n\n  if (!goal) {\n    // If no goal is found, something is wrong with the goalIdentifier\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.TRACK_API_GOAL_NOT_FOUND, {\n        file,\n        userId,\n        goalIdentifier,\n        campaignKey: campaignKey\n      })\n    );\n    return false;\n  } else if (goalTypeToTrack !== GOAL_TYPE_TO_TRACK_DEFAULT && goal.type !== goalTypeToTrack) {\n    return false;\n  } else if (goal.type === GoalTypeEnum.REVENUE && !ValidateUtil.isValidValue(revenueValue)) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.TRACK_API_REVENUE_NOT_PASSED_FOR_REVENUE_GOAL, {\n        file,\n        userId,\n        goalIdentifier,\n        campaignKey\n      })\n    );\n    return false;\n  }\n\n  if (goal.type === GoalTypeEnum.REVENUE && goal.revenueProp) {\n    revenuePropList.add(goal.revenueProp);\n  }\n\n  let { variationId, variationName, storedGoalIdentifier } = DecisionUtil.getVariation(\n    config,\n    settingsFile,\n    campaign,\n    campaignKey,\n    userId,\n    customVariables,\n    variationTargetingVariables,\n    userStorageData,\n    metaData,\n    false,\n    goalIdentifier,\n    api\n  );\n\n  // Is User is a part of Campaign and has been decided to be a part of particular variation\n  if (variationName) {\n    if (storedGoalIdentifier) {\n      const identifiers = storedGoalIdentifier.split(GOAL_IDENTIFIER_SEPERATOR);\n      if (!identifiers.includes(goalIdentifier)) {\n        storedGoalIdentifier += GOAL_IDENTIFIER_SEPERATOR + goalIdentifier;\n        DecisionUtil._saveUserData(config, campaign, variationName, userId, metaData, storedGoalIdentifier);\n      } else if (!shouldTrackReturningUser) {\n        vwoInstance.logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.GOAL_ALREADY_TRACKED, {\n            file,\n            userId,\n            goalIdentifier,\n            campaignKey\n          })\n        );\n        return false;\n      }\n    }\n    // If goal is found, send an impression to VWO server for report stats\n    if (config.batchEvents) {\n      let properties = ImpressionUtil.buildBatchEventForTrackingGoal(\n        settingsFile,\n        campaignId,\n        variationId,\n        userId,\n        goal,\n        revenueValue\n      );\n      vwoInstance.batchEventsQueue.enqueue(properties);\n    } else if (settingsFile.isEventArchEnabled) {\n      metricMap[campaign.id] = {\n        config,\n        campaign,\n        variationName,\n        userId,\n        metaData,\n        goal\n      };\n      return true;\n    } else {\n      let properties = ImpressionUtil.buildEventForTrackingGoal(\n        settingsFile,\n        campaignId,\n        variationId,\n        userId,\n        goal,\n        revenueValue\n      );\n      vwoInstance.eventQueue.process(config, properties, vwoInstance, { responseCallback });\n    }\n    DecisionUtil._saveUserData(config, campaign, variationName, userId, metaData, goalIdentifier);\n    return true;\n  }\n\n  return false;\n}\n\nmodule.exports = track;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst Constants = require('../constants');\nconst ApiEnum = require('../enums/ApiEnum');\n\nconst DecisionUtil = require('../utils/DecisionUtil');\nconst CampaignUtil = require('../utils/CampaignUtil');\nconst ImpressionUtil = require('../utils/ImpressionUtil');\nconst ValidateUtil = require('../utils/ValidateUtil');\nconst DataTypeUtil = require('../utils/DataTypeUtil');\n\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst EventEnum = require('../enums/EventEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\n\nconst file = FileNameEnum.IsFeatureEnabled;\n\n/**\n * This API checks: Whether a feature is enabled or not for the given user\n *\n * 1. Validates the arguments being passed\n * 2. Checks if user is eligible for campaign and check if feature is enabled for the user.\n * 4. If feature enabled, sends a call to VWO server for tracking visitor\n *\n * @param {Object} vwoInstance       VWO instance which has logger, settingsFile etc.\n * @param {String} campaignKey       Unique key for a campaign\n * @param {String} userId            Unique identifier for the user\n * @param {Object} options           Optional params\n *\n * @return {Boolean}                 true if feature enabled, false otherwise\n */\nfunction isFeatureEnabled(vwoInstance, campaignKey, userId, options = {}) {\n  const api = ApiEnum.IS_FEATURE_ENABLED;\n  let areParamsValid = false;\n  if (DataTypeUtil.isObject(options)) {\n    var {\n      customVariables,\n      variationTargetingVariables,\n      userStorageData,\n      shouldTrackReturningUser,\n      metaData,\n      responseCallback\n    } = options;\n    // Check if arguments have valid data-type\n    if (\n      ValidateUtil.areValidParamsForAPIMethod({\n        method: ApiEnum.IS_FEATURE_ENABLED,\n        campaignKey,\n        userId,\n        customVariables,\n        variationTargetingVariables,\n        userStorageData,\n        shouldTrackReturningUser,\n        metaData,\n        responseCallback\n      })\n    ) {\n      areParamsValid = true;\n    }\n  }\n\n  if (areParamsValid === false) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.IS_FEATURE_ENABLED_API_MISSING_PARAMS, {\n        file\n      })\n    );\n    return null;\n  }\n\n  // Get the cached configuration\n  let config = vwoInstance.SettingsFileManager.getConfig();\n  let settingsFile = vwoInstance.SettingsFileManager.getSettingsFile(api);\n\n  // If no settings are found, simply log and return false\n  if (!settingsFile) {\n    return null;\n  }\n\n  shouldTrackReturningUser = shouldTrackReturningUser || config.shouldTrackReturningUser || false;\n\n  // Get the campaign settings based on campaignKey from the settings\n  let campaign = CampaignUtil.getCampaign(settingsFile, campaignKey);\n\n  if (!campaign || campaign.status !== Constants.STATUS_RUNNING) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.CAMPAIGN_NOT_RUNNING, {\n        file,\n        campaignKey,\n        api\n      })\n    );\n\n    return null;\n  }\n\n  if (CampaignUtil.isAbCampaign(campaign)) {\n    // API not allowed for full-stack AB campaigns\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.INVALID_API, {\n        file,\n        campaignKey,\n        campaignType: campaign.type,\n        userId,\n        api\n      })\n    );\n\n    return null;\n  }\n\n  const { variation, variationName, variationId, isStoredVariation } = DecisionUtil.getVariation(\n    config,\n    settingsFile,\n    campaign,\n    campaignKey,\n    userId,\n    customVariables,\n    variationTargetingVariables,\n    userStorageData,\n    metaData,\n    true,\n    undefined,\n    api\n  );\n\n  let isFeatureEnabled = false;\n\n  if (variationName) {\n    isFeatureEnabled = CampaignUtil.isFeatureRolloutCampaign(campaign) || variation.isFeatureEnabled;\n\n    if (isStoredVariation && !shouldTrackReturningUser) {\n      vwoInstance.logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.USER_ALREADY_TRACKED, {\n          file,\n          userId,\n          campaignKey,\n          api\n        })\n      );\n    } else {\n      // Variation found...let VWO server knows about it to show report stats\n      if (config.batchEvents) {\n        let properties = ImpressionUtil.buildBatchEventForTrackingUser(settingsFile, campaign.id, variationId, userId);\n        vwoInstance.batchEventsQueue.enqueue(properties);\n      } else if (settingsFile.isEventArchEnabled) {\n        let properties = ImpressionUtil.getEventsBaseProperties(\n          settingsFile,\n          EventEnum.VWO_VARIATION_SHOWN,\n          vwoInstance.usageStats.getUsageStats()\n        );\n        let payload = ImpressionUtil.getTrackUserPayloadData(\n          settingsFile,\n          userId,\n          EventEnum.VWO_VARIATION_SHOWN,\n          campaign.id,\n          variationId\n        );\n        vwoInstance.eventQueue.process(config, properties, vwoInstance, { payload, responseCallback });\n      } else {\n        let properties = ImpressionUtil.buildEventForTrackingUser(\n          settingsFile,\n          campaign.id,\n          variationId,\n          userId,\n          vwoInstance.usageStats.getUsageStats()\n        );\n        vwoInstance.eventQueue.process(config, properties, vwoInstance, { responseCallback });\n      }\n    }\n  }\n\n  if (isFeatureEnabled) {\n    vwoInstance.logger.log(\n      LogLevelEnum.INFO,\n      LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.FEATURE_ENABLED_FOR_USER, {\n        file,\n        campaignKey,\n        userId\n      })\n    );\n  } else {\n    vwoInstance.logger.log(\n      LogLevelEnum.INFO,\n      LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.FEATURE_NOT_ENABLED_FOR_USER, {\n        file,\n        campaignKey,\n        userId\n      })\n    );\n  }\n\n  if (isStoredVariation || config.isDevelopmentMode) {\n    return { isFeatureEnabled };\n  }\n  return isFeatureEnabled;\n}\n\nmodule.exports = isFeatureEnabled;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst Constants = require('../constants');\nconst ApiEnum = require('../enums/ApiEnum');\n\nconst DecisionUtil = require('../utils/DecisionUtil');\nconst CampaignUtil = require('../utils/CampaignUtil');\nconst ValidateUtil = require('../utils/ValidateUtil');\nconst FeatureUtil = require('../utils/FeatureUtil');\nconst DataTypeUtil = require('../utils/DataTypeUtil');\nconst ObjectUtil = require('../utils/ObjectUtil');\n\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\n\nconst file = FileNameEnum.GetFeatureVariableValue;\n\n/**\n * This API method:\n *\n * 1. Validates the arguments being passed\n * 2. Checks if user is eligible for campaign and check if feature is enabled for the user.\n * 4. If feature enabled, return the variable for that variation(if Feature Test),\n *    otherwise the default values being set in Feature\n *\n * @param {Object} vwoInstance   VWO instance which has logger, settingsFile etc.\n * @param {String} campaignKey   Unique key for a campaign\n * @param {String} variableKey   Unique key for a feature's variable\n * @param {String} userId        Unique identifier for the user\n * @param {Object} options           Optional params\n *\n * @return {string|number|double|boolean|null} Variable value as is set in the VWO app i.e.\n *                                             maintaining the data-type,\n *                                             null if anything fails like campaign / variable not found\n */\nfunction getFeatureVariableValue(vwoInstance, campaignKey, variableKey, userId, options = {}) {\n  try {\n    const api = ApiEnum.GET_FEATURE_VARIABLE_VALUE;\n    let areParamsValid = false;\n    if (DataTypeUtil.isObject(options)) {\n      var { customVariables, variationTargetingVariables, userStorageData, metaData } = options;\n      // Check if arguments have valid data-type\n      if (\n        ValidateUtil.areValidParamsForAPIMethod({\n          method: ApiEnum.GET_FEATURE_VARIABLE_VALUE,\n          campaignKey,\n          variableKey,\n          userId,\n          customVariables,\n          variationTargetingVariables,\n          userStorageData,\n          metaData\n        })\n      ) {\n        areParamsValid = true;\n      }\n    }\n\n    if (areParamsValid === false) {\n      vwoInstance.logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.GET_FEATURE_VARIABLE_MISSING_PARAMS, {\n          file,\n          campaignKey,\n          variableKey\n        })\n      );\n      return null;\n    }\n\n    // Get the cached configuration\n    let config = vwoInstance.SettingsFileManager.getConfig();\n    let settingsFile = vwoInstance.SettingsFileManager.getSettingsFile(api);\n    config.apiName = api;\n\n    // If no settings are found, simply return no variation\n    if (!settingsFile) {\n      return null;\n    }\n\n    let campaign = CampaignUtil.getCampaign(settingsFile, campaignKey);\n\n    if (!campaign || campaign.status !== Constants.STATUS_RUNNING) {\n      vwoInstance.logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.CAMPAIGN_NOT_RUNNING, {\n          file,\n          campaignKey,\n          api\n        })\n      );\n\n      return null;\n    }\n\n    if (CampaignUtil.isAbCampaign(campaign)) {\n      // API not allowed for full-stack AB campaigns\n      vwoInstance.logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.INVALID_API, {\n          file,\n          campaignKey,\n          campaignType: campaign.type,\n          userId,\n          api\n        })\n      );\n\n      return null;\n    }\n\n    let variable;\n    const { variation, variationName } = DecisionUtil.getVariation(\n      config,\n      settingsFile,\n      campaign,\n      campaignKey,\n      userId,\n      customVariables,\n      variationTargetingVariables,\n      userStorageData,\n      metaData,\n      false,\n      undefined,\n      api\n    );\n\n    if (!variationName) {\n      vwoInstance.logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.FEATURE_NOT_ENABLED_FOR_USER, {\n          file,\n          campaignKey,\n          userId\n        })\n      );\n\n      return null;\n    }\n\n    if (CampaignUtil.isFeatureRolloutCampaign(campaign)) {\n      variable = FeatureUtil.getVariableForFeature(campaign, variableKey);\n    } else if (CampaignUtil.isFeatureTestCampaign(campaign)) {\n      variable = FeatureUtil.getVariableValueForVariation(campaign, variation, variableKey);\n\n      if (ObjectUtil.areObjectKeys(variable) && variation.isFeatureEnabled) {\n        vwoInstance.logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.USER_RECEIVED_VARIABLE_VALUE, {\n            file,\n            variableKey,\n            campaignKey: campaign.key,\n            variableValue: variable.value,\n            userId\n          })\n        );\n      } else if (ObjectUtil.areObjectKeys(variable) && !variation.isFeatureEnabled) {\n        vwoInstance.logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.VARIABLE_NOT_USED_RETURN_DEFAULT_VARIABLE_VALUE, {\n            file,\n            variableKey,\n            variationName\n          })\n        );\n      }\n    }\n\n    if (!ObjectUtil.areObjectKeys(variable)) {\n      vwoInstance.logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.VARIABLE_NOT_FOUND, {\n          file,\n          variableKey,\n          userId\n        })\n      );\n\n      return null;\n    }\n\n    let variableValue = variable.value;\n    let typeCastedValue = FeatureUtil.getTypeCastVariableValue(variableValue, variable.type);\n\n    return typeCastedValue;\n  } catch (err) {\n    vwoInstance.logger.log(LogLevelEnum.ERROR, err.message);\n\n    return null;\n  }\n}\n\nmodule.exports = getFeatureVariableValue;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst CampaignUtil = require('./CampaignUtil');\nconst DataTypeUtil = require('./DataTypeUtil');\nconst FeatureVariableTypeEnum = require('../enums/FeatureVariableTypeEnum');\n\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\nconst logger = logging.getLogger();\n\nconst file = FileNameEnum.FeatureUtil;\n\nlet FeatureUtil = {\n  getVariableForFeature: (campaign, variableKey) => {\n    let variableData = {};\n\n    if (CampaignUtil.isFeatureRolloutCampaign(campaign)) {\n      let variables = campaign.variables || [];\n\n      for (let i = 0; i < variables.length; i++) {\n        if (variables[i].key === variableKey) {\n          variableData = variables[i];\n\n          break;\n        }\n      }\n\n      return variableData;\n    }\n\n    return variableData;\n  },\n  getVariableValueForVariation: (campaign, variation, variableKey) => {\n    let variationVariable = {};\n\n    if (CampaignUtil.isFeatureTestCampaign(campaign)) {\n      if (!variation || !variation || !variation.variables) {\n        return variationVariable;\n      }\n\n      if (!variation.isFeatureEnabled) {\n        variation = CampaignUtil.getControlForCampaign(campaign);\n      }\n\n      for (let i = 0; i < variation.variables.length; i++) {\n        let variable = variation.variables[i];\n\n        if (variableKey === variable.key) {\n          variationVariable = variable;\n          break;\n        }\n      }\n    }\n\n    return variationVariable;\n  },\n  getTypeCastVariableValue: (variableValue, variableType) => {\n    let typeCastedValue;\n\n    switch (variableType) {\n      case FeatureVariableTypeEnum.INTEGER:\n        typeCastedValue = parseInt(variableValue, 10);\n        if (!DataTypeUtil.isNumber(typeCastedValue) || isNaN(typeCastedValue)) {\n          logger.log(\n            LogLevelEnum.ERROR,\n            LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.UNABLE_TO_CAST_VALUE, {\n              file,\n              variableValue,\n              variableType\n            })\n          );\n          typeCastedValue = null;\n        }\n        break;\n\n      case FeatureVariableTypeEnum.DOUBLE:\n        typeCastedValue = parseFloat(variableValue);\n        if (!DataTypeUtil.isNumber(typeCastedValue) || isNaN(typeCastedValue)) {\n          logger.log(\n            LogLevelEnum.ERROR,\n            LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.UNABLE_TO_CAST_VALUE, {\n              file,\n              variableValue,\n              variableType\n            })\n          );\n          typeCastedValue = null;\n        }\n        break;\n\n      case FeatureVariableTypeEnum.BOOLEAN:\n        if (!DataTypeUtil.isBoolean(variableValue)) {\n          logger.log(\n            LogLevelEnum.ERROR,\n            LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.UNABLE_TO_CAST_VALUE, {\n              file,\n              variableValue,\n              variableType\n            })\n          );\n          typeCastedValue = null;\n        } else {\n          typeCastedValue = variableValue;\n        }\n        break;\n\n      case FeatureVariableTypeEnum.JSON:\n        if (!DataTypeUtil.isObject(variableValue)) {\n          logger.log(\n            LogLevelEnum.ERROR,\n            LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.UNABLE_TO_CAST_VALUE, {\n              file,\n              variableValue,\n              variableType\n            })\n          );\n          typeCastedValue = null;\n        } else {\n          typeCastedValue = variableValue;\n        }\n        break;\n\n      default:\n        typeCastedValue = variableValue;\n        break;\n    }\n\n    return typeCastedValue;\n  }\n};\n\nmodule.exports = FeatureUtil;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst FeatureVariableTypeEnum = {\n  BOOLEAN: 'boolean',\n  DOUBLE: 'double',\n  INTEGER: 'integer',\n  STRING: 'string',\n  JSON: 'json'\n};\n\nmodule.exports = FeatureVariableTypeEnum;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst ApiEnum = require('../enums/ApiEnum');\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst EventEnum = require('../enums/EventEnum');\nconst ValidateUtil = require('../utils/ValidateUtil');\nconst ImpressionUtil = require('../utils/ImpressionUtil');\nconst DataTypeUtil = require('../utils/DataTypeUtil');\n\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\n\nconst file = FileNameEnum.Push;\n\n/**\n * This API method: Pushes the key-value tag pair for a particular user\n *\n * 1. validates the arguments being passed\n * 2. Sends a call to VWO push api\n *\n * @param {Object} vwoInstance               VWO instance which has logger, settingsFile etc.\n * @param {String} tagKey                    tag key\n * @param {String} tagValue                  tag Value\n * @param {String} userId                    ID assigned to a user\n *\n * @return {Boolean}                         true if request is pushed to eventQueue, false if params are invalid or settings file is unavailable\n */\nfunction push(vwoInstance, tagKey, tagValue, userId, customDimensionMap, { responseCallback } = {}) {\n  const api = ApiEnum.PUSH;\n\n  if (\n    !ValidateUtil.areValidParamsForAPIMethod({\n      method: ApiEnum.PUSH,\n      tagKey,\n      tagValue,\n      userId,\n      customDimensionMap,\n      responseCallback\n    })\n  ) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.PUSH_INVALID_PARAMS, {\n        file,\n        method: api\n      })\n    );\n    return false;\n  }\n\n  if (tagKey.length > 255) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.TAG_KEY_LENGTH_EXCEEDED, {\n        file,\n        tagKey,\n        userId\n      })\n    );\n    return false;\n  }\n\n  if (tagValue.length > 255) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.TAG_VALUE_LENGTH_EXCEEDED, {\n        file,\n        tagKey,\n        userId,\n        tagValue\n      })\n    );\n    return false;\n  }\n\n  if (tagKey === ' ' && tagValue === ' ' && (!customDimensionMap || Object.keys(customDimensionMap).length === 0)) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.PUSH_INVALID_PARAMS_CD_MAP, {\n        file,\n        method: api\n      })\n    );\n    return false;\n  }\n\n  if (tagKey !== ' ' && tagValue !== ' ') {\n    customDimensionMap[tagKey] = tagValue;\n  }\n\n  // Get the cached configuration\n  let config = vwoInstance.SettingsFileManager.getConfig();\n  let settingsFile = vwoInstance.SettingsFileManager.getSettingsFile(api);\n\n  // If no settings are found, simply false\n  if (!settingsFile) {\n    return false;\n  }\n\n  let result = {};\n  if (config.batchEvents) {\n    Object.keys(customDimensionMap).forEach(key => {\n      const tagValue = DataTypeUtil.isString(customDimensionMap[key])\n        ? customDimensionMap[key]\n        : JSON.stringify(customDimensionMap[key]);\n      let properties = ImpressionUtil.buildBatchEventForPushing(settingsFile, key, tagValue, userId);\n      vwoInstance.batchEventsQueue.enqueue(properties);\n\n      result[key] = true;\n    });\n  } else if (settingsFile.isEventArchEnabled) {\n    let properties = ImpressionUtil.getEventsBaseProperties(settingsFile, EventEnum.VWO_SYNC_VISITOR_PROP);\n    let payload = ImpressionUtil.getPushPayloadData(\n      settingsFile,\n      userId,\n      EventEnum.VWO_SYNC_VISITOR_PROP,\n      customDimensionMap\n    );\n    vwoInstance.eventQueue.process(config, properties, vwoInstance, { payload, responseCallback });\n\n    result.success = true;\n  } else {\n    Object.keys(customDimensionMap).forEach(key => {\n      const tagValue = DataTypeUtil.isString(customDimensionMap[key])\n        ? customDimensionMap[key]\n        : JSON.stringify(customDimensionMap[key]);\n      let properties = ImpressionUtil.buildEventForPushing(settingsFile, key, tagValue, userId);\n      vwoInstance.eventQueue.process(config, properties, vwoInstance, { responseCallback });\n\n      result[key] = true;\n    });\n  }\n\n  if (config.isDevelopmentMode) {\n    return Object.assign({}, result, { isDevelopmentMode: config.isDevelopmentMode });\n  }\n\n  return result;\n}\n\nmodule.exports = push;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DataTypeUtil = require('../utils/DataTypeUtil');\nconst EventDispatcher = require('../utils/EventDispatcherUtil');\n\nconst logging = require('./logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\nconst logger = logging.getLogger();\n\nconst file = FileNameEnum.EventQueue;\n\nclass EventQueue {\n  constructor() {\n    this.running = false;\n    this.queue = [];\n  }\n\n  process(config, properties, vwoInstance, { payload, responseCallback } = {}) {\n    if (config && config.isDevelopmentMode) {\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.DEV_MODE_ON, {\n          file\n        })\n      );\n      return;\n    }\n\n    this.enqueue(properties, vwoInstance, { payload, responseCallback });\n  }\n\n  enqueue(properties, vwoInstance, { payload, responseCallback }) {\n    this.queue.push({\n      eventName: properties.eventName,\n      properties: properties,\n      callback: () => {\n        if (payload) {\n          EventDispatcher.dispatchPostCall(properties, payload, { responseCallback });\n        } else {\n          EventDispatcher.dispatchGetCall(properties, { responseCallback });\n        }\n      }\n    });\n\n    vwoInstance.eventQueue.executeNext(properties);\n\n    if (!this.running) {\n      // if nothing is running, then start the engines!\n      this.executeNext(properties);\n    }\n\n    return this;\n  }\n\n  executeNext(properties) {\n    this.running = false;\n\n    // get the first element off the queue\n    if (this.queue && this.queue.length) {\n      let event = this.queue.shift();\n\n      if (event) {\n        this.running = true;\n        if (event.callback && DataTypeUtil.isFunction(event.callback)) {\n          event.callback(properties);\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = EventQueue;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\nconst logger = logging.getLogger();\nconst FunctionUtil = require('./FunctionUtil');\nconst EventEnum = require('../enums/EventEnum');\nconst excludedProperties = ['url'];\n\nconst file = FileNameEnum.EventDispatcherUtil;\n\nlet EventDispatcher = {\n  dispatchGetCall: function(properties, { responseCallback }) {\n    let parsedUrl;\n    let queryParams = '?';\n\n    queryParams += FunctionUtil.convertObjectKeysToString(properties, excludedProperties);\n\n    try {\n      // Require files only if required in respective Engine i.e. Node / Browser\n      if (typeof process.env === 'undefined') {\n        parsedUrl = new URL(properties.url);\n\n        require('./HttpImageUtil').sendCall(parsedUrl, queryParams, { successCallback: responseCallback });\n      } else {\n        const url = require('url');\n\n        parsedUrl = url.parse(properties.url);\n\n        require('./HttpHandlerUtil').sendGetCall(parsedUrl, queryParams, null, (error, response) => {\n          this.handleGetResponse(properties, error, response);\n          if (responseCallback) {\n            responseCallback(error, response);\n          }\n        });\n      }\n    } catch (err) {\n      let endPoint = properties.url;\n\n      logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.IMPRESSION_FAILED, {\n          file: FileNameEnum.EventDispatcher,\n          endPoint,\n          err\n        })\n      );\n    }\n\n    return false;\n  },\n\n  handleGetResponse: function(properties, error, response) {\n    if (error) {\n      logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.IMPRESSION_FAILED, {\n          file,\n          endPoint: response.endPoint,\n          err: error\n        })\n      );\n      return false;\n    } else {\n      const baseParams = {\n        file,\n        endPoint: response.endPoint,\n        accountId: properties && properties.account_id\n      };\n      let params = {};\n      if (baseParams.endPoint.includes('push')) {\n        let customVariables = JSON.parse(properties.tags).u;\n        params = Object.assign({}, baseParams, { customVariables: customVariables });\n        params.mainKeys = `customDimension:${JSON.stringify(params.customVariables)}`;\n      } else {\n        params = Object.assign({}, baseParams, {\n          campaignId: properties && properties.experiment_id,\n          variationId: properties && properties.combination\n        });\n        params.mainKeys = `campaignId:${params.campaignId} and variationId:${params.variationId}`;\n      }\n      logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.IMPRESSION_SUCCESS, params));\n      return true;\n    }\n  },\n\n  dispatchPostCall: function(properties, payload, { responseCallback }) {\n    let parsedUrl;\n    let queryParams = '?';\n\n    queryParams += FunctionUtil.convertObjectKeysToString(properties, excludedProperties);\n\n    try {\n      // Require files only if required in respective Engine i.e. Node / Browser\n\n      if (typeof process.env === 'undefined') {\n        require('./XhrUtil')\n          .send({\n            method: 'POST',\n            url: `${properties.url}${queryParams}`,\n            payload\n          })\n          .then(() => {\n            this.handlePostResponse(properties, payload);\n            if (responseCallback) {\n              responseCallback(null, { status: 'success' });\n            }\n          })\n          .catch(error => {\n            this.handlePostResponse(properties, payload, error);\n            responseCallback(error, { status: 'failure' });\n          });\n      } else {\n        const url = require('url');\n\n        parsedUrl = url.parse(properties.url);\n\n        require('./HttpHandlerUtil').sendPostCall(parsedUrl, payload, queryParams, null, error => {\n          this.handlePostResponse(properties, payload, error);\n        });\n      }\n    } catch (err) {\n      let endPoint = properties.url;\n\n      logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.IMPRESSION_FAILED, {\n          file: FileNameEnum.EventDispatcherUtil,\n          endPoint,\n          err\n        })\n      );\n    }\n\n    return false;\n  },\n\n  handlePostResponse: function(properties, payload, error) {\n    let endPoint = properties.url;\n\n    if (error) {\n      logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.IMPRESSION_FAILED, {\n          file,\n          endPoint: endPoint,\n          err: error\n        })\n      );\n      return false;\n    } else {\n      let event = `${properties.en} event`;\n      if (properties.en === EventEnum.VWO_SYNC_VISITOR_PROP) {\n        delete payload.d.visitor.props.vwo_fs_environment;\n        event = `visitor property:${JSON.stringify(payload.d.visitor.props)}`;\n      }\n\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.IMPRESSION_SUCCESS_FOR_EVENT_ARCH, {\n          file,\n          endPoint,\n          a: properties.a,\n          event: event\n        })\n      );\n\n      return true;\n    }\n  }\n};\n\nmodule.exports = EventDispatcher;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\nconst logger = logging.getLogger();\nconst file = FileNameEnum.HttpImageUtil;\n\nconst noop = () => {};\n\nconst printLog = (url, queryParams) => {\n  const properties = new URLSearchParams(queryParams);\n\n  const baseParams = {\n    file,\n    endPoint: `https://${url.host}${url.pathname}`,\n    accountId: properties && properties.get('account_id')\n  };\n  let params = {};\n  if (baseParams.endPoint.includes('push')) {\n    let customVariables = JSON.parse(properties.get('tags')).u;\n    params = Object.assign({}, baseParams, { customVariables: customVariables });\n    params.mainKeys = `customDimension:${JSON.stringify(params.customVariables)}`;\n  } else {\n    params = Object.assign({}, baseParams, {\n      campaignId: properties && properties.get('experiment_id'),\n      variationId: properties && properties.get('combination')\n    });\n    params.mainKeys = `campaignId:${params.campaignId} and variationId:${params.variationId}`;\n  }\n  logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.IMPRESSION_SUCCESS, params));\n};\n\nconst HttpImageUtil = {\n  sendCall: function(url, queryParams, options = {}) {\n    let endPoint = `https://${url.host}${url.pathname}${queryParams}`;\n\n    let { successCallback, errorCallback } = options;\n\n    errorCallback = errorCallback || successCallback;\n\n    let isCallbackCalled = false;\n\n    let img = new Image();\n\n    this.handleGetCall(url, queryParams, img, successCallback, errorCallback, endPoint, isCallbackCalled);\n  },\n\n  handleGetCall: function(url, queryParams, img, successCallback, errorCallback, endPoint, isCallbackCalled) {\n    successCallback = successCallback || noop;\n    errorCallback = errorCallback || noop;\n\n    img.onload = function() {\n      if (isCallbackCalled) {\n        return;\n      }\n      isCallbackCalled = true;\n      successCallback(null, { status: 'success' });\n      printLog(url, queryParams);\n    };\n\n    img.onerror = function() {\n      if (isCallbackCalled) {\n        return;\n      }\n      isCallbackCalled = true;\n      errorCallback(null, { status: 'success' });\n      printLog(url, queryParams);\n    };\n\n    img.src = endPoint;\n\n    return img;\n  }\n};\nmodule.exports = HttpImageUtil;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst CampaignUtil = require('../utils/CampaignUtil');\nconst FunctionUtil = require('../utils/FunctionUtil');\nconst SettingsFileUtil = require('../utils/SettingsFileUtil');\n\nconst logging = require('./logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst validateSettingsFile = require('../schemas/SettingsFileSchema');\nconst { isObject } = require('../utils/DataTypeUtil');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\n\nconst file = FileNameEnum.SettingsFileManager;\n\nclass SettingsFileManager {\n  // PRIVATE METHODS\n\n  constructor(config) {\n    if (config) {\n      if (\n        (config.settingsFile && isObject(config.settingsFile.campaigns)) ||\n        (config.settingsFile && !config.settingsFile.campaigns)\n      ) {\n        config.settingsFile.campaigns = [];\n      }\n\n      this._configObj = config;\n      this._clonedSettingsFile = config.settingsFile ? FunctionUtil.cloneObject(config.settingsFile) : null;\n    } else {\n      this._configObj = null;\n      this._clonedSettingsFile = null;\n    }\n  }\n\n  _setVariationBucketing(campaign) {\n    CampaignUtil.setVariationAllocation(campaign);\n  }\n\n  // PUBLIC METHODS\n\n  isSettingsFileValid() {\n    if (!this._configObj || !this._clonedSettingsFile) {\n      return false;\n    }\n    let isValidSettingsFile = validateSettingsFile(this._clonedSettingsFile);\n\n    if (!isValidSettingsFile) {\n      this._configObj.logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.SETTINGS_FILE_CORRUPTED, {\n          file\n        })\n      );\n\n      return false;\n    }\n\n    return true;\n  }\n\n  checkAndPoll() {\n    if (!this._configObj.pollingInterval || !this._configObj.sdkKey) {\n      return;\n    }\n\n    let lastSettingsFile = JSON.stringify(this._clonedSettingsFile);\n    setInterval(() => {\n      SettingsFileUtil.get(this._clonedSettingsFile.accountId, this._configObj.sdkKey)\n        .then(latestSettingsFile => {\n          this._configObj.logger.log(\n            LogLevelEnum.INFO,\n            LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.POLLING_SUCCESS, {\n              file,\n              accountId: this._clonedSettingsFile.accountId\n            })\n          );\n          const stringifiedLatestSettingsFile = JSON.stringify(latestSettingsFile);\n\n          if (stringifiedLatestSettingsFile !== lastSettingsFile) {\n            lastSettingsFile = stringifiedLatestSettingsFile;\n\n            this.updateSettingsFile(latestSettingsFile);\n\n            this._configObj.logger.log(\n              LogLevelEnum.INFO,\n              LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.SETTINGS_FILE_UPDATED, {\n                file,\n                accountId: this._clonedSettingsFile.accountId\n              })\n            );\n          } else {\n            this._configObj.logger.log(\n              LogLevelEnum.INFO,\n              LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.SETTINGS_NOT_UPDATED, {\n                file,\n                accountId: this._clonedSettingsFile.accountId\n              })\n            );\n          }\n        })\n        .catch(_e => {\n          this._configObj.logger.log(\n            LogLevelEnum.ERROR,\n            LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.POLLING_FAILED, {\n              file,\n              accountId: this._clonedSettingsFile.accountId\n            })\n          );\n        });\n    }, this._configObj.pollingInterval);\n\n    this._configObj.logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.STARTED_POLLING, {\n        file,\n        pollingInterval: this._configObj.pollingInterval\n      })\n    );\n  }\n  processSettingsFile() {\n    let settingsFile = this._clonedSettingsFile;\n\n    for (let i = 0; i < settingsFile.campaigns.length; i++) {\n      let campaign = settingsFile.campaigns[i];\n\n      this._setVariationBucketing(campaign);\n    }\n\n    this._configObj.logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.SETTINGS_FILE_PROCESSED, {\n        file\n      })\n    );\n\n    return settingsFile;\n  }\n\n  /**\n   * Fetch latest settings-file and update so that vwoClientInstance could use latest settings\n   * Helpful especially when using webhooks\n   *\n   * @param {Number} accountId\n   * @param {String} sdkKey\n   *\n   * @return {Promise}\n   */\n  getAndUpdateSettingsFile(accountId = this._clonedSettingsFile.accountId, sdkKey = this._clonedSettingsFile.sdkKey) {\n    return new Promise((resolve, _reject) => {\n      SettingsFileUtil.get(accountId, sdkKey, null, { isViaWebhook: true })\n        .then(settings => {\n          this.updateSettingsFile(settings);\n          resolve(settings);\n        })\n        .catch(_err => {});\n    });\n  }\n\n  /**\n   * Update the settings-file on the instance so that latest settings could be used from next hit onwards\n   * @param {Object} settings\n   */\n  updateSettingsFile(settings) {\n    this._clonedSettingsFile = FunctionUtil.cloneObject(settings);\n    this.processSettingsFile();\n  }\n\n  getConfig() {\n    return this._configObj;\n  }\n\n  getSettingsFile(api) {\n    if (!this._clonedSettingsFile) {\n      this._configObj.logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.API_HAS_CORRUPTED_SETTINGS_FILE, {\n          file,\n          api\n        })\n      );\n    }\n    return this._clonedSettingsFile;\n  }\n}\nmodule.exports = SettingsFileManager;\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet { validate, number, string, boolean, array, object, optional, union, type, record } = require('superstruct');\n\nconst campaignGoalSchema = type({\n  id: union([number(), string()]),\n  identifier: string(),\n  type: string(),\n  revenueProp: optional(string())\n});\n\nconst variableObjectSchema = type({\n  id: union([number(), string()]),\n  type: string(),\n  key: string(),\n  value: union([number(), string(), boolean()])\n});\n\nconst campaignVariationSchema = type({\n  id: union([number(), string()]),\n  name: string(),\n  weight: union([number(), string()]),\n  changes: optional(object()),\n  segments: optional(object()),\n  variables: optional(union([object(), array(variableObjectSchema)])),\n  isFeatureEnabled: optional(boolean()),\n  startVariationAllocation: optional(number()),\n  endVariationAllocation: optional(number())\n});\n\nconst campaignObjectSchema = type({\n  id: union([number(), string()]),\n  type: string(),\n  key: string(),\n  status: string(),\n  name: string(),\n  isBucketingSeedEnabled: optional(boolean()),\n  percentTraffic: number(),\n  goals: union([object(), array(campaignGoalSchema)]),\n  variations: union([object(), array(campaignVariationSchema)]),\n  variables: optional(union([object(), array(variableObjectSchema)])),\n  segments: object(),\n  isForcedVariationEnabled: optional(boolean()),\n  isUserListEnabled: optional(boolean())\n});\n\nconst groupSchema = type({\n  groupName: string(),\n  campaigns: array(number())\n});\n\nconst settingsFileSchema = type({\n  sdkKey: optional(string()),\n  version: union([number(), string()]),\n  accountId: union([number(), string()]),\n  campaigns: array(campaignObjectSchema),\n  campaignGroups: optional(record(string(), number())),\n  isEventArchEnabled: optional(boolean()),\n  groups: optional(union([object(), record(string(), groupSchema)]))\n});\n\nconst validateSettingsFile = function(settings) {\n  const [error] = validate(settings, settingsFileSchema);\n  return !error;\n};\n\nmodule.exports = validateSettingsFile;\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n/**\n * Convert a validation result to an iterable of failures.\n */\nfunction* toFailures(result, context) {\n  if (result === true) ; else if (result === false) {\n    yield context.fail();\n  } else {\n    yield* result;\n  }\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nfunction iteratorShift(input) {\n  const {\n    done,\n    value\n  } = input.next();\n  return done ? undefined : value;\n}\n\n/**\n * `Struct` objects encapsulate the schema for a specific data type (with\n * optional coercion). You can then use the `assert`, `is` or `validate` helpers\n * to validate unknown data against a struct.\n */\n\nclass Struct {\n  constructor(props) {\n    const {\n      type,\n      schema,\n      coercer = value => value,\n      validator = () => [],\n      refiner = () => []\n    } = props;\n    this.type = type;\n    this.schema = schema;\n    this.coercer = coercer;\n    this.validator = validator;\n    this.refiner = refiner;\n  }\n\n}\n/**\n * `StructError` objects are thrown (or returned) by Superstruct when its\n * validation fails. The error represents the first error encountered during\n * validation. But they also have an `error.failures` property that holds\n * information for all of the failures encountered.\n */\n\nclass StructError extends TypeError {\n  constructor(failure, moreFailures) {\n    const {\n      path,\n      value,\n      type,\n      branch\n    } = failure,\n          rest = _objectWithoutProperties(failure, [\"path\", \"value\", \"type\", \"branch\"]);\n\n    const message = `Expected a value of type \\`${type}\\`${path.length ? ` for \\`${path.join('.')}\\`` : ''} but received \\`${JSON.stringify(value)}\\`.`;\n    let failuresResult;\n\n    function failures() {\n      if (!failuresResult) {\n        failuresResult = [failure, ...moreFailures];\n      }\n\n      return failuresResult;\n    }\n\n    super(message);\n    this.value = value;\n    Object.assign(this, rest);\n    this.type = type;\n    this.path = path;\n    this.branch = branch;\n    this.failures = failures;\n    this.stack = new Error().stack;\n    this.__proto__ = StructError.prototype;\n  }\n\n}\n/**\n * Assert that a value passes a `Struct`, throwing if it doesn't.\n */\n\nfunction assert(value, struct) {\n  const result = validate(value, struct);\n\n  if (result[0]) {\n    throw result[0];\n  }\n}\n/**\n * Coerce a value with the coercion logic of `Struct` and validate it.\n */\n\nfunction coerce(value, struct) {\n  const ret = struct.coercer(value);\n  assert(ret, struct);\n  return ret;\n}\n/**\n * Check if a value passes a `Struct`.\n */\n\nfunction is(value, struct) {\n  const result = validate(value, struct);\n  return !result[0];\n}\n/**\n * Validate a value against a `Struct`, returning an error if invalid.\n */\n\nfunction validate(value, struct, coercing = false) {\n  if (coercing) {\n    value = struct.coercer(value);\n  }\n\n  const failures = check(value, struct);\n  const failure = iteratorShift(failures);\n\n  if (failure) {\n    const error = new StructError(failure, failures);\n    return [error, undefined];\n  } else {\n    return [undefined, value];\n  }\n}\n/**\n * Check a value against a `Struct`, returning an iterable of failures.\n */\n\nfunction* check(value, struct, path = [], branch = []) {\n  const {\n    type\n  } = struct;\n  const ctx = {\n    value,\n    type,\n    branch,\n    path,\n\n    fail(props = {}) {\n      return _objectSpread2({\n        value,\n        type,\n        path,\n        branch: [...branch, value]\n      }, props);\n    },\n\n    check(v, s, parent, key) {\n      const p = parent !== undefined ? [...path, key] : path;\n      const b = parent !== undefined ? [...branch, parent] : branch;\n      return check(v, s, p, b);\n    }\n\n  };\n  const failures = toFailures(struct.validator(value, ctx), ctx);\n  const failure = iteratorShift(failures);\n\n  if (failure) {\n    yield failure;\n    yield* failures;\n  } else {\n    yield* toFailures(struct.refiner(value, ctx), ctx);\n  }\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n */\n\nfunction coercion(struct, coercer) {\n  const fn = struct.coercer;\n  return new Struct(_objectSpread2(_objectSpread2({}, struct), {}, {\n    coercer: value => {\n      return fn(coercer(value));\n    }\n  }));\n}\n/**\n * Augment a struct to coerce a default value for missing values.\n *\n * Note: You must use `coerce(value, Struct)` on the value before validating it\n * to have the value defaulted!\n */\n\nfunction defaulted(S, fallback, strict) {\n  return coercion(S, x => {\n    const f = typeof fallback === 'function' ? fallback() : fallback;\n\n    if (x === undefined) {\n      return f;\n    }\n\n    if (strict !== true && isPlainObject(x) && isPlainObject(f)) {\n      const ret = _objectSpread2({}, x);\n\n      let changed = false;\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key];\n          changed = true;\n        }\n      }\n\n      if (changed) {\n        return ret;\n      }\n    }\n\n    return x;\n  });\n}\n/**\n * Coerce a value to mask its properties to only that defined in the struct.\n */\n\nfunction masked(S) {\n  return coercion(S, x => {\n    if (!isPlainObject(x)) {\n      return x;\n    }\n\n    const ret = {};\n\n    for (const key in S.schema) {\n      ret[key] = x[key];\n    }\n\n    return ret;\n  });\n}\n/**\n * Check if a value is a plain object.\n */\n\nfunction isPlainObject(value) {\n  if (Object.prototype.toString.call(value) !== '[object Object]') {\n    return false;\n  }\n\n  const prototype = Object.getPrototypeOf(value);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Augment a string or array struct to constrain its length to zero.\n */\n\nfunction empty(S) {\n  return refinement(S, `${S.type} & Empty`, value => {\n    return value.length === 0;\n  });\n}\n/**\n * Augment a string or array struct to constrain its length to being between a\n * minimum and maximum size.\n */\n\nfunction length(S, min, max) {\n  return refinement(S, `${S.type} & Length<${min},${max}>`, value => {\n    return min < value.length && value.length < max;\n  });\n}\n/**\n * Refine a string struct to match a specific regexp pattern.\n */\n\nfunction pattern(S, regexp) {\n  return refinement(S, `${S.type} & Pattern<${regexp.source}>`, value => {\n    return regexp.test(value);\n  });\n}\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n */\n\nfunction refinement(struct, type, refiner) {\n  const fn = struct.refiner;\n  return new Struct(_objectSpread2(_objectSpread2({}, struct), {}, {\n    type,\n\n    *refiner(value, fail) {\n      yield* toFailures(fn(value, fail), fail);\n      yield* toFailures(refiner(value, fail), fail);\n    }\n\n  }));\n}\n\n/**\n * Validate any value.\n */\n\nfunction any() {\n  return struct('any', () => true);\n}\nfunction array(Element) {\n  return new Struct({\n    type: `Array<${Element ? Element.type : 'unknown'}>`,\n    schema: Element,\n    coercer: value => {\n      return Element && Array.isArray(value) ? value.map(v => coerce(v, Element)) : value;\n    },\n\n    *validator(value, ctx) {\n      if (!Array.isArray(value)) {\n        yield ctx.fail();\n        return;\n      }\n\n      if (Element) {\n        for (const [i, v] of value.entries()) {\n          yield* ctx.check(v, Element, value, i);\n        }\n      }\n    }\n\n  });\n}\n/**\n * Validate that boolean values.\n */\n\nfunction boolean() {\n  return struct('boolean', value => {\n    return typeof value === 'boolean';\n  });\n}\n/**\n * Validate that `Date` values.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nfunction date() {\n  return struct('Date', value => {\n    return value instanceof Date && !isNaN(value.getTime());\n  });\n}\n/**\n * Validate that a value dynamically, determing which struct to use at runtime.\n */\n\nfunction dynamic(fn) {\n  return struct('Dynamic<...>', (value, ctx) => {\n    return ctx.check(value, fn(value, ctx));\n  });\n}\nfunction enums(values) {\n  return struct(`Enum<${values.map(toLiteralString)}>`, value => {\n    return values.includes(value);\n  });\n}\n/**\n * Validate that a value is a function.\n */\n\nfunction func() {\n  return struct('Function', value => {\n    return typeof value === 'function';\n  });\n}\n/**\n * Validate that a value is an instance of a class.\n */\n\nfunction instance(Class) {\n  return struct(`InstanceOf<${Class.name}>`, value => {\n    return value instanceof Class;\n  });\n}\nfunction intersection(Structs) {\n  return struct(Structs.map(s => s.type).join(' & '), function* (value, ctx) {\n    for (const S of Structs) {\n      yield* ctx.check(value, S);\n    }\n  });\n}\n/**\n * Validate a value lazily, by constructing the struct right before the first\n * validation. This is useful for cases where you want to have self-referential\n * structs for nested data structures.\n */\n\nfunction lazy(fn) {\n  let S;\n  return struct('Lazy<...>', (value, ctx) => {\n    if (!S) {\n      S = fn();\n    }\n\n    return ctx.check(value, S);\n  });\n}\nfunction literal(constant) {\n  return struct(`Literal<${toLiteralString(constant)}>`, value => {\n    return value === constant;\n  });\n}\n/**\n * Validate that a value is a map with specific key and value entries.\n */\n\nfunction map(Key, Value) {\n  return struct(`Map<${Key.type},${Value.type}>`, function* (value, ctx) {\n    if (!(value instanceof Map)) {\n      yield ctx.fail();\n      return;\n    }\n\n    for (const [k, v] of value.entries()) {\n      yield* ctx.check(k, Key, value, k);\n      yield* ctx.check(v, Value, value, k);\n    }\n  });\n}\n/**\n * Validate that a value always fails.\n */\n\nfunction never() {\n  return struct('never', () => false);\n}\n/**\n * Augment a struct to make it accept `null` values.\n */\n\nfunction nullable(S) {\n  return new Struct({\n    type: `${S.type} | null`,\n    schema: S.schema,\n    validator: (value, ctx) => {\n      return value === null || ctx.check(value, S);\n    }\n  });\n}\n/**\n * Validate that a value is a number.\n */\n\nfunction number() {\n  return struct(`number`, value => {\n    return typeof value === 'number' && !isNaN(value);\n  });\n}\nfunction object(Structs) {\n  const knowns = Structs ? Object.keys(Structs) : [];\n  const Never = never();\n  return new Struct({\n    type: Structs ? `Object<{${knowns.join(',')}}>` : 'Object',\n    schema: Structs ? Structs : null,\n    coercer: Structs ? createObjectCoercer(Structs) : x => x,\n\n    *validator(value, ctx) {\n      if (typeof value !== 'object' || value == null) {\n        yield ctx.fail();\n        return;\n      }\n\n      if (Structs) {\n        const unknowns = new Set(Object.keys(value));\n\n        for (const key of knowns) {\n          unknowns.delete(key);\n          const Value = Structs[key];\n          const v = value[key];\n          yield* ctx.check(v, Value, value, key);\n        }\n\n        for (const key of unknowns) {\n          const v = value[key];\n          yield* ctx.check(v, Never, value, key);\n        }\n      }\n    }\n\n  });\n}\n/**\n * Augment a struct to make it optionally accept `undefined` values.\n */\n\nfunction optional(S) {\n  return new Struct({\n    type: `${S.type}?`,\n    schema: S.schema,\n    validator: (value, ctx) => {\n      return value === undefined || ctx.check(value, S);\n    }\n  });\n}\n/**\n * Validate that a partial object with specific entry values.\n */\n\nfunction partial(Structs) {\n  if (Structs instanceof Struct) {\n    Structs = Structs.schema;\n  }\n\n  const knowns = Object.keys(Structs);\n  const Never = never();\n  return new Struct({\n    type: `Partial<{${knowns.join(',')}}>`,\n    schema: Structs,\n    coercer: createObjectCoercer(Structs),\n\n    *validator(value, ctx) {\n      if (typeof value !== 'object' || value == null) {\n        yield ctx.fail();\n        return;\n      }\n\n      const unknowns = new Set(Object.keys(value));\n\n      for (const key of knowns) {\n        unknowns.delete(key);\n\n        if (!(key in value)) {\n          continue;\n        }\n\n        const Value = Structs[key];\n        const v = value[key];\n        yield* ctx.check(v, Value, value, key);\n      }\n\n      for (const key of unknowns) {\n        const v = value[key];\n        yield* ctx.check(v, Never, value, key);\n      }\n    }\n\n  });\n}\n/**\n * Validate that a value is a record with specific key and\n * value entries.\n */\n\nfunction record(Key, Value) {\n  return struct(`Record<${Key.type},${Value.type}>`, function* (value, ctx) {\n    if (typeof value !== 'object' || value == null) {\n      yield ctx.fail();\n      return;\n    }\n\n    for (const k in value) {\n      const v = value[k];\n      yield* ctx.check(k, Key, value, k);\n      yield* ctx.check(v, Value, value, k);\n    }\n  });\n}\n/**\n * Validate that a set of values matches a specific type.\n */\n\nfunction set(Element) {\n  return struct(`Set<${Element.type}>`, (value, ctx) => {\n    if (!(value instanceof Set)) {\n      return false;\n    }\n\n    for (const val of value) {\n      const [failure] = ctx.check(val, Element);\n\n      if (failure) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n}\n/**\n * Validate that a value is a string.\n */\n\nfunction string() {\n  return struct('string', value => {\n    return typeof value === 'string';\n  });\n}\n/**\n * Define a `Struct` instance with a type and validation function.\n */\n\nfunction struct(name, validator) {\n  return new Struct({\n    type: name,\n    validator,\n    schema: null\n  });\n}\nfunction tuple(Elements) {\n  const Never = never();\n  return struct(`[${Elements.map(s => s.type).join(',')}]`, function* (value, ctx) {\n    if (!Array.isArray(value)) {\n      yield ctx.fail();\n      return;\n    }\n\n    for (const [index, Element] of Elements.entries()) {\n      const v = value[index];\n      yield* ctx.check(v, Element, value, index);\n    }\n\n    if (value.length > Elements.length) {\n      const index = Elements.length;\n      const v = value[index];\n      yield* ctx.check(v, Never, value, index);\n    }\n  });\n}\n/**\n * Validate that a value matches a specific strutural interface, like the\n * structural typing that TypeScript uses.\n */\n\nfunction type(Structs) {\n  const keys = Object.keys(Structs);\n  return struct(`Type<{${keys.join(',')}}>`, function* (value, ctx) {\n    if (typeof value !== 'object' || value == null) {\n      yield ctx.fail();\n      return;\n    }\n\n    for (const key of keys) {\n      const Value = Structs[key];\n      const v = value[key];\n      yield* ctx.check(v, Value, value, key);\n    }\n  });\n}\nfunction union(Structs) {\n  return struct(`${Structs.map(s => s.type).join(' | ')}`, function* (value, ctx) {\n    for (const S of Structs) {\n      const [...failures] = ctx.check(value, S);\n\n      if (failures.length === 0) {\n        return;\n      }\n    }\n\n    yield ctx.fail();\n  });\n}\n/**\n * Convert a value to a literal string.\n */\n\nfunction toLiteralString(value) {\n  return typeof value === 'string' ? `\"${value.replace(/\"/g, '\"')}\"` : `${value}`;\n}\n/**\n * Coerce the values of an object-like struct.\n */\n\n\nfunction createObjectCoercer(Structs) {\n  const knowns = Object.keys(Structs);\n  return value => {\n    if (typeof value !== 'object' || value == null) {\n      return value;\n    }\n\n    const ret = {};\n    const unknowns = new Set(Object.keys(value));\n\n    for (const key of knowns) {\n      unknowns.delete(key);\n      const Value = Structs[key];\n      const v = value[key];\n      ret[key] = coerce(v, Value);\n    }\n\n    for (const key of unknowns) {\n      ret[key] = value[key];\n    }\n\n    return ret;\n  };\n}\n\nexport { Struct, StructError, any, array, assert, boolean, coerce, coercion, date, defaulted, dynamic, empty, enums, func, instance, intersection, is, lazy, length, literal, map, masked, never, nullable, number, object, optional, partial, pattern, record, refinement, set, string, struct, tuple, type, union, validate };\n//# sourceMappingURL=index.es.js.map\n","/**\n * Copyright 2019-2021 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst { LogManager } = require('./logging');\n\nclass UsageStats {\n  constructor() {\n    this.data = {};\n  }\n\n  /**\n   * Collect the usage stats from the params passed at the time of instantiating VWO and send them to VWO Server\n   * @param {Object} config    config passed at the time of instantiation.\n   */\n  collectUsageStats(config) {\n    this.data['eb'] = Number(!!config.batchEvents);\n    this.data['ig'] = Number(!!config.integrations);\n    this.data['ss'] = Number(!!config.userStorageService);\n    this.data['cl'] = Number(!(config.logger instanceof LogManager));\n    this.data['ll'] = Number(config.logging && config.logging.level);\n    this.data['tr'] = Number(config.shouldTrackReturningUser);\n    this.data['gt'] = Number(!!config.goalTypeToTrack);\n    this.data['pi'] = Number(!!config.pollingInterval);\n\n    Object.keys(this.data).forEach(function(key) {\n      if (!this.data[key]) {\n        delete this.data[key];\n      }\n    }, this);\n  }\n\n  /**\n   * Get the collected usage stats.\n   * @returns     collected usage stats data\n   */\n  getUsageStats() {\n    if (Object.keys(this.data).length > 0) {\n      this.data['_l'] = 1;\n    }\n    return this.data;\n  }\n}\n\nmodule.exports = UsageStats;\n"],"sourceRoot":""}